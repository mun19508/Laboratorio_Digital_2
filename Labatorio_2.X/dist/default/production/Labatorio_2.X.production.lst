

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 03 22:06:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0009                     _PORTE	set	9
   287  0008                     _PORTD	set	8
   288  0007                     _PORTC	set	7
   289  0005                     _PORTA	set	5
   290  000B                     _INTCONbits	set	11
   291  001F                     _ADCON0bits	set	31
   292  001E                     _ADRESH	set	30
   293  000C                     _PIR1bits	set	12
   294  009F                     _ADCON1bits	set	159
   295  008C                     _PIE1bits	set	140
   296  0086                     _TRISBbits	set	134
   297  0089                     _TRISE	set	137
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0085                     _TRISA	set	133
   301  0189                     _ANSELHbits	set	393
   302  0188                     _ANSELbits	set	392
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0012                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0012                     __end_of__initialization:
   320  0012  0183               	clrf	3
   321  0013  120A  118A  2994   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0078                     __pbssCOMMON:
   325  0078                     _nibble_h:
   326  0078                     	ds	1
   327  0079                     _nibble_l:
   328  0079                     	ds	1
   329  007A                     _display_adc:
   330  007A                     	ds	1
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_start_ch:
   335  0070                     ?_Select_ch:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_ISR:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_ISR:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	3
   350  0073                     ?_start_adc:
   351  0073                     ??_start_ch:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     ??_Select_ch:	
   355                           ; 1 bytes @ 0x3
   356                           
   357  0073                     start_adc@isr:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     start_adc@Vref:
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     start_adc@justRL:
   368  0075                     start_ch@channel:	
   369                           ; 1 bytes @ 0x5
   370                           
   371  0075                     Select_ch@channel:	
   372                           ; 1 bytes @ 0x5
   373                           
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ??_start_adc:
   378                           
   379                           ; 1 bytes @ 0x6
   380  0076                     	ds	2
   381  0078                     ??_main:
   382                           
   383                           	psect	cstackBANK0
   384  0020                     __pcstackBANK0:	
   385                           ; 1 bytes @ 0x8
   386                           
   387  0020                     start_adc@frec:
   388                           
   389                           ; 1 bytes @ 0x0
   390  0020                     	ds	1
   391                           
   392                           	psect	maintext
   393  0194                     __pmaintext:	
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 48 in file "lab_2.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    2
   419 ;; This function calls:
   420 ;;		_Select_ch
   421 ;;		_start_adc
   422 ;;		_start_ch
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  0194                     _main:
   431  0194                     l1048:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   434                           
   435  0194  178B               	bsf	11,7	;volatile
   436  0195  170B               	bsf	11,6	;volatile
   437  0196                     l1050:
   438  0196  1683               	bsf	3,5	;RP0=1, select bank3
   439  0197  1703               	bsf	3,6	;RP1=1, select bank3
   440  0198  0188               	clrf	8	;volatile
   441  0199  0189               	clrf	9	;volatile
   442  019A                     l1052:
   443  019A  01F3               	clrf	start_adc@isr
   444  019B  0AF3               	incf	start_adc@isr,f
   445  019C  01F4               	clrf	start_adc@Vref
   446  019D  01F5               	clrf	start_adc@justRL
   447  019E  3002               	movlw	2
   448  019F  120A  118A  2132  120A  118A  	fcall	_start_adc
   449  01A4                     l1054:
   450  01A4  3008               	movlw	8
   451  01A5  120A  118A  20C3  120A  118A  	fcall	_start_ch
   452  01AA                     l1056:
   453  01AA  3008               	movlw	8
   454  01AB  120A  118A  2016  120A  118A  	fcall	_Select_ch
   455  01B0                     l1058:
   456  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   457  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   458  01B2  0185               	clrf	5	;volatile
   459  01B3                     l1060:
   460  01B3  0187               	clrf	7	;volatile
   461  01B4                     l1062:
   462  01B4  0188               	clrf	8	;volatile
   463  01B5                     l1064:
   464  01B5  0189               	clrf	9	;volatile
   465  01B6                     l1066:
   466  01B6  1406               	bsf	6,0	;volatile
   467  01B7                     l1068:
   468  01B7  1486               	bsf	6,1	;volatile
   469  01B8                     l1070:
   470  01B8  1506               	bsf	6,2	;volatile
   471  01B9                     l1072:
   472  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   473  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   474  01BB  0185               	clrf	5	;volatile
   475  01BC                     l1074:
   476  01BC  0187               	clrf	7	;volatile
   477  01BD                     l1076:
   478  01BD  0188               	clrf	8	;volatile
   479  01BE                     l1078:
   480  01BE  0189               	clrf	9	;volatile
   481  01BF                     l53:
   482  01BF                     l54:
   483  01BF  29BF               	goto	l53
   484  01C0  120A  118A  280C   	ljmp	start
   485  01C3                     __end_of_main:
   486                           
   487                           	psect	text1
   488  00C3                     __ptext1:	
   489 ;; *************** function _start_ch *****************
   490 ;; Defined at:
   491 ;;		line 52 in file "ADC_LIB.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  channel         1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  channel         1    5[COMMON] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0
   507 ;;      Temps:          2       0       0       0       0
   508 ;;      Totals:         3       0       0       0       0
   509 ;;Total ram usage:        3 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _start_ch
   521  00C3                     _start_ch:
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _start_ch: [wreg-fsr0h+status,2+status,0]
   525                           ;start_ch@channel stored from wreg
   526  00C3  00F5               	movwf	start_ch@channel
   527  00C4                     l744:
   528                           
   529                           ;ADC_LIB.c: 53:     switch (channel) {
   530  00C4  28FD               	goto	l748
   531  00C5                     l90:	
   532                           ;ADC_LIB.c: 54:         case 0:
   533                           
   534                           
   535                           ;ADC_LIB.c: 55:             ANSELbits.ANS0 = 1;
   536  00C5  1683               	bsf	3,5	;RP0=1, select bank3
   537  00C6  1703               	bsf	3,6	;RP1=1, select bank3
   538  00C7  1408               	bsf	8,0	;volatile
   539                           
   540                           ;ADC_LIB.c: 56:             break;
   541  00C8  2931               	goto	l105
   542  00C9                     l92:	
   543                           ;ADC_LIB.c: 57:         case 1:
   544                           
   545                           
   546                           ;ADC_LIB.c: 58:             ANSELbits.ANS1 = 1;
   547  00C9  1683               	bsf	3,5	;RP0=1, select bank3
   548  00CA  1703               	bsf	3,6	;RP1=1, select bank3
   549  00CB  1488               	bsf	8,1	;volatile
   550                           
   551                           ;ADC_LIB.c: 59:             break;
   552  00CC  2931               	goto	l105
   553  00CD                     l93:	
   554                           ;ADC_LIB.c: 60:         case 2:
   555                           
   556                           
   557                           ;ADC_LIB.c: 61:             ANSELbits.ANS2 = 1;
   558  00CD  1683               	bsf	3,5	;RP0=1, select bank3
   559  00CE  1703               	bsf	3,6	;RP1=1, select bank3
   560  00CF  1508               	bsf	8,2	;volatile
   561                           
   562                           ;ADC_LIB.c: 62:             break;
   563  00D0  2931               	goto	l105
   564  00D1                     l94:	
   565                           ;ADC_LIB.c: 63:         case 3:
   566                           
   567                           
   568                           ;ADC_LIB.c: 64:             ANSELbits.ANS3 = 1;
   569  00D1  1683               	bsf	3,5	;RP0=1, select bank3
   570  00D2  1703               	bsf	3,6	;RP1=1, select bank3
   571  00D3  1588               	bsf	8,3	;volatile
   572                           
   573                           ;ADC_LIB.c: 65:             break;
   574  00D4  2931               	goto	l105
   575  00D5                     l95:	
   576                           ;ADC_LIB.c: 66:         case 4:
   577                           
   578                           
   579                           ;ADC_LIB.c: 67:             ANSELbits.ANS4 = 1;
   580  00D5  1683               	bsf	3,5	;RP0=1, select bank3
   581  00D6  1703               	bsf	3,6	;RP1=1, select bank3
   582  00D7  1608               	bsf	8,4	;volatile
   583                           
   584                           ;ADC_LIB.c: 68:             break;
   585  00D8  2931               	goto	l105
   586  00D9                     l96:	
   587                           ;ADC_LIB.c: 69:         case 5:
   588                           
   589                           
   590                           ;ADC_LIB.c: 70:             ANSELbits.ANS5 = 1;
   591  00D9  1683               	bsf	3,5	;RP0=1, select bank3
   592  00DA  1703               	bsf	3,6	;RP1=1, select bank3
   593  00DB  1688               	bsf	8,5	;volatile
   594                           
   595                           ;ADC_LIB.c: 71:             break;
   596  00DC  2931               	goto	l105
   597  00DD                     l97:	
   598                           ;ADC_LIB.c: 72:         case 6:
   599                           
   600                           
   601                           ;ADC_LIB.c: 73:             ANSELbits.ANS6 = 1;
   602  00DD  1683               	bsf	3,5	;RP0=1, select bank3
   603  00DE  1703               	bsf	3,6	;RP1=1, select bank3
   604  00DF  1708               	bsf	8,6	;volatile
   605                           
   606                           ;ADC_LIB.c: 74:             break;
   607  00E0  2931               	goto	l105
   608  00E1                     l98:	
   609                           ;ADC_LIB.c: 75:         case 7:
   610                           
   611                           
   612                           ;ADC_LIB.c: 76:             ANSELbits.ANS7 = 1;
   613  00E1  1683               	bsf	3,5	;RP0=1, select bank3
   614  00E2  1703               	bsf	3,6	;RP1=1, select bank3
   615  00E3  1788               	bsf	8,7	;volatile
   616                           
   617                           ;ADC_LIB.c: 77:             break;
   618  00E4  2931               	goto	l105
   619  00E5                     l99:	
   620                           ;ADC_LIB.c: 78:         case 8:
   621                           
   622                           
   623                           ;ADC_LIB.c: 79:             ANSELHbits.ANS8 = 1;
   624  00E5  1683               	bsf	3,5	;RP0=1, select bank3
   625  00E6  1703               	bsf	3,6	;RP1=1, select bank3
   626  00E7  1409               	bsf	9,0	;volatile
   627                           
   628                           ;ADC_LIB.c: 80:             break;
   629  00E8  2931               	goto	l105
   630  00E9                     l100:	
   631                           ;ADC_LIB.c: 81:         case 9:
   632                           
   633                           
   634                           ;ADC_LIB.c: 82:             ANSELHbits.ANS9 = 1;
   635  00E9  1683               	bsf	3,5	;RP0=1, select bank3
   636  00EA  1703               	bsf	3,6	;RP1=1, select bank3
   637  00EB  1489               	bsf	9,1	;volatile
   638                           
   639                           ;ADC_LIB.c: 83:             break;
   640  00EC  2931               	goto	l105
   641  00ED                     l101:	
   642                           ;ADC_LIB.c: 84:         case 10:
   643                           
   644                           
   645                           ;ADC_LIB.c: 85:             ANSELHbits.ANS10 = 1;
   646  00ED  1683               	bsf	3,5	;RP0=1, select bank3
   647  00EE  1703               	bsf	3,6	;RP1=1, select bank3
   648  00EF  1509               	bsf	9,2	;volatile
   649                           
   650                           ;ADC_LIB.c: 86:             break;
   651  00F0  2931               	goto	l105
   652  00F1                     l102:	
   653                           ;ADC_LIB.c: 87:         case 11:
   654                           
   655                           
   656                           ;ADC_LIB.c: 88:             ANSELHbits.ANS11 = 1;
   657  00F1  1683               	bsf	3,5	;RP0=1, select bank3
   658  00F2  1703               	bsf	3,6	;RP1=1, select bank3
   659  00F3  1589               	bsf	9,3	;volatile
   660                           
   661                           ;ADC_LIB.c: 89:             break;
   662  00F4  2931               	goto	l105
   663  00F5                     l103:	
   664                           ;ADC_LIB.c: 90:         case 12:
   665                           
   666                           
   667                           ;ADC_LIB.c: 91:             ANSELHbits.ANS12 = 1;
   668  00F5  1683               	bsf	3,5	;RP0=1, select bank3
   669  00F6  1703               	bsf	3,6	;RP1=1, select bank3
   670  00F7  1609               	bsf	9,4	;volatile
   671                           
   672                           ;ADC_LIB.c: 92:             break;
   673  00F8  2931               	goto	l105
   674  00F9                     l104:	
   675                           ;ADC_LIB.c: 93:         case 13:
   676                           
   677                           
   678                           ;ADC_LIB.c: 94:             ANSELHbits.ANS13 = 1;
   679  00F9  1683               	bsf	3,5	;RP0=1, select bank3
   680  00FA  1703               	bsf	3,6	;RP1=1, select bank3
   681  00FB  1689               	bsf	9,5	;volatile
   682                           
   683                           ;ADC_LIB.c: 95:             break;
   684  00FC  2931               	goto	l105
   685  00FD                     l748:
   686  00FD  0875               	movf	start_ch@channel,w
   687  00FE  00F3               	movwf	??_start_ch
   688  00FF  01F4               	clrf	??_start_ch+1
   689                           
   690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   691                           ; Switch size 1, requested type "simple"
   692                           ; Number of cases is 1, Range of values is 0 to 0
   693                           ; switch strategies available:
   694                           ; Name         Instructions Cycles
   695                           ; simple_byte            4     3 (average)
   696                           ; direct_byte           11     8 (fixed)
   697                           ; jumptable            260     6 (fixed)
   698                           ;	Chosen strategy is simple_byte
   699  0100  0874               	movf	??_start_ch+1,w
   700  0101  3A00               	xorlw	0	; case 0
   701  0102  1903               	skipnz
   702  0103  2905               	goto	l1160
   703  0104  2931               	goto	l105
   704  0105                     l1160:
   705                           
   706                           ; Switch size 1, requested type "simple"
   707                           ; Number of cases is 14, Range of values is 0 to 13
   708                           ; switch strategies available:
   709                           ; Name         Instructions Cycles
   710                           ; simple_byte           43    22 (average)
   711                           ; direct_byte           50     8 (fixed)
   712                           ; jumptable            260     6 (fixed)
   713                           ;	Chosen strategy is simple_byte
   714  0105  0873               	movf	??_start_ch,w
   715  0106  3A00               	xorlw	0	; case 0
   716  0107  1903               	skipnz
   717  0108  28C5               	goto	l90
   718  0109  3A01               	xorlw	1	; case 1
   719  010A  1903               	skipnz
   720  010B  28C9               	goto	l92
   721  010C  3A03               	xorlw	3	; case 2
   722  010D  1903               	skipnz
   723  010E  28CD               	goto	l93
   724  010F  3A01               	xorlw	1	; case 3
   725  0110  1903               	skipnz
   726  0111  28D1               	goto	l94
   727  0112  3A07               	xorlw	7	; case 4
   728  0113  1903               	skipnz
   729  0114  28D5               	goto	l95
   730  0115  3A01               	xorlw	1	; case 5
   731  0116  1903               	skipnz
   732  0117  28D9               	goto	l96
   733  0118  3A03               	xorlw	3	; case 6
   734  0119  1903               	skipnz
   735  011A  28DD               	goto	l97
   736  011B  3A01               	xorlw	1	; case 7
   737  011C  1903               	skipnz
   738  011D  28E1               	goto	l98
   739  011E  3A0F               	xorlw	15	; case 8
   740  011F  1903               	skipnz
   741  0120  28E5               	goto	l99
   742  0121  3A01               	xorlw	1	; case 9
   743  0122  1903               	skipnz
   744  0123  28E9               	goto	l100
   745  0124  3A03               	xorlw	3	; case 10
   746  0125  1903               	skipnz
   747  0126  28ED               	goto	l101
   748  0127  3A01               	xorlw	1	; case 11
   749  0128  1903               	skipnz
   750  0129  28F1               	goto	l102
   751  012A  3A07               	xorlw	7	; case 12
   752  012B  1903               	skipnz
   753  012C  28F5               	goto	l103
   754  012D  3A01               	xorlw	1	; case 13
   755  012E  1903               	skipnz
   756  012F  28F9               	goto	l104
   757  0130  2931               	goto	l105
   758  0131                     l105:
   759  0131  0008               	return
   760  0132                     __end_of_start_ch:
   761                           
   762                           	psect	text2
   763  0132                     __ptext2:	
   764 ;; *************** function _start_adc *****************
   765 ;; Defined at:
   766 ;;		line 3 in file "ADC_LIB.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  frec            1    wreg     unsigned char 
   769 ;;  isr             1    3[COMMON] unsigned char 
   770 ;;  Vref            1    4[COMMON] unsigned char 
   771 ;;  justRL          1    5[COMMON] unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  frec            1    0[BANK0 ] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         3       0       0       0       0
   784 ;;      Locals:         0       1       0       0       0
   785 ;;      Temps:          2       0       0       0       0
   786 ;;      Totals:         5       1       0       0       0
   787 ;;Total ram usage:        6 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _start_adc
   799  0132                     _start_adc:
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _start_adc: [wreg-fsr0h+status,2+status,0]
   803                           ;start_adc@frec stored from wreg
   804  0132  1283               	bcf	3,5	;RP0=0, select bank0
   805  0133  1303               	bcf	3,6	;RP1=0, select bank0
   806  0134  00A0               	movwf	start_adc@frec
   807  0135                     l1022:
   808                           
   809                           ;ADC_LIB.c: 4:     ADCON0bits.ADON = 1;
   810  0135  141F               	bsf	31,0	;volatile
   811                           
   812                           ;ADC_LIB.c: 5:     switch (frec) {
   813  0136  2943               	goto	l1026
   814  0137                     l72:	
   815                           ;ADC_LIB.c: 6:         case 1:
   816                           
   817                           
   818                           ;ADC_LIB.c: 7:             ADCON0bits.ADCS0 = 0;
   819  0137  131F               	bcf	31,6	;volatile
   820                           
   821                           ;ADC_LIB.c: 8:             ADCON0bits.ADCS1 = 0;
   822  0138  139F               	bcf	31,7	;volatile
   823                           
   824                           ;ADC_LIB.c: 9:             break;
   825  0139  2959               	goto	l1028
   826  013A                     l74:	
   827                           ;ADC_LIB.c: 10:         case 2:
   828                           
   829                           
   830                           ;ADC_LIB.c: 11:             ADCON0bits.ADCS0 = 1;
   831  013A  171F               	bsf	31,6	;volatile
   832                           
   833                           ;ADC_LIB.c: 12:             ADCON0bits.ADCS1 = 0;
   834  013B  139F               	bcf	31,7	;volatile
   835                           
   836                           ;ADC_LIB.c: 13:             break;
   837  013C  2959               	goto	l1028
   838  013D                     l75:	
   839                           ;ADC_LIB.c: 14:         case 3:
   840                           
   841                           
   842                           ;ADC_LIB.c: 15:             ADCON0bits.ADCS0 = 0;
   843  013D  131F               	bcf	31,6	;volatile
   844                           
   845                           ;ADC_LIB.c: 16:             ADCON0bits.ADCS1 = 1;
   846  013E  179F               	bsf	31,7	;volatile
   847                           
   848                           ;ADC_LIB.c: 17:             break;
   849  013F  2959               	goto	l1028
   850  0140                     l76:	
   851                           ;ADC_LIB.c: 18:         case 4:
   852                           
   853                           
   854                           ;ADC_LIB.c: 19:             ADCON0bits.ADCS0 = 1;
   855  0140  171F               	bsf	31,6	;volatile
   856                           
   857                           ;ADC_LIB.c: 20:             ADCON0bits.ADCS1 = 1;
   858  0141  179F               	bsf	31,7	;volatile
   859                           
   860                           ;ADC_LIB.c: 21:             break;
   861  0142  2959               	goto	l1028
   862  0143                     l1026:
   863  0143  0820               	movf	start_adc@frec,w
   864  0144  00F6               	movwf	??_start_adc
   865  0145  01F7               	clrf	??_start_adc+1
   866                           
   867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 1, Range of values is 0 to 0
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ; direct_byte           11     8 (fixed)
   874                           ; jumptable            260     6 (fixed)
   875                           ;	Chosen strategy is simple_byte
   876  0146  0877               	movf	??_start_adc+1,w
   877  0147  3A00               	xorlw	0	; case 0
   878  0148  1903               	skipnz
   879  0149  294B               	goto	l1162
   880  014A  2959               	goto	l1028
   881  014B                     l1162:
   882                           
   883                           ; Switch size 1, requested type "simple"
   884                           ; Number of cases is 4, Range of values is 1 to 4
   885                           ; switch strategies available:
   886                           ; Name         Instructions Cycles
   887                           ; simple_byte           13     7 (average)
   888                           ; direct_byte           23    11 (fixed)
   889                           ; jumptable            263     9 (fixed)
   890                           ;	Chosen strategy is simple_byte
   891  014B  0876               	movf	??_start_adc,w
   892  014C  3A01               	xorlw	1	; case 1
   893  014D  1903               	skipnz
   894  014E  2937               	goto	l72
   895  014F  3A03               	xorlw	3	; case 2
   896  0150  1903               	skipnz
   897  0151  293A               	goto	l74
   898  0152  3A01               	xorlw	1	; case 3
   899  0153  1903               	skipnz
   900  0154  293D               	goto	l75
   901  0155  3A07               	xorlw	7	; case 4
   902  0156  1903               	skipnz
   903  0157  2940               	goto	l76
   904  0158  2959               	goto	l1028
   905  0159                     l1028:
   906                           
   907                           ;ADC_LIB.c: 23:     if (isr == 1) {
   908  0159  0373               	decf	start_adc@isr,w
   909  015A  1D03               	btfss	3,2
   910  015B  295D               	goto	u61
   911  015C  295E               	goto	u60
   912  015D                     u61:
   913  015D  2964               	goto	l1032
   914  015E                     u60:
   915  015E                     l1030:
   916                           
   917                           ;ADC_LIB.c: 24:         PIE1bits.ADIE = 1;
   918  015E  1683               	bsf	3,5	;RP0=1, select bank1
   919  015F  1303               	bcf	3,6	;RP1=0, select bank1
   920  0160  170C               	bsf	12,6	;volatile
   921                           
   922                           ;ADC_LIB.c: 25:         PIR1bits.ADIF = 0;
   923  0161  1283               	bcf	3,5	;RP0=0, select bank0
   924  0162  1303               	bcf	3,6	;RP1=0, select bank0
   925  0163  130C               	bcf	12,6	;volatile
   926  0164                     l1032:
   927                           
   928                           ;ADC_LIB.c: 27:     if (justRL == 0) {
   929  0164  0875               	movf	start_adc@justRL,w
   930  0165  1D03               	btfss	3,2
   931  0166  2968               	goto	u71
   932  0167  2969               	goto	u70
   933  0168                     u71:
   934  0168  296D               	goto	l78
   935  0169                     u70:
   936  0169                     l1034:
   937                           
   938                           ;ADC_LIB.c: 28:         ADCON1bits.ADFM = 0;
   939  0169  1683               	bsf	3,5	;RP0=1, select bank1
   940  016A  1303               	bcf	3,6	;RP1=0, select bank1
   941  016B  139F               	bcf	31,7	;volatile
   942                           
   943                           ;ADC_LIB.c: 29:     } else {
   944  016C  297D               	goto	l1038
   945  016D                     l78:
   946                           
   947                           ;ADC_LIB.c: 30:         ADCON1bits.ADFM = 1;
   948  016D  1683               	bsf	3,5	;RP0=1, select bank1
   949  016E  1303               	bcf	3,6	;RP1=0, select bank1
   950  016F  179F               	bsf	31,7	;volatile
   951  0170  297D               	goto	l1038
   952  0171                     l81:	
   953                           ;ADC_LIB.c: 33:         case 0:
   954                           
   955                           
   956                           ;ADC_LIB.c: 34:             ADCON1bits.VCFG0 = 0;
   957  0171  121F               	bcf	31,4	;volatile
   958                           
   959                           ;ADC_LIB.c: 35:             ADCON1bits.VCFG1 = 0;
   960  0172  129F               	bcf	31,5	;volatile
   961                           
   962                           ;ADC_LIB.c: 36:             break;
   963  0173  2993               	goto	l86
   964  0174                     l83:	
   965                           ;ADC_LIB.c: 37:         case 1:
   966                           
   967                           
   968                           ;ADC_LIB.c: 38:             ADCON1bits.VCFG0 = 1;
   969  0174  161F               	bsf	31,4	;volatile
   970                           
   971                           ;ADC_LIB.c: 39:             ADCON1bits.VCFG1 = 0;
   972  0175  129F               	bcf	31,5	;volatile
   973                           
   974                           ;ADC_LIB.c: 40:             break;
   975  0176  2993               	goto	l86
   976  0177                     l84:	
   977                           ;ADC_LIB.c: 41:         case 2:
   978                           
   979                           
   980                           ;ADC_LIB.c: 42:             ADCON1bits.VCFG0 = 0;
   981  0177  121F               	bcf	31,4	;volatile
   982                           
   983                           ;ADC_LIB.c: 43:             ADCON1bits.VCFG1 = 1;
   984  0178  169F               	bsf	31,5	;volatile
   985                           
   986                           ;ADC_LIB.c: 44:             break;
   987  0179  2993               	goto	l86
   988  017A                     l85:	
   989                           ;ADC_LIB.c: 45:         case 3:
   990                           
   991                           
   992                           ;ADC_LIB.c: 46:             ADCON1bits.VCFG0 = 1;
   993  017A  161F               	bsf	31,4	;volatile
   994                           
   995                           ;ADC_LIB.c: 47:             ADCON1bits.VCFG1 = 1;
   996  017B  169F               	bsf	31,5	;volatile
   997                           
   998                           ;ADC_LIB.c: 48:             break;
   999  017C  2993               	goto	l86
  1000  017D                     l1038:
  1001  017D  0874               	movf	start_adc@Vref,w
  1002  017E  00F6               	movwf	??_start_adc
  1003  017F  01F7               	clrf	??_start_adc+1
  1004                           
  1005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1006                           ; Switch size 1, requested type "simple"
  1007                           ; Number of cases is 1, Range of values is 0 to 0
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte            4     3 (average)
  1011                           ; direct_byte           11     8 (fixed)
  1012                           ; jumptable            260     6 (fixed)
  1013                           ;	Chosen strategy is simple_byte
  1014  0180  0877               	movf	??_start_adc+1,w
  1015  0181  3A00               	xorlw	0	; case 0
  1016  0182  1903               	skipnz
  1017  0183  2985               	goto	l1164
  1018  0184  2993               	goto	l86
  1019  0185                     l1164:
  1020                           
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 4, Range of values is 0 to 3
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte           13     7 (average)
  1026                           ; direct_byte           20     8 (fixed)
  1027                           ; jumptable            260     6 (fixed)
  1028                           ;	Chosen strategy is simple_byte
  1029  0185  0876               	movf	??_start_adc,w
  1030  0186  3A00               	xorlw	0	; case 0
  1031  0187  1903               	skipnz
  1032  0188  2971               	goto	l81
  1033  0189  3A01               	xorlw	1	; case 1
  1034  018A  1903               	skipnz
  1035  018B  2974               	goto	l83
  1036  018C  3A03               	xorlw	3	; case 2
  1037  018D  1903               	skipnz
  1038  018E  2977               	goto	l84
  1039  018F  3A01               	xorlw	1	; case 3
  1040  0190  1903               	skipnz
  1041  0191  297A               	goto	l85
  1042  0192  2993               	goto	l86
  1043  0193                     l86:
  1044  0193  0008               	return
  1045  0194                     __end_of_start_adc:
  1046                           
  1047                           	psect	text3
  1048  0016                     __ptext3:	
  1049 ;; *************** function _Select_ch *****************
  1050 ;; Defined at:
  1051 ;;		line 99 in file "ADC_LIB.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  channel         1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  channel         1    5[COMMON] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0
  1068 ;;      Totals:         3       0       0       0       0
  1069 ;;Total ram usage:        3 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _Select_ch
  1081  0016                     _Select_ch:
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1085                           ;Select_ch@channel stored from wreg
  1086  0016  00F5               	movwf	Select_ch@channel
  1087  0017                     l754:
  1088                           
  1089                           ;ADC_LIB.c: 100:     switch (channel) {
  1090  0017  2888               	goto	l758
  1091  0018                     l109:	
  1092                           ;ADC_LIB.c: 101:         case 0:
  1093                           
  1094                           
  1095                           ;ADC_LIB.c: 102:             ADCON0bits.CHS0 = 0;
  1096  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1098  001A  111F               	bcf	31,2	;volatile
  1099                           
  1100                           ;ADC_LIB.c: 103:             ADCON0bits.CHS1 = 0;
  1101  001B  119F               	bcf	31,3	;volatile
  1102                           
  1103                           ;ADC_LIB.c: 104:             ADCON0bits.CHS2 = 0;
  1104  001C  121F               	bcf	31,4	;volatile
  1105                           
  1106                           ;ADC_LIB.c: 105:             ADCON0bits.CHS3 = 0;
  1107  001D  129F               	bcf	31,5	;volatile
  1108                           
  1109                           ;ADC_LIB.c: 106:             break;
  1110  001E  28C2               	goto	l126
  1111  001F                     l111:	
  1112                           ;ADC_LIB.c: 107:         case 1:
  1113                           
  1114                           
  1115                           ;ADC_LIB.c: 108:             ADCON0bits.CHS0 = 1;
  1116  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0021  151F               	bsf	31,2	;volatile
  1119                           
  1120                           ;ADC_LIB.c: 109:             ADCON0bits.CHS1 = 0;
  1121  0022  119F               	bcf	31,3	;volatile
  1122                           
  1123                           ;ADC_LIB.c: 110:             ADCON0bits.CHS2 = 0;
  1124  0023  121F               	bcf	31,4	;volatile
  1125                           
  1126                           ;ADC_LIB.c: 111:             ADCON0bits.CHS3 = 0;
  1127  0024  129F               	bcf	31,5	;volatile
  1128                           
  1129                           ;ADC_LIB.c: 112:             break;
  1130  0025  28C2               	goto	l126
  1131  0026                     l112:	
  1132                           ;ADC_LIB.c: 113:         case 2:
  1133                           
  1134                           
  1135                           ;ADC_LIB.c: 114:             ADCON0bits.CHS0 = 0;
  1136  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0028  111F               	bcf	31,2	;volatile
  1139                           
  1140                           ;ADC_LIB.c: 115:             ADCON0bits.CHS1 = 1;
  1141  0029  159F               	bsf	31,3	;volatile
  1142                           
  1143                           ;ADC_LIB.c: 116:             ADCON0bits.CHS2 = 0;
  1144  002A  121F               	bcf	31,4	;volatile
  1145                           
  1146                           ;ADC_LIB.c: 117:             ADCON0bits.CHS3 = 0;
  1147  002B  129F               	bcf	31,5	;volatile
  1148                           
  1149                           ;ADC_LIB.c: 118:             break;
  1150  002C  28C2               	goto	l126
  1151  002D                     l113:	
  1152                           ;ADC_LIB.c: 119:         case 3:
  1153                           
  1154                           
  1155                           ;ADC_LIB.c: 120:             ADCON0bits.CHS0 = 1;
  1156  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1157  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1158  002F  151F               	bsf	31,2	;volatile
  1159                           
  1160                           ;ADC_LIB.c: 121:             ADCON0bits.CHS1 = 1;
  1161  0030  159F               	bsf	31,3	;volatile
  1162                           
  1163                           ;ADC_LIB.c: 122:             ADCON0bits.CHS2 = 0;
  1164  0031  121F               	bcf	31,4	;volatile
  1165                           
  1166                           ;ADC_LIB.c: 123:             ADCON0bits.CHS3 = 0;
  1167  0032  129F               	bcf	31,5	;volatile
  1168                           
  1169                           ;ADC_LIB.c: 124:             break;
  1170  0033  28C2               	goto	l126
  1171  0034                     l114:	
  1172                           ;ADC_LIB.c: 125:         case 4:
  1173                           
  1174                           
  1175                           ;ADC_LIB.c: 126:             ADCON0bits.CHS0 = 0;
  1176  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0036  111F               	bcf	31,2	;volatile
  1179                           
  1180                           ;ADC_LIB.c: 127:             ADCON0bits.CHS1 = 0;
  1181  0037  119F               	bcf	31,3	;volatile
  1182                           
  1183                           ;ADC_LIB.c: 128:             ADCON0bits.CHS2 = 1;
  1184  0038  161F               	bsf	31,4	;volatile
  1185                           
  1186                           ;ADC_LIB.c: 129:             ADCON0bits.CHS3 = 0;
  1187  0039  129F               	bcf	31,5	;volatile
  1188                           
  1189                           ;ADC_LIB.c: 130:             break;
  1190  003A  28C2               	goto	l126
  1191  003B                     l115:	
  1192                           ;ADC_LIB.c: 131:         case 5:
  1193                           
  1194                           
  1195                           ;ADC_LIB.c: 132:             ADCON0bits.CHS0 = 1;
  1196  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1197  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1198  003D  151F               	bsf	31,2	;volatile
  1199                           
  1200                           ;ADC_LIB.c: 133:             ADCON0bits.CHS1 = 0;
  1201  003E  119F               	bcf	31,3	;volatile
  1202                           
  1203                           ;ADC_LIB.c: 134:             ADCON0bits.CHS2 = 1;
  1204  003F  161F               	bsf	31,4	;volatile
  1205                           
  1206                           ;ADC_LIB.c: 135:             ADCON0bits.CHS3 = 0;
  1207  0040  129F               	bcf	31,5	;volatile
  1208                           
  1209                           ;ADC_LIB.c: 136:             break;
  1210  0041  28C2               	goto	l126
  1211  0042                     l116:	
  1212                           ;ADC_LIB.c: 137:         case 6:
  1213                           
  1214                           
  1215                           ;ADC_LIB.c: 138:             ADCON0bits.CHS0 = 0;
  1216  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0044  111F               	bcf	31,2	;volatile
  1219                           
  1220                           ;ADC_LIB.c: 139:             ADCON0bits.CHS1 = 1;
  1221  0045  159F               	bsf	31,3	;volatile
  1222                           
  1223                           ;ADC_LIB.c: 140:             ADCON0bits.CHS2 = 1;
  1224  0046  161F               	bsf	31,4	;volatile
  1225                           
  1226                           ;ADC_LIB.c: 141:             ADCON0bits.CHS3 = 0;
  1227  0047  129F               	bcf	31,5	;volatile
  1228                           
  1229                           ;ADC_LIB.c: 142:             break;
  1230  0048  28C2               	goto	l126
  1231  0049                     l117:	
  1232                           ;ADC_LIB.c: 143:         case 7:
  1233                           
  1234                           
  1235                           ;ADC_LIB.c: 144:             ADCON0bits.CHS0 = 1;
  1236  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1237  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1238  004B  151F               	bsf	31,2	;volatile
  1239                           
  1240                           ;ADC_LIB.c: 145:             ADCON0bits.CHS1 = 1;
  1241  004C  159F               	bsf	31,3	;volatile
  1242                           
  1243                           ;ADC_LIB.c: 146:             ADCON0bits.CHS2 = 1;
  1244  004D  161F               	bsf	31,4	;volatile
  1245                           
  1246                           ;ADC_LIB.c: 147:             ADCON0bits.CHS3 = 0;
  1247  004E  129F               	bcf	31,5	;volatile
  1248                           
  1249                           ;ADC_LIB.c: 148:             break;
  1250  004F  28C2               	goto	l126
  1251  0050                     l118:	
  1252                           ;ADC_LIB.c: 149:         case 8:
  1253                           
  1254                           
  1255                           ;ADC_LIB.c: 150:             ADCON0bits.CHS0 = 0;
  1256  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0052  111F               	bcf	31,2	;volatile
  1259                           
  1260                           ;ADC_LIB.c: 151:             ADCON0bits.CHS1 = 0;
  1261  0053  119F               	bcf	31,3	;volatile
  1262                           
  1263                           ;ADC_LIB.c: 152:             ADCON0bits.CHS2 = 0;
  1264  0054  121F               	bcf	31,4	;volatile
  1265                           
  1266                           ;ADC_LIB.c: 153:             ADCON0bits.CHS3 = 1;
  1267  0055  169F               	bsf	31,5	;volatile
  1268                           
  1269                           ;ADC_LIB.c: 154:             break;
  1270  0056  28C2               	goto	l126
  1271  0057                     l119:	
  1272                           ;ADC_LIB.c: 155:         case 9:
  1273                           
  1274                           
  1275                           ;ADC_LIB.c: 156:             ADCON0bits.CHS0 = 1;
  1276  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0059  151F               	bsf	31,2	;volatile
  1279                           
  1280                           ;ADC_LIB.c: 157:             ADCON0bits.CHS1 = 0;
  1281  005A  119F               	bcf	31,3	;volatile
  1282                           
  1283                           ;ADC_LIB.c: 158:             ADCON0bits.CHS2 = 0;
  1284  005B  121F               	bcf	31,4	;volatile
  1285                           
  1286                           ;ADC_LIB.c: 159:             ADCON0bits.CHS3 = 1;
  1287  005C  169F               	bsf	31,5	;volatile
  1288                           
  1289                           ;ADC_LIB.c: 160:             break;
  1290  005D  28C2               	goto	l126
  1291  005E                     l120:	
  1292                           ;ADC_LIB.c: 161:         case 10:
  1293                           
  1294                           
  1295                           ;ADC_LIB.c: 162:             ADCON0bits.CHS0 = 0;
  1296  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1297  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0060  111F               	bcf	31,2	;volatile
  1299                           
  1300                           ;ADC_LIB.c: 163:             ADCON0bits.CHS1 = 1;
  1301  0061  159F               	bsf	31,3	;volatile
  1302                           
  1303                           ;ADC_LIB.c: 164:             ADCON0bits.CHS2 = 0;
  1304  0062  121F               	bcf	31,4	;volatile
  1305                           
  1306                           ;ADC_LIB.c: 165:             ADCON0bits.CHS3 = 1;
  1307  0063  169F               	bsf	31,5	;volatile
  1308                           
  1309                           ;ADC_LIB.c: 166:             break;
  1310  0064  28C2               	goto	l126
  1311  0065                     l121:	
  1312                           ;ADC_LIB.c: 167:         case 11:
  1313                           
  1314                           
  1315                           ;ADC_LIB.c: 168:             ADCON0bits.CHS0 = 1;
  1316  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0067  151F               	bsf	31,2	;volatile
  1319                           
  1320                           ;ADC_LIB.c: 169:             ADCON0bits.CHS1 = 1;
  1321  0068  159F               	bsf	31,3	;volatile
  1322                           
  1323                           ;ADC_LIB.c: 170:             ADCON0bits.CHS2 = 0;
  1324  0069  121F               	bcf	31,4	;volatile
  1325                           
  1326                           ;ADC_LIB.c: 171:             ADCON0bits.CHS3 = 1;
  1327  006A  169F               	bsf	31,5	;volatile
  1328                           
  1329                           ;ADC_LIB.c: 172:             break;
  1330  006B  28C2               	goto	l126
  1331  006C                     l122:	
  1332                           ;ADC_LIB.c: 173:         case 12:
  1333                           
  1334                           
  1335                           ;ADC_LIB.c: 174:             ADCON0bits.CHS0 = 0;
  1336  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1337  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1338  006E  111F               	bcf	31,2	;volatile
  1339                           
  1340                           ;ADC_LIB.c: 175:             ADCON0bits.CHS1 = 0;
  1341  006F  119F               	bcf	31,3	;volatile
  1342                           
  1343                           ;ADC_LIB.c: 176:             ADCON0bits.CHS2 = 1;
  1344  0070  161F               	bsf	31,4	;volatile
  1345                           
  1346                           ;ADC_LIB.c: 177:             ADCON0bits.CHS3 = 1;
  1347  0071  169F               	bsf	31,5	;volatile
  1348                           
  1349                           ;ADC_LIB.c: 178:             break;
  1350  0072  28C2               	goto	l126
  1351  0073                     l123:	
  1352                           ;ADC_LIB.c: 179:         case 13:
  1353                           
  1354                           
  1355                           ;ADC_LIB.c: 180:             ADCON0bits.CHS0 = 1;
  1356  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0075  151F               	bsf	31,2	;volatile
  1359                           
  1360                           ;ADC_LIB.c: 181:             ADCON0bits.CHS1 = 0;
  1361  0076  119F               	bcf	31,3	;volatile
  1362                           
  1363                           ;ADC_LIB.c: 182:             ADCON0bits.CHS2 = 1;
  1364  0077  161F               	bsf	31,4	;volatile
  1365                           
  1366                           ;ADC_LIB.c: 183:             ADCON0bits.CHS3 = 1;
  1367  0078  169F               	bsf	31,5	;volatile
  1368                           
  1369                           ;ADC_LIB.c: 184:             break;
  1370  0079  28C2               	goto	l126
  1371  007A                     l124:	
  1372                           ;ADC_LIB.c: 185:         case 14:
  1373                           
  1374                           
  1375                           ;ADC_LIB.c: 186:             ADCON0bits.CHS0 = 0;
  1376  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1377  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1378  007C  111F               	bcf	31,2	;volatile
  1379                           
  1380                           ;ADC_LIB.c: 187:             ADCON0bits.CHS1 = 1;
  1381  007D  159F               	bsf	31,3	;volatile
  1382                           
  1383                           ;ADC_LIB.c: 188:             ADCON0bits.CHS2 = 1;
  1384  007E  161F               	bsf	31,4	;volatile
  1385                           
  1386                           ;ADC_LIB.c: 189:             ADCON0bits.CHS3 = 1;
  1387  007F  169F               	bsf	31,5	;volatile
  1388                           
  1389                           ;ADC_LIB.c: 190:             break;
  1390  0080  28C2               	goto	l126
  1391  0081                     l125:	
  1392                           ;ADC_LIB.c: 191:         case 15:
  1393                           
  1394                           
  1395                           ;ADC_LIB.c: 192:             ADCON0bits.CHS0 = 1;
  1396  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0083  151F               	bsf	31,2	;volatile
  1399                           
  1400                           ;ADC_LIB.c: 193:             ADCON0bits.CHS1 = 1;
  1401  0084  159F               	bsf	31,3	;volatile
  1402                           
  1403                           ;ADC_LIB.c: 194:             ADCON0bits.CHS2 = 1;
  1404  0085  161F               	bsf	31,4	;volatile
  1405                           
  1406                           ;ADC_LIB.c: 195:             ADCON0bits.CHS3 = 1;
  1407  0086  169F               	bsf	31,5	;volatile
  1408                           
  1409                           ;ADC_LIB.c: 196:             break;
  1410  0087  28C2               	goto	l126
  1411  0088                     l758:
  1412  0088  0875               	movf	Select_ch@channel,w
  1413  0089  00F3               	movwf	??_Select_ch
  1414  008A  01F4               	clrf	??_Select_ch+1
  1415                           
  1416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1417                           ; Switch size 1, requested type "simple"
  1418                           ; Number of cases is 1, Range of values is 0 to 0
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte            4     3 (average)
  1422                           ; direct_byte           11     8 (fixed)
  1423                           ; jumptable            260     6 (fixed)
  1424                           ;	Chosen strategy is simple_byte
  1425  008B  0874               	movf	??_Select_ch+1,w
  1426  008C  3A00               	xorlw	0	; case 0
  1427  008D  1903               	skipnz
  1428  008E  2890               	goto	l1166
  1429  008F  28C2               	goto	l126
  1430  0090                     l1166:
  1431                           
  1432                           ; Switch size 1, requested type "simple"
  1433                           ; Number of cases is 16, Range of values is 0 to 15
  1434                           ; switch strategies available:
  1435                           ; Name         Instructions Cycles
  1436                           ; simple_byte           49    25 (average)
  1437                           ; direct_byte           56     8 (fixed)
  1438                           ; jumptable            260     6 (fixed)
  1439                           ;	Chosen strategy is simple_byte
  1440  0090  0873               	movf	??_Select_ch,w
  1441  0091  3A00               	xorlw	0	; case 0
  1442  0092  1903               	skipnz
  1443  0093  2818               	goto	l109
  1444  0094  3A01               	xorlw	1	; case 1
  1445  0095  1903               	skipnz
  1446  0096  281F               	goto	l111
  1447  0097  3A03               	xorlw	3	; case 2
  1448  0098  1903               	skipnz
  1449  0099  2826               	goto	l112
  1450  009A  3A01               	xorlw	1	; case 3
  1451  009B  1903               	skipnz
  1452  009C  282D               	goto	l113
  1453  009D  3A07               	xorlw	7	; case 4
  1454  009E  1903               	skipnz
  1455  009F  2834               	goto	l114
  1456  00A0  3A01               	xorlw	1	; case 5
  1457  00A1  1903               	skipnz
  1458  00A2  283B               	goto	l115
  1459  00A3  3A03               	xorlw	3	; case 6
  1460  00A4  1903               	skipnz
  1461  00A5  2842               	goto	l116
  1462  00A6  3A01               	xorlw	1	; case 7
  1463  00A7  1903               	skipnz
  1464  00A8  2849               	goto	l117
  1465  00A9  3A0F               	xorlw	15	; case 8
  1466  00AA  1903               	skipnz
  1467  00AB  2850               	goto	l118
  1468  00AC  3A01               	xorlw	1	; case 9
  1469  00AD  1903               	skipnz
  1470  00AE  2857               	goto	l119
  1471  00AF  3A03               	xorlw	3	; case 10
  1472  00B0  1903               	skipnz
  1473  00B1  285E               	goto	l120
  1474  00B2  3A01               	xorlw	1	; case 11
  1475  00B3  1903               	skipnz
  1476  00B4  2865               	goto	l121
  1477  00B5  3A07               	xorlw	7	; case 12
  1478  00B6  1903               	skipnz
  1479  00B7  286C               	goto	l122
  1480  00B8  3A01               	xorlw	1	; case 13
  1481  00B9  1903               	skipnz
  1482  00BA  2873               	goto	l123
  1483  00BB  3A03               	xorlw	3	; case 14
  1484  00BC  1903               	skipnz
  1485  00BD  287A               	goto	l124
  1486  00BE  3A01               	xorlw	1	; case 15
  1487  00BF  1903               	skipnz
  1488  00C0  2881               	goto	l125
  1489  00C1  28C2               	goto	l126
  1490  00C2                     l126:
  1491  00C2  0008               	return
  1492  00C3                     __end_of_Select_ch:
  1493                           
  1494                           	psect	text4
  1495  01C3                     __ptext4:	
  1496 ;; *************** function _ISR *****************
  1497 ;; Defined at:
  1498 ;;		line 38 in file "lab_2.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0
  1514 ;;      Temps:          3       0       0       0       0
  1515 ;;      Totals:         3       0       0       0       0
  1516 ;;Total ram usage:        3 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		Interrupt level 1
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _ISR
  1527  01C3                     _ISR:
  1528  01C3                     i1l764:
  1529                           
  1530                           ;lab_2.c: 39:     PORTA = 0;
  1531  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1532  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1533  01C5  1F0C               	btfss	12,6	;volatile
  1534  01C6  29C8               	goto	u3_21
  1535  01C7  29C9               	goto	u3_20
  1536  01C8                     u3_21:
  1537  01C8  29CF               	goto	i1l48
  1538  01C9                     u3_20:
  1539  01C9                     i1l766:
  1540                           
  1541                           ;lab_2.c: 40:     PORTC = 0;
  1542  01C9  130C               	bcf	12,6	;volatile
  1543  01CA                     i1l768:
  1544                           
  1545                           ;lab_2.c: 41:     PORTD = 0;
  1546  01CA  081E               	movf	30,w	;volatile
  1547  01CB  00F0               	movwf	??_ISR
  1548  01CC  0870               	movf	??_ISR,w
  1549  01CD  00FA               	movwf	_display_adc	;volatile
  1550  01CE                     i1l770:
  1551                           
  1552                           ;lab_2.c: 42:     PORTE = 0;
  1553  01CE  149F               	bsf	31,1	;volatile
  1554  01CF                     i1l48:
  1555  01CF  0872               	movf	??_ISR+2,w
  1556  01D0  008A               	movwf	10
  1557  01D1  0E71               	swapf	??_ISR+1,w
  1558  01D2  0083               	movwf	3
  1559  01D3  0EFE               	swapf	btemp,f
  1560  01D4  0E7E               	swapf	btemp,w
  1561  01D5  0009               	retfie
  1562  01D6                     __end_of_ISR:
  1563  007E                     btemp	set	126	;btemp
  1564  007E                     wtemp0	set	126
  1565                           
  1566                           	psect	intentry
  1567  0004                     __pintentry:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _ISR: [wreg]
  1570                           
  1571  0004                     interrupt_function:
  1572  007E                     saved_w	set	btemp
  1573  0004  00FE               	movwf	btemp
  1574  0005  0E03               	swapf	3,w
  1575  0006  00F1               	movwf	??_ISR+1
  1576  0007  080A               	movf	10,w
  1577  0008  00F2               	movwf	??_ISR+2
  1578  0009  120A  118A  29C3   	ljmp	_ISR
  1579                           
  1580                           	psect	config
  1581                           
  1582                           ;Config register CONFIG1 @ 0x2007
  1583                           ;	Oscillator Selection bits
  1584                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1585                           ;	Watchdog Timer Enable bit
  1586                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1587                           ;	Power-up Timer Enable bit
  1588                           ;	PWRTE = OFF, PWRT disabled
  1589                           ;	RE3/MCLR pin function select bit
  1590                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1591                           ;	Code Protection bit
  1592                           ;	CP = OFF, Program memory code protection is disabled
  1593                           ;	Data Code Protection bit
  1594                           ;	CPD = OFF, Data memory code protection is disabled
  1595                           ;	Brown Out Reset Selection bits
  1596                           ;	BOREN = OFF, BOR disabled
  1597                           ;	Internal External Switchover bit
  1598                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1599                           ;	Fail-Safe Clock Monitor Enabled bit
  1600                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1601                           ;	Low Voltage Programming Enable bit
  1602                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1603                           ;	In-Circuit Debugger Mode bit
  1604                           ;	DEBUG = 0x1, unprogrammed default
  1605  2007                     	org	8199
  1606  2007  20D4               	dw	8404
  1607                           
  1608                           ;Config register CONFIG2 @ 0x2008
  1609                           ;	Brown-out Reset Selection bit
  1610                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1611                           ;	Flash Program Memory Self Write Enable bits
  1612                           ;	WRT = OFF, Write protection off
  1613  2008                     	org	8200
  1614  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_start_adc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_start_adc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     424
                          _Select_ch
                          _start_adc
                           _start_ch
 ---------------------------------------------------------------------------------
 (1) _start_ch                                             3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _start_adc                                            6     3      3     394
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _start_adc
   _start_ch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 03 22:06:37 2021

                     l53 01BF                       l54 01BF                       l72 0137  
                     l81 0171                       l74 013A                       l90 00C5  
                     l83 0174                       l75 013D                       l84 0177  
                     l76 0140                       l92 00C9                       l85 017A  
                     l93 00CD                       l86 0193                       l78 016D  
                     l94 00D1                       l95 00D5                       l96 00D9  
                     l97 00DD                       l98 00E1                       l99 00E5  
                     u60 015E                       u61 015D                       u70 0169  
                     u71 0168                      l100 00E9                      l101 00ED  
                    l102 00F1                      l111 001F                      l103 00F5  
                    l120 005E                      l112 0026                      l104 00F9  
                    l121 0065                      l113 002D                      l105 0131  
                    l122 006C                      l114 0034                      l123 0073  
                    l115 003B                      l124 007A                      l116 0042  
                    l125 0081                      l117 0049                      l109 0018  
                    l118 0050                      l126 00C2                      l119 0057  
                    l744 00C4                      l754 0017                      l748 00FD  
                    l758 0088                      _ISR 01C3                     ?_ISR 0070  
                   l1030 015E                     l1022 0135                     l1032 0164  
                   l1034 0169                     l1026 0143                     l1050 0196  
                   l1028 0159                     l1060 01B3                     l1052 019A  
                   l1038 017D                     l1070 01B8                     l1062 01B4  
                   l1054 01A4                     l1160 0105                     l1072 01B9  
                   l1064 01B5                     l1056 01AA                     l1048 0194  
                   l1162 014B                     l1074 01BC                     l1066 01B6  
                   l1058 01B0                     l1164 0185                     l1076 01BD  
                   l1068 01B7                     l1166 0090                     l1078 01BE  
                   i1l48 01CF                     u3_20 01C9                     u3_21 01C8  
                   _main 0194                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l770 01CE                    i1l764 01C3                    i1l766 01C9  
                  i1l768 01CA                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01C3                   ??_main 0078  
                 _ADRESH 001E                   _ANSELH 0189       __size_of_Select_ch 00AD  
           start_adc@isr 0073                   saved_w 007E         __end_of_start_ch 0132  
__end_of__initialization 0012           __pcstackCOMMON 0070        __end_of_Select_ch 00C3  
             __pmaintext 0194               __pintentry 0004       __size_of_start_adc 0062  
              ?_start_ch 0070                _ANSELbits 0188                  __ptext1 00C3  
                __ptext2 0132                  __ptext3 0016                  __ptext4 01C3  
           __size_of_ISR 0013         Select_ch@channel 0075            start_adc@Vref 0074  
          start_adc@frec 0020     end_of_initialization 0012        __end_of_start_adc 0194  
             ??_start_ch 0073                _TRISBbits 0086      start_initialization 000F  
            __end_of_ISR 01D6                _Select_ch 0016              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020               ?_Select_ch 0070  
      __size_of_start_ch 006F        interrupt_function 0004                 _PIE1bits 008C  
        start_ch@channel 0075                 _PIR1bits 000C          start_adc@justRL 0075  
            _display_adc 007A               _ADCON0bits 001F               _ADCON1bits 009F  
              _start_adc 0132              ??_Select_ch 0073               ?_start_adc 0073  
             _ANSELHbits 0189                 _nibble_h 0078                 _nibble_l 0079  
          __size_of_main 002F                 _start_ch 00C3               _INTCONbits 000B  
               intlevel1 0000              ??_start_adc 0076  
