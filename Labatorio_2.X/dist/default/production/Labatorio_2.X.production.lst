

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 22:37:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.31
    22                           ; Generated 13/10/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0005                     _PORTA	set	5
   369  0008                     _PORTD	set	8
   370  0006                     _PORTB	set	6
   371  0001                     _TMR0	set	1
   372  0009                     _PORTEbits	set	9
   373  0009                     _PORTE	set	9
   374  0007                     _PORTC	set	7
   375  000B                     _INTCONbits	set	11
   376  001F                     _ADCON0bits	set	31
   377  001E                     _ADRESH	set	30
   378  000C                     _PIR1bits	set	12
   379  009F                     _ADCON1bits	set	159
   380  008C                     _PIE1bits	set	140
   381  0086                     _TRISBbits	set	134
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0087                     _TRISC	set	135
   385  0085                     _TRISA	set	133
   386  0081                     _OPTION_REGbits	set	129
   387  0096                     _IOCBbits	set	150
   388  0189                     _ANSELHbits	set	393
   389  0188                     _ANSELbits	set	392
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  0011                     start_initialization:	
   395                           ; #config settings
   396                           
   397  0011                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  0011  01FC               	clrf	__pbssCOMMON& (0+127)
   401  0012  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0013  1283               	bcf	3,5	;RP0=0, select bank0
   405  0014  1303               	bcf	3,6	;RP1=0, select bank0
   406  0015  01A6               	clrf	__pbssBANK0& (0+127)
   407  0016  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   408  0017  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   409  0018                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  0018                     __end_of__initialization:
   413  0018  0183               	clrf	3
   414  0019  120A  118A  2A89   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  007C                     __pbssCOMMON:
   418  007C                     _antireb:
   419  007C                     	ds	1
   420  007D                     _display_adc:
   421  007D                     	ds	1
   422                           
   423                           	psect	bssBANK0
   424  0026                     __pbssBANK0:
   425  0026                     _antireb_ant:
   426  0026                     	ds	1
   427  0027                     _toogle:
   428  0027                     	ds	1
   429  0028                     _count:
   430  0028                     	ds	1
   431                           
   432                           	psect	cstackCOMMON
   433  0070                     __pcstackCOMMON:
   434  0070                     ?_NibbleMS:
   435  0070                     ?_NibbleLS:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_start_ch:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_Select_ch:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_tabla7segmentos:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_tabla7segmentos:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 1 bytes @ 0x0
   458  0070                     	ds	2
   459  0072                     tabla7segmentos@valor:
   460                           
   461                           ; 1 bytes @ 0x2
   462  0072                     	ds	1
   463  0073                     ??_NibbleMS:
   464  0073                     ??_NibbleLS:	
   465                           ; 1 bytes @ 0x3
   466                           
   467                           
   468                           ; 1 bytes @ 0x3
   469  0073                     	ds	1
   470  0074                     NibbleLS@adcLs:
   471                           
   472                           ; 1 bytes @ 0x4
   473  0074                     	ds	1
   474  0075                     NibbleMS@adcMs:
   475  0075                     NibbleLS@nsl:	
   476                           ; 1 bytes @ 0x5
   477                           
   478                           
   479                           ; 1 bytes @ 0x5
   480  0075                     	ds	1
   481  0076                     NibbleMS@nlh:
   482                           
   483                           ; 1 bytes @ 0x6
   484  0076                     	ds	1
   485  0077                     NibbleMS@temp:
   486                           
   487                           ; 1 bytes @ 0x7
   488  0077                     	ds	1
   489  0078                     ??_ISR:
   490                           
   491                           ; 1 bytes @ 0x8
   492  0078                     	ds	4
   493                           
   494                           	psect	cstackBANK0
   495  0020                     __pcstackBANK0:
   496  0020                     ?_start_adc:
   497  0020                     ??_start_ch:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0020                     ??_Select_ch:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0020                     start_adc@isr:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 1 bytes @ 0x0
   508  0020                     	ds	1
   509  0021                     start_adc@Vref:
   510                           
   511                           ; 1 bytes @ 0x1
   512  0021                     	ds	1
   513  0022                     start_adc@justRL:
   514  0022                     start_ch@channel:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0022                     Select_ch@channel:	
   518                           ; 1 bytes @ 0x2
   519                           
   520                           
   521                           ; 1 bytes @ 0x2
   522  0022                     	ds	1
   523  0023                     ??_start_adc:
   524                           
   525                           ; 1 bytes @ 0x3
   526  0023                     	ds	2
   527  0025                     start_adc@frec:
   528                           
   529                           ; 1 bytes @ 0x5
   530  0025                     	ds	1
   531  0026                     ??_main:
   532                           
   533                           	psect	maintext
   534  0289                     __pmaintext:	
   535                           ; 1 bytes @ 0x6
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 81 in file "lab_2.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels required when called:    4
   561 ;; This function calls:
   562 ;;		_Select_ch
   563 ;;		_start_adc
   564 ;;		_start_ch
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  0289                     _main:
   573  0289                     l1216:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;lab_2.c: 83:     PORTA = 0;
   579  0289  178B               	bsf	11,7	;volatile
   580                           
   581                           ;lab_2.c: 84:     PORTC = 0;
   582  028A  170B               	bsf	11,6	;volatile
   583                           
   584                           ;lab_2.c: 85:     PORTD = 0;
   585  028B  168B               	bsf	11,5	;volatile
   586                           
   587                           ;lab_2.c: 86:     PORTE = 0;
   588  028C  110B               	bcf	11,2	;volatile
   589                           
   590                           ;lab_2.c: 87:     while (1) {
   591  028D  158B               	bsf	11,3	;volatile
   592                           
   593                           ;lab_2.c: 88:         if (display_adc >= count) {
   594  028E  100B               	bcf	11,0	;volatile
   595                           
   596                           ;lab_2.c: 89:             PORTEbits.RE2 = 1;
   597  028F  1683               	bsf	3,5	;RP0=1, select bank1
   598  0290  1303               	bcf	3,6	;RP1=0, select bank1
   599  0291  1416               	bsf	22,0	;volatile
   600                           
   601                           ;lab_2.c: 90:         } else {
   602  0292  1496               	bsf	22,1	;volatile
   603                           
   604                           ;lab_2.c: 91:             PORTEbits.RE2 = 0;
   605  0293  1281               	bcf	1,5	;volatile
   606                           
   607                           ;lab_2.c: 92:         }
   608  0294  1181               	bcf	1,3	;volatile
   609                           
   610                           ;lab_2.c: 93:     }
   611  0295  1401               	bsf	1,0	;volatile
   612                           
   613                           ;lab_2.c: 94: }
   614  0296  1081               	bcf	1,1	;volatile
   615  0297  1501               	bsf	1,2	;volatile
   616  0298                     l1218:
   617  0298  30B1               	movlw	177
   618  0299  1283               	bcf	3,5	;RP0=0, select bank0
   619  029A  1303               	bcf	3,6	;RP1=0, select bank0
   620  029B  0081               	movwf	1	;volatile
   621  029C                     l1220:
   622  029C  1683               	bsf	3,5	;RP0=1, select bank3
   623  029D  1703               	bsf	3,6	;RP1=1, select bank3
   624  029E  0188               	clrf	8	;volatile
   625  029F                     l1222:
   626  029F  0189               	clrf	9	;volatile
   627  02A0                     l1224:
   628  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   629  02A1  1303               	bcf	3,6	;RP1=0, select bank0
   630  02A2  01A0               	clrf	start_adc@isr
   631  02A3  0AA0               	incf	start_adc@isr,f
   632  02A4  01A1               	clrf	start_adc@Vref
   633  02A5  01A2               	clrf	start_adc@justRL
   634  02A6  3002               	movlw	2
   635  02A7  120A  118A  221D  120A  118A  	fcall	_start_adc
   636  02AC                     l1226:
   637  02AC  3008               	movlw	8
   638  02AD  120A  118A  213D  120A  118A  	fcall	_start_ch
   639  02B2                     l1228:
   640  02B2  3008               	movlw	8
   641  02B3  120A  118A  201C  120A  118A  	fcall	_Select_ch
   642  02B8                     l1230:
   643  02B8  1683               	bsf	3,5	;RP0=1, select bank1
   644  02B9  1303               	bcf	3,6	;RP1=0, select bank1
   645  02BA  0185               	clrf	5	;volatile
   646  02BB                     l1232:
   647  02BB  0187               	clrf	7	;volatile
   648  02BC                     l1234:
   649  02BC  0188               	clrf	8	;volatile
   650  02BD                     l1236:
   651  02BD  0189               	clrf	9	;volatile
   652  02BE                     l1238:
   653  02BE  1406               	bsf	6,0	;volatile
   654  02BF                     l1240:
   655  02BF  1486               	bsf	6,1	;volatile
   656  02C0                     l1242:
   657  02C0  1506               	bsf	6,2	;volatile
   658  02C1                     l1244:
   659  02C1  1283               	bcf	3,5	;RP0=0, select bank0
   660  02C2  1303               	bcf	3,6	;RP1=0, select bank0
   661  02C3  0185               	clrf	5	;volatile
   662  02C4                     l1246:
   663  02C4  0187               	clrf	7	;volatile
   664  02C5                     l1248:
   665  02C5  0188               	clrf	8	;volatile
   666  02C6                     l1250:
   667  02C6  0189               	clrf	9	;volatile
   668  02C7                     l1252:
   669  02C7  0828               	movf	_count,w
   670  02C8  027D               	subwf	_display_adc,w	;volatile
   671  02C9  1C03               	skipc
   672  02CA  2ACC               	goto	u221
   673  02CB  2ACD               	goto	u220
   674  02CC                     u221:
   675  02CC  2ACF               	goto	l79
   676  02CD                     u220:
   677  02CD                     l1254:
   678  02CD  1509               	bsf	9,2	;volatile
   679  02CE  2AC7               	goto	l1252
   680  02CF                     l79:
   681  02CF  1109               	bcf	9,2	;volatile
   682  02D0  2AC7               	goto	l1252
   683  02D1  120A  118A  280E   	ljmp	start
   684  02D4                     __end_of_main:
   685                           
   686                           	psect	text1
   687  013D                     __ptext1:	
   688 ;; *************** function _start_ch *****************
   689 ;; Defined at:
   690 ;;		line 59 in file "ADC_LIB.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  channel         1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  channel         1    2[BANK0 ] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       1       0       0       0
   706 ;;      Temps:          0       2       0       0       0
   707 ;;      Totals:         0       3       0       0       0
   708 ;;Total ram usage:        3 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    3
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _start_ch
   720  013D                     _start_ch:
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _start_ch: [wreg-fsr0h+status,2+status,0]
   724                           ;start_ch@channel stored from wreg
   725  013D  1283               	bcf	3,5	;RP0=0, select bank0
   726  013E  1303               	bcf	3,6	;RP1=0, select bank0
   727  013F  00A2               	movwf	start_ch@channel
   728  0140                     l1148:
   729                           
   730                           ;ADC_LIB.c: 60:     switch (channel) {
   731  0140  2979               	goto	l1152
   732  0141                     l119:	
   733                           ;ADC_LIB.c: 61:         case 0:
   734                           
   735                           
   736                           ;ADC_LIB.c: 62:             ANSELbits.ANS0 = 1;
   737  0141  1683               	bsf	3,5	;RP0=1, select bank3
   738  0142  1703               	bsf	3,6	;RP1=1, select bank3
   739  0143  1408               	bsf	8,0	;volatile
   740                           
   741                           ;ADC_LIB.c: 63:             break;
   742  0144  29AD               	goto	l134
   743  0145                     l121:	
   744                           ;ADC_LIB.c: 64:         case 1:
   745                           
   746                           
   747                           ;ADC_LIB.c: 65:             ANSELbits.ANS1 = 1;
   748  0145  1683               	bsf	3,5	;RP0=1, select bank3
   749  0146  1703               	bsf	3,6	;RP1=1, select bank3
   750  0147  1488               	bsf	8,1	;volatile
   751                           
   752                           ;ADC_LIB.c: 66:             break;
   753  0148  29AD               	goto	l134
   754  0149                     l122:	
   755                           ;ADC_LIB.c: 67:         case 2:
   756                           
   757                           
   758                           ;ADC_LIB.c: 68:             ANSELbits.ANS2 = 1;
   759  0149  1683               	bsf	3,5	;RP0=1, select bank3
   760  014A  1703               	bsf	3,6	;RP1=1, select bank3
   761  014B  1508               	bsf	8,2	;volatile
   762                           
   763                           ;ADC_LIB.c: 69:             break;
   764  014C  29AD               	goto	l134
   765  014D                     l123:	
   766                           ;ADC_LIB.c: 70:         case 3:
   767                           
   768                           
   769                           ;ADC_LIB.c: 71:             ANSELbits.ANS3 = 1;
   770  014D  1683               	bsf	3,5	;RP0=1, select bank3
   771  014E  1703               	bsf	3,6	;RP1=1, select bank3
   772  014F  1588               	bsf	8,3	;volatile
   773                           
   774                           ;ADC_LIB.c: 72:             break;
   775  0150  29AD               	goto	l134
   776  0151                     l124:	
   777                           ;ADC_LIB.c: 73:         case 4:
   778                           
   779                           
   780                           ;ADC_LIB.c: 74:             ANSELbits.ANS4 = 1;
   781  0151  1683               	bsf	3,5	;RP0=1, select bank3
   782  0152  1703               	bsf	3,6	;RP1=1, select bank3
   783  0153  1608               	bsf	8,4	;volatile
   784                           
   785                           ;ADC_LIB.c: 75:             break;
   786  0154  29AD               	goto	l134
   787  0155                     l125:	
   788                           ;ADC_LIB.c: 76:         case 5:
   789                           
   790                           
   791                           ;ADC_LIB.c: 77:             ANSELbits.ANS5 = 1;
   792  0155  1683               	bsf	3,5	;RP0=1, select bank3
   793  0156  1703               	bsf	3,6	;RP1=1, select bank3
   794  0157  1688               	bsf	8,5	;volatile
   795                           
   796                           ;ADC_LIB.c: 78:             break;
   797  0158  29AD               	goto	l134
   798  0159                     l126:	
   799                           ;ADC_LIB.c: 79:         case 6:
   800                           
   801                           
   802                           ;ADC_LIB.c: 80:             ANSELbits.ANS6 = 1;
   803  0159  1683               	bsf	3,5	;RP0=1, select bank3
   804  015A  1703               	bsf	3,6	;RP1=1, select bank3
   805  015B  1708               	bsf	8,6	;volatile
   806                           
   807                           ;ADC_LIB.c: 81:             break;
   808  015C  29AD               	goto	l134
   809  015D                     l127:	
   810                           ;ADC_LIB.c: 82:         case 7:
   811                           
   812                           
   813                           ;ADC_LIB.c: 83:             ANSELbits.ANS7 = 1;
   814  015D  1683               	bsf	3,5	;RP0=1, select bank3
   815  015E  1703               	bsf	3,6	;RP1=1, select bank3
   816  015F  1788               	bsf	8,7	;volatile
   817                           
   818                           ;ADC_LIB.c: 84:             break;
   819  0160  29AD               	goto	l134
   820  0161                     l128:	
   821                           ;ADC_LIB.c: 85:         case 8:
   822                           
   823                           
   824                           ;ADC_LIB.c: 86:             ANSELHbits.ANS8 = 1;
   825  0161  1683               	bsf	3,5	;RP0=1, select bank3
   826  0162  1703               	bsf	3,6	;RP1=1, select bank3
   827  0163  1409               	bsf	9,0	;volatile
   828                           
   829                           ;ADC_LIB.c: 87:             break;
   830  0164  29AD               	goto	l134
   831  0165                     l129:	
   832                           ;ADC_LIB.c: 88:         case 9:
   833                           
   834                           
   835                           ;ADC_LIB.c: 89:             ANSELHbits.ANS9 = 1;
   836  0165  1683               	bsf	3,5	;RP0=1, select bank3
   837  0166  1703               	bsf	3,6	;RP1=1, select bank3
   838  0167  1489               	bsf	9,1	;volatile
   839                           
   840                           ;ADC_LIB.c: 90:             break;
   841  0168  29AD               	goto	l134
   842  0169                     l130:	
   843                           ;ADC_LIB.c: 91:         case 10:
   844                           
   845                           
   846                           ;ADC_LIB.c: 92:             ANSELHbits.ANS10 = 1;
   847  0169  1683               	bsf	3,5	;RP0=1, select bank3
   848  016A  1703               	bsf	3,6	;RP1=1, select bank3
   849  016B  1509               	bsf	9,2	;volatile
   850                           
   851                           ;ADC_LIB.c: 93:             break;
   852  016C  29AD               	goto	l134
   853  016D                     l131:	
   854                           ;ADC_LIB.c: 94:         case 11:
   855                           
   856                           
   857                           ;ADC_LIB.c: 95:             ANSELHbits.ANS11 = 1;
   858  016D  1683               	bsf	3,5	;RP0=1, select bank3
   859  016E  1703               	bsf	3,6	;RP1=1, select bank3
   860  016F  1589               	bsf	9,3	;volatile
   861                           
   862                           ;ADC_LIB.c: 96:             break;
   863  0170  29AD               	goto	l134
   864  0171                     l132:	
   865                           ;ADC_LIB.c: 97:         case 12:
   866                           
   867                           
   868                           ;ADC_LIB.c: 98:             ANSELHbits.ANS12 = 1;
   869  0171  1683               	bsf	3,5	;RP0=1, select bank3
   870  0172  1703               	bsf	3,6	;RP1=1, select bank3
   871  0173  1609               	bsf	9,4	;volatile
   872                           
   873                           ;ADC_LIB.c: 99:             break;
   874  0174  29AD               	goto	l134
   875  0175                     l133:	
   876                           ;ADC_LIB.c: 100:         case 13:
   877                           
   878                           
   879                           ;ADC_LIB.c: 101:             ANSELHbits.ANS13 = 1;
   880  0175  1683               	bsf	3,5	;RP0=1, select bank3
   881  0176  1703               	bsf	3,6	;RP1=1, select bank3
   882  0177  1689               	bsf	9,5	;volatile
   883                           
   884                           ;ADC_LIB.c: 102:             break;
   885  0178  29AD               	goto	l134
   886  0179                     l1152:
   887  0179  0822               	movf	start_ch@channel,w
   888  017A  00A0               	movwf	??_start_ch
   889  017B  01A1               	clrf	??_start_ch+1
   890                           
   891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   892                           ; Switch size 1, requested type "simple"
   893                           ; Number of cases is 1, Range of values is 0 to 0
   894                           ; switch strategies available:
   895                           ; Name         Instructions Cycles
   896                           ; simple_byte            4     3 (average)
   897                           ; direct_byte           11     8 (fixed)
   898                           ; jumptable            260     6 (fixed)
   899                           ;	Chosen strategy is simple_byte
   900  017C  0821               	movf	??_start_ch+1,w
   901  017D  3A00               	xorlw	0	; case 0
   902  017E  1903               	skipnz
   903  017F  2981               	goto	l1376
   904  0180  29AD               	goto	l134
   905  0181                     l1376:
   906                           
   907                           ; Switch size 1, requested type "simple"
   908                           ; Number of cases is 14, Range of values is 0 to 13
   909                           ; switch strategies available:
   910                           ; Name         Instructions Cycles
   911                           ; simple_byte           43    22 (average)
   912                           ; direct_byte           50     8 (fixed)
   913                           ; jumptable            260     6 (fixed)
   914                           ;	Chosen strategy is simple_byte
   915  0181  0820               	movf	??_start_ch,w
   916  0182  3A00               	xorlw	0	; case 0
   917  0183  1903               	skipnz
   918  0184  2941               	goto	l119
   919  0185  3A01               	xorlw	1	; case 1
   920  0186  1903               	skipnz
   921  0187  2945               	goto	l121
   922  0188  3A03               	xorlw	3	; case 2
   923  0189  1903               	skipnz
   924  018A  2949               	goto	l122
   925  018B  3A01               	xorlw	1	; case 3
   926  018C  1903               	skipnz
   927  018D  294D               	goto	l123
   928  018E  3A07               	xorlw	7	; case 4
   929  018F  1903               	skipnz
   930  0190  2951               	goto	l124
   931  0191  3A01               	xorlw	1	; case 5
   932  0192  1903               	skipnz
   933  0193  2955               	goto	l125
   934  0194  3A03               	xorlw	3	; case 6
   935  0195  1903               	skipnz
   936  0196  2959               	goto	l126
   937  0197  3A01               	xorlw	1	; case 7
   938  0198  1903               	skipnz
   939  0199  295D               	goto	l127
   940  019A  3A0F               	xorlw	15	; case 8
   941  019B  1903               	skipnz
   942  019C  2961               	goto	l128
   943  019D  3A01               	xorlw	1	; case 9
   944  019E  1903               	skipnz
   945  019F  2965               	goto	l129
   946  01A0  3A03               	xorlw	3	; case 10
   947  01A1  1903               	skipnz
   948  01A2  2969               	goto	l130
   949  01A3  3A01               	xorlw	1	; case 11
   950  01A4  1903               	skipnz
   951  01A5  296D               	goto	l131
   952  01A6  3A07               	xorlw	7	; case 12
   953  01A7  1903               	skipnz
   954  01A8  2971               	goto	l132
   955  01A9  3A01               	xorlw	1	; case 13
   956  01AA  1903               	skipnz
   957  01AB  2975               	goto	l133
   958  01AC  29AD               	goto	l134
   959  01AD                     l134:
   960  01AD  0008               	return
   961  01AE                     __end_of_start_ch:
   962                           
   963                           	psect	text2
   964  021D                     __ptext2:	
   965 ;; *************** function _start_adc *****************
   966 ;; Defined at:
   967 ;;		line 11 in file "ADC_LIB.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  frec            1    wreg     unsigned char 
   970 ;;  isr             1    0[BANK0 ] unsigned char 
   971 ;;  Vref            1    1[BANK0 ] unsigned char 
   972 ;;  justRL          1    2[BANK0 ] unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  frec            1    5[BANK0 ] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       3       0       0       0
   985 ;;      Locals:         0       1       0       0       0
   986 ;;      Temps:          0       2       0       0       0
   987 ;;      Totals:         0       6       0       0       0
   988 ;;Total ram usage:        6 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _start_adc
  1000  021D                     _start_adc:
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _start_adc: [wreg-fsr0h+status,2+status,0]
  1004                           ;start_adc@frec stored from wreg
  1005  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1006  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1007  021F  00A5               	movwf	start_adc@frec
  1008  0220                     l1122:
  1009                           
  1010                           ;ADC_LIB.c: 12:     ADCON0bits.ADON = 1;
  1011  0220  141F               	bsf	31,0	;volatile
  1012                           
  1013                           ;ADC_LIB.c: 13:     switch (frec) {
  1014  0221  2A2E               	goto	l1126
  1015  0222                     l101:	
  1016                           ;ADC_LIB.c: 14:         case 1:
  1017                           
  1018                           
  1019                           ;ADC_LIB.c: 15:             ADCON0bits.ADCS0 = 0;
  1020  0222  131F               	bcf	31,6	;volatile
  1021                           
  1022                           ;ADC_LIB.c: 16:             ADCON0bits.ADCS1 = 0;
  1023  0223  139F               	bcf	31,7	;volatile
  1024                           
  1025                           ;ADC_LIB.c: 17:             break;
  1026  0224  2A44               	goto	l1128
  1027  0225                     l103:	
  1028                           ;ADC_LIB.c: 18:         case 2:
  1029                           
  1030                           
  1031                           ;ADC_LIB.c: 19:             ADCON0bits.ADCS0 = 1;
  1032  0225  171F               	bsf	31,6	;volatile
  1033                           
  1034                           ;ADC_LIB.c: 20:             ADCON0bits.ADCS1 = 0;
  1035  0226  139F               	bcf	31,7	;volatile
  1036                           
  1037                           ;ADC_LIB.c: 21:             break;
  1038  0227  2A44               	goto	l1128
  1039  0228                     l104:	
  1040                           ;ADC_LIB.c: 22:         case 3:
  1041                           
  1042                           
  1043                           ;ADC_LIB.c: 23:             ADCON0bits.ADCS0 = 0;
  1044  0228  131F               	bcf	31,6	;volatile
  1045                           
  1046                           ;ADC_LIB.c: 24:             ADCON0bits.ADCS1 = 1;
  1047  0229  179F               	bsf	31,7	;volatile
  1048                           
  1049                           ;ADC_LIB.c: 25:             break;
  1050  022A  2A44               	goto	l1128
  1051  022B                     l105:	
  1052                           ;ADC_LIB.c: 26:         case 4:
  1053                           
  1054                           
  1055                           ;ADC_LIB.c: 27:             ADCON0bits.ADCS0 = 1;
  1056  022B  171F               	bsf	31,6	;volatile
  1057                           
  1058                           ;ADC_LIB.c: 28:             ADCON0bits.ADCS1 = 1;
  1059  022C  179F               	bsf	31,7	;volatile
  1060                           
  1061                           ;ADC_LIB.c: 29:             break;
  1062  022D  2A44               	goto	l1128
  1063  022E                     l1126:
  1064  022E  0825               	movf	start_adc@frec,w
  1065  022F  00A3               	movwf	??_start_adc
  1066  0230  01A4               	clrf	??_start_adc+1
  1067                           
  1068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 1, Range of values is 0 to 0
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            4     3 (average)
  1074                           ; direct_byte           11     8 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  0231  0824               	movf	??_start_adc+1,w
  1078  0232  3A00               	xorlw	0	; case 0
  1079  0233  1903               	skipnz
  1080  0234  2A36               	goto	l1378
  1081  0235  2A44               	goto	l1128
  1082  0236                     l1378:
  1083                           
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 4, Range of values is 1 to 4
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           13     7 (average)
  1089                           ; direct_byte           23    11 (fixed)
  1090                           ; jumptable            263     9 (fixed)
  1091                           ;	Chosen strategy is simple_byte
  1092  0236  0823               	movf	??_start_adc,w
  1093  0237  3A01               	xorlw	1	; case 1
  1094  0238  1903               	skipnz
  1095  0239  2A22               	goto	l101
  1096  023A  3A03               	xorlw	3	; case 2
  1097  023B  1903               	skipnz
  1098  023C  2A25               	goto	l103
  1099  023D  3A01               	xorlw	1	; case 3
  1100  023E  1903               	skipnz
  1101  023F  2A28               	goto	l104
  1102  0240  3A07               	xorlw	7	; case 4
  1103  0241  1903               	skipnz
  1104  0242  2A2B               	goto	l105
  1105  0243  2A44               	goto	l1128
  1106  0244                     l1128:
  1107                           
  1108                           ;ADC_LIB.c: 31:     if (isr == 1) {
  1109  0244  0320               	decf	start_adc@isr,w
  1110  0245  1D03               	btfss	3,2
  1111  0246  2A48               	goto	u131
  1112  0247  2A49               	goto	u130
  1113  0248                     u131:
  1114  0248  2A4F               	goto	l1132
  1115  0249                     u130:
  1116  0249                     l1130:
  1117                           
  1118                           ;ADC_LIB.c: 32:         PIE1bits.ADIE = 1;
  1119  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1120  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1121  024B  170C               	bsf	12,6	;volatile
  1122                           
  1123                           ;ADC_LIB.c: 33:         PIR1bits.ADIF = 0;
  1124  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1125  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1126  024E  130C               	bcf	12,6	;volatile
  1127  024F                     l1132:
  1128                           
  1129                           ;ADC_LIB.c: 35:     if (justRL == 0) {
  1130  024F  0822               	movf	start_adc@justRL,w
  1131  0250  1D03               	btfss	3,2
  1132  0251  2A53               	goto	u141
  1133  0252  2A54               	goto	u140
  1134  0253                     u141:
  1135  0253  2A58               	goto	l107
  1136  0254                     u140:
  1137  0254                     l1134:
  1138                           
  1139                           ;ADC_LIB.c: 36:         ADCON1bits.ADFM = 0;
  1140  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1142  0256  139F               	bcf	31,7	;volatile
  1143                           
  1144                           ;ADC_LIB.c: 37:     } else {
  1145  0257  2A70               	goto	l1138
  1146  0258                     l107:
  1147                           
  1148                           ;ADC_LIB.c: 38:         ADCON1bits.ADFM = 1;
  1149  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0259  1303               	bcf	3,6	;RP1=0, select bank1
  1151  025A  179F               	bsf	31,7	;volatile
  1152  025B  2A70               	goto	l1138
  1153  025C                     l110:	
  1154                           ;ADC_LIB.c: 41:         case 0:
  1155                           
  1156                           
  1157                           ;ADC_LIB.c: 42:             ADCON1bits.VCFG0 = 0;
  1158  025C  1683               	bsf	3,5	;RP0=1, select bank1
  1159  025D  1303               	bcf	3,6	;RP1=0, select bank1
  1160  025E  121F               	bcf	31,4	;volatile
  1161                           
  1162                           ;ADC_LIB.c: 43:             ADCON1bits.VCFG1 = 0;
  1163  025F  129F               	bcf	31,5	;volatile
  1164                           
  1165                           ;ADC_LIB.c: 44:             break;
  1166  0260  2A88               	goto	l115
  1167  0261                     l112:	
  1168                           ;ADC_LIB.c: 45:         case 1:
  1169                           
  1170                           
  1171                           ;ADC_LIB.c: 46:             ADCON1bits.VCFG0 = 1;
  1172  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0263  161F               	bsf	31,4	;volatile
  1175                           
  1176                           ;ADC_LIB.c: 47:             ADCON1bits.VCFG1 = 0;
  1177  0264  129F               	bcf	31,5	;volatile
  1178                           
  1179                           ;ADC_LIB.c: 48:             break;
  1180  0265  2A88               	goto	l115
  1181  0266                     l113:	
  1182                           ;ADC_LIB.c: 49:         case 2:
  1183                           
  1184                           
  1185                           ;ADC_LIB.c: 50:             ADCON1bits.VCFG0 = 0;
  1186  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0268  121F               	bcf	31,4	;volatile
  1189                           
  1190                           ;ADC_LIB.c: 51:             ADCON1bits.VCFG1 = 1;
  1191  0269  169F               	bsf	31,5	;volatile
  1192                           
  1193                           ;ADC_LIB.c: 52:             break;
  1194  026A  2A88               	goto	l115
  1195  026B                     l114:	
  1196                           ;ADC_LIB.c: 53:         case 3:
  1197                           
  1198                           
  1199                           ;ADC_LIB.c: 54:             ADCON1bits.VCFG0 = 1;
  1200  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1201  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1202  026D  161F               	bsf	31,4	;volatile
  1203                           
  1204                           ;ADC_LIB.c: 55:             ADCON1bits.VCFG1 = 1;
  1205  026E  169F               	bsf	31,5	;volatile
  1206                           
  1207                           ;ADC_LIB.c: 56:             break;
  1208  026F  2A88               	goto	l115
  1209  0270                     l1138:
  1210  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0272  0821               	movf	start_adc@Vref,w
  1213  0273  00A3               	movwf	??_start_adc
  1214  0274  01A4               	clrf	??_start_adc+1
  1215                           
  1216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1217                           ; Switch size 1, requested type "simple"
  1218                           ; Number of cases is 1, Range of values is 0 to 0
  1219                           ; switch strategies available:
  1220                           ; Name         Instructions Cycles
  1221                           ; simple_byte            4     3 (average)
  1222                           ; direct_byte           11     8 (fixed)
  1223                           ; jumptable            260     6 (fixed)
  1224                           ;	Chosen strategy is simple_byte
  1225  0275  0824               	movf	??_start_adc+1,w
  1226  0276  3A00               	xorlw	0	; case 0
  1227  0277  1903               	skipnz
  1228  0278  2A7A               	goto	l1380
  1229  0279  2A88               	goto	l115
  1230  027A                     l1380:
  1231                           
  1232                           ; Switch size 1, requested type "simple"
  1233                           ; Number of cases is 4, Range of values is 0 to 3
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte           13     7 (average)
  1237                           ; direct_byte           20     8 (fixed)
  1238                           ; jumptable            260     6 (fixed)
  1239                           ;	Chosen strategy is simple_byte
  1240  027A  0823               	movf	??_start_adc,w
  1241  027B  3A00               	xorlw	0	; case 0
  1242  027C  1903               	skipnz
  1243  027D  2A5C               	goto	l110
  1244  027E  3A01               	xorlw	1	; case 1
  1245  027F  1903               	skipnz
  1246  0280  2A61               	goto	l112
  1247  0281  3A03               	xorlw	3	; case 2
  1248  0282  1903               	skipnz
  1249  0283  2A66               	goto	l113
  1250  0284  3A01               	xorlw	1	; case 3
  1251  0285  1903               	skipnz
  1252  0286  2A6B               	goto	l114
  1253  0287  2A88               	goto	l115
  1254  0288                     l115:
  1255  0288  0008               	return
  1256  0289                     __end_of_start_adc:
  1257                           
  1258                           	psect	text3
  1259  001C                     __ptext3:	
  1260 ;; *************** function _Select_ch *****************
  1261 ;; Defined at:
  1262 ;;		line 105 in file "ADC_LIB.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  channel         1    wreg     unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  channel         1    2[BANK0 ] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       1       0       0       0
  1278 ;;      Temps:          0       2       0       0       0
  1279 ;;      Totals:         0       3       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    3
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _Select_ch
  1292  001C                     _Select_ch:
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1296                           ;Select_ch@channel stored from wreg
  1297  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1298  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1299  001E  00A2               	movwf	Select_ch@channel
  1300  001F                     l1160:
  1301                           
  1302                           ;ADC_LIB.c: 106:     switch (channel) {
  1303  001F  2870               	goto	l1164
  1304  0020                     l138:	
  1305                           ;ADC_LIB.c: 107:         case 0:
  1306                           
  1307                           
  1308                           ;ADC_LIB.c: 108:             ADCON0bits.CHS0 = 0;
  1309  0020  111F               	bcf	31,2	;volatile
  1310                           
  1311                           ;ADC_LIB.c: 109:             ADCON0bits.CHS1 = 0;
  1312  0021  119F               	bcf	31,3	;volatile
  1313                           
  1314                           ;ADC_LIB.c: 110:             ADCON0bits.CHS2 = 0;
  1315  0022  121F               	bcf	31,4	;volatile
  1316                           
  1317                           ;ADC_LIB.c: 111:             ADCON0bits.CHS3 = 0;
  1318  0023  129F               	bcf	31,5	;volatile
  1319                           
  1320                           ;ADC_LIB.c: 112:             break;
  1321  0024  28AA               	goto	l139
  1322  0025                     l140:	
  1323                           ;ADC_LIB.c: 113:         case 1:
  1324                           
  1325                           
  1326                           ;ADC_LIB.c: 114:             ADCON0bits.CHS0 = 1;
  1327  0025  151F               	bsf	31,2	;volatile
  1328                           
  1329                           ;ADC_LIB.c: 115:             ADCON0bits.CHS1 = 0;
  1330  0026  119F               	bcf	31,3	;volatile
  1331                           
  1332                           ;ADC_LIB.c: 116:             ADCON0bits.CHS2 = 0;
  1333  0027  121F               	bcf	31,4	;volatile
  1334                           
  1335                           ;ADC_LIB.c: 117:             ADCON0bits.CHS3 = 0;
  1336  0028  129F               	bcf	31,5	;volatile
  1337                           
  1338                           ;ADC_LIB.c: 118:             break;
  1339  0029  28AA               	goto	l139
  1340  002A                     l141:	
  1341                           ;ADC_LIB.c: 119:         case 2:
  1342                           
  1343                           
  1344                           ;ADC_LIB.c: 120:             ADCON0bits.CHS0 = 0;
  1345  002A  111F               	bcf	31,2	;volatile
  1346                           
  1347                           ;ADC_LIB.c: 121:             ADCON0bits.CHS1 = 1;
  1348  002B  159F               	bsf	31,3	;volatile
  1349                           
  1350                           ;ADC_LIB.c: 122:             ADCON0bits.CHS2 = 0;
  1351  002C  121F               	bcf	31,4	;volatile
  1352                           
  1353                           ;ADC_LIB.c: 123:             ADCON0bits.CHS3 = 0;
  1354  002D  129F               	bcf	31,5	;volatile
  1355                           
  1356                           ;ADC_LIB.c: 124:             break;
  1357  002E  28AA               	goto	l139
  1358  002F                     l142:	
  1359                           ;ADC_LIB.c: 125:         case 3:
  1360                           
  1361                           
  1362                           ;ADC_LIB.c: 126:             ADCON0bits.CHS0 = 1;
  1363  002F  151F               	bsf	31,2	;volatile
  1364                           
  1365                           ;ADC_LIB.c: 127:             ADCON0bits.CHS1 = 1;
  1366  0030  159F               	bsf	31,3	;volatile
  1367                           
  1368                           ;ADC_LIB.c: 128:             ADCON0bits.CHS2 = 0;
  1369  0031  121F               	bcf	31,4	;volatile
  1370                           
  1371                           ;ADC_LIB.c: 129:             ADCON0bits.CHS3 = 0;
  1372  0032  129F               	bcf	31,5	;volatile
  1373                           
  1374                           ;ADC_LIB.c: 130:             break;
  1375  0033  28AA               	goto	l139
  1376  0034                     l143:	
  1377                           ;ADC_LIB.c: 131:         case 4:
  1378                           
  1379                           
  1380                           ;ADC_LIB.c: 132:             ADCON0bits.CHS0 = 0;
  1381  0034  111F               	bcf	31,2	;volatile
  1382                           
  1383                           ;ADC_LIB.c: 133:             ADCON0bits.CHS1 = 0;
  1384  0035  119F               	bcf	31,3	;volatile
  1385                           
  1386                           ;ADC_LIB.c: 134:             ADCON0bits.CHS2 = 1;
  1387  0036  161F               	bsf	31,4	;volatile
  1388                           
  1389                           ;ADC_LIB.c: 135:             ADCON0bits.CHS3 = 0;
  1390  0037  129F               	bcf	31,5	;volatile
  1391                           
  1392                           ;ADC_LIB.c: 136:             break;
  1393  0038  28AA               	goto	l139
  1394  0039                     l144:	
  1395                           ;ADC_LIB.c: 137:         case 5:
  1396                           
  1397                           
  1398                           ;ADC_LIB.c: 138:             ADCON0bits.CHS0 = 1;
  1399  0039  151F               	bsf	31,2	;volatile
  1400                           
  1401                           ;ADC_LIB.c: 139:             ADCON0bits.CHS1 = 0;
  1402  003A  119F               	bcf	31,3	;volatile
  1403                           
  1404                           ;ADC_LIB.c: 140:             ADCON0bits.CHS2 = 1;
  1405  003B  161F               	bsf	31,4	;volatile
  1406                           
  1407                           ;ADC_LIB.c: 141:             ADCON0bits.CHS3 = 0;
  1408  003C  129F               	bcf	31,5	;volatile
  1409                           
  1410                           ;ADC_LIB.c: 142:             break;
  1411  003D  28AA               	goto	l139
  1412  003E                     l145:	
  1413                           ;ADC_LIB.c: 143:         case 6:
  1414                           
  1415                           
  1416                           ;ADC_LIB.c: 144:             ADCON0bits.CHS0 = 0;
  1417  003E  111F               	bcf	31,2	;volatile
  1418                           
  1419                           ;ADC_LIB.c: 145:             ADCON0bits.CHS1 = 1;
  1420  003F  159F               	bsf	31,3	;volatile
  1421                           
  1422                           ;ADC_LIB.c: 146:             ADCON0bits.CHS2 = 1;
  1423  0040  161F               	bsf	31,4	;volatile
  1424                           
  1425                           ;ADC_LIB.c: 147:             ADCON0bits.CHS3 = 0;
  1426  0041  129F               	bcf	31,5	;volatile
  1427                           
  1428                           ;ADC_LIB.c: 148:             break;
  1429  0042  28AA               	goto	l139
  1430  0043                     l146:	
  1431                           ;ADC_LIB.c: 149:         case 7:
  1432                           
  1433                           
  1434                           ;ADC_LIB.c: 150:             ADCON0bits.CHS0 = 1;
  1435  0043  151F               	bsf	31,2	;volatile
  1436                           
  1437                           ;ADC_LIB.c: 151:             ADCON0bits.CHS1 = 1;
  1438  0044  159F               	bsf	31,3	;volatile
  1439                           
  1440                           ;ADC_LIB.c: 152:             ADCON0bits.CHS2 = 1;
  1441  0045  161F               	bsf	31,4	;volatile
  1442                           
  1443                           ;ADC_LIB.c: 153:             ADCON0bits.CHS3 = 0;
  1444  0046  129F               	bcf	31,5	;volatile
  1445                           
  1446                           ;ADC_LIB.c: 154:             break;
  1447  0047  28AA               	goto	l139
  1448  0048                     l147:	
  1449                           ;ADC_LIB.c: 155:         case 8:
  1450                           
  1451                           
  1452                           ;ADC_LIB.c: 156:             ADCON0bits.CHS0 = 0;
  1453  0048  111F               	bcf	31,2	;volatile
  1454                           
  1455                           ;ADC_LIB.c: 157:             ADCON0bits.CHS1 = 0;
  1456  0049  119F               	bcf	31,3	;volatile
  1457                           
  1458                           ;ADC_LIB.c: 158:             ADCON0bits.CHS2 = 0;
  1459  004A  121F               	bcf	31,4	;volatile
  1460                           
  1461                           ;ADC_LIB.c: 159:             ADCON0bits.CHS3 = 1;
  1462  004B  169F               	bsf	31,5	;volatile
  1463                           
  1464                           ;ADC_LIB.c: 160:             break;
  1465  004C  28AA               	goto	l139
  1466  004D                     l148:	
  1467                           ;ADC_LIB.c: 161:         case 9:
  1468                           
  1469                           
  1470                           ;ADC_LIB.c: 162:             ADCON0bits.CHS0 = 1;
  1471  004D  151F               	bsf	31,2	;volatile
  1472                           
  1473                           ;ADC_LIB.c: 163:             ADCON0bits.CHS1 = 0;
  1474  004E  119F               	bcf	31,3	;volatile
  1475                           
  1476                           ;ADC_LIB.c: 164:             ADCON0bits.CHS2 = 0;
  1477  004F  121F               	bcf	31,4	;volatile
  1478                           
  1479                           ;ADC_LIB.c: 165:             ADCON0bits.CHS3 = 1;
  1480  0050  169F               	bsf	31,5	;volatile
  1481                           
  1482                           ;ADC_LIB.c: 166:             break;
  1483  0051  28AA               	goto	l139
  1484  0052                     l149:	
  1485                           ;ADC_LIB.c: 167:         case 10:
  1486                           
  1487                           
  1488                           ;ADC_LIB.c: 168:             ADCON0bits.CHS0 = 0;
  1489  0052  111F               	bcf	31,2	;volatile
  1490                           
  1491                           ;ADC_LIB.c: 169:             ADCON0bits.CHS1 = 1;
  1492  0053  159F               	bsf	31,3	;volatile
  1493                           
  1494                           ;ADC_LIB.c: 170:             ADCON0bits.CHS2 = 0;
  1495  0054  121F               	bcf	31,4	;volatile
  1496                           
  1497                           ;ADC_LIB.c: 171:             ADCON0bits.CHS3 = 1;
  1498  0055  169F               	bsf	31,5	;volatile
  1499                           
  1500                           ;ADC_LIB.c: 172:             break;
  1501  0056  28AA               	goto	l139
  1502  0057                     l150:	
  1503                           ;ADC_LIB.c: 173:         case 11:
  1504                           
  1505                           
  1506                           ;ADC_LIB.c: 174:             ADCON0bits.CHS0 = 1;
  1507  0057  151F               	bsf	31,2	;volatile
  1508                           
  1509                           ;ADC_LIB.c: 175:             ADCON0bits.CHS1 = 1;
  1510  0058  159F               	bsf	31,3	;volatile
  1511                           
  1512                           ;ADC_LIB.c: 176:             ADCON0bits.CHS2 = 0;
  1513  0059  121F               	bcf	31,4	;volatile
  1514                           
  1515                           ;ADC_LIB.c: 177:             ADCON0bits.CHS3 = 1;
  1516  005A  169F               	bsf	31,5	;volatile
  1517                           
  1518                           ;ADC_LIB.c: 178:             break;
  1519  005B  28AA               	goto	l139
  1520  005C                     l151:	
  1521                           ;ADC_LIB.c: 179:         case 12:
  1522                           
  1523                           
  1524                           ;ADC_LIB.c: 180:             ADCON0bits.CHS0 = 0;
  1525  005C  111F               	bcf	31,2	;volatile
  1526                           
  1527                           ;ADC_LIB.c: 181:             ADCON0bits.CHS1 = 0;
  1528  005D  119F               	bcf	31,3	;volatile
  1529                           
  1530                           ;ADC_LIB.c: 182:             ADCON0bits.CHS2 = 1;
  1531  005E  161F               	bsf	31,4	;volatile
  1532                           
  1533                           ;ADC_LIB.c: 183:             ADCON0bits.CHS3 = 1;
  1534  005F  169F               	bsf	31,5	;volatile
  1535                           
  1536                           ;ADC_LIB.c: 184:             break;
  1537  0060  28AA               	goto	l139
  1538  0061                     l152:	
  1539                           ;ADC_LIB.c: 185:         case 13:
  1540                           
  1541                           
  1542                           ;ADC_LIB.c: 186:             ADCON0bits.CHS0 = 1;
  1543  0061  151F               	bsf	31,2	;volatile
  1544                           
  1545                           ;ADC_LIB.c: 187:             ADCON0bits.CHS1 = 0;
  1546  0062  119F               	bcf	31,3	;volatile
  1547                           
  1548                           ;ADC_LIB.c: 188:             ADCON0bits.CHS2 = 1;
  1549  0063  161F               	bsf	31,4	;volatile
  1550                           
  1551                           ;ADC_LIB.c: 189:             ADCON0bits.CHS3 = 1;
  1552  0064  169F               	bsf	31,5	;volatile
  1553                           
  1554                           ;ADC_LIB.c: 190:             break;
  1555  0065  28AA               	goto	l139
  1556  0066                     l153:	
  1557                           ;ADC_LIB.c: 191:         case 14:
  1558                           
  1559                           
  1560                           ;ADC_LIB.c: 192:             ADCON0bits.CHS0 = 0;
  1561  0066  111F               	bcf	31,2	;volatile
  1562                           
  1563                           ;ADC_LIB.c: 193:             ADCON0bits.CHS1 = 1;
  1564  0067  159F               	bsf	31,3	;volatile
  1565                           
  1566                           ;ADC_LIB.c: 194:             ADCON0bits.CHS2 = 1;
  1567  0068  161F               	bsf	31,4	;volatile
  1568                           
  1569                           ;ADC_LIB.c: 195:             ADCON0bits.CHS3 = 1;
  1570  0069  169F               	bsf	31,5	;volatile
  1571                           
  1572                           ;ADC_LIB.c: 196:             break;
  1573  006A  28AA               	goto	l139
  1574  006B                     l154:	
  1575                           ;ADC_LIB.c: 197:         case 15:
  1576                           
  1577                           
  1578                           ;ADC_LIB.c: 198:             ADCON0bits.CHS0 = 1;
  1579  006B  151F               	bsf	31,2	;volatile
  1580                           
  1581                           ;ADC_LIB.c: 199:             ADCON0bits.CHS1 = 1;
  1582  006C  159F               	bsf	31,3	;volatile
  1583                           
  1584                           ;ADC_LIB.c: 200:             ADCON0bits.CHS2 = 1;
  1585  006D  161F               	bsf	31,4	;volatile
  1586                           
  1587                           ;ADC_LIB.c: 201:             ADCON0bits.CHS3 = 1;
  1588  006E  169F               	bsf	31,5	;volatile
  1589                           
  1590                           ;ADC_LIB.c: 202:             break;
  1591  006F  28AA               	goto	l139
  1592  0070                     l1164:
  1593  0070  0822               	movf	Select_ch@channel,w
  1594  0071  00A0               	movwf	??_Select_ch
  1595  0072  01A1               	clrf	??_Select_ch+1
  1596                           
  1597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 1, Range of values is 0 to 0
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            4     3 (average)
  1603                           ; direct_byte           11     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606  0073  0821               	movf	??_Select_ch+1,w
  1607  0074  3A00               	xorlw	0	; case 0
  1608  0075  1903               	skipnz
  1609  0076  2878               	goto	l1382
  1610  0077  28AA               	goto	l139
  1611  0078                     l1382:
  1612                           
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 16, Range of values is 0 to 15
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           49    25 (average)
  1618                           ; direct_byte           56     8 (fixed)
  1619                           ; jumptable            260     6 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621  0078  0820               	movf	??_Select_ch,w
  1622  0079  3A00               	xorlw	0	; case 0
  1623  007A  1903               	skipnz
  1624  007B  2820               	goto	l138
  1625  007C  3A01               	xorlw	1	; case 1
  1626  007D  1903               	skipnz
  1627  007E  2825               	goto	l140
  1628  007F  3A03               	xorlw	3	; case 2
  1629  0080  1903               	skipnz
  1630  0081  282A               	goto	l141
  1631  0082  3A01               	xorlw	1	; case 3
  1632  0083  1903               	skipnz
  1633  0084  282F               	goto	l142
  1634  0085  3A07               	xorlw	7	; case 4
  1635  0086  1903               	skipnz
  1636  0087  2834               	goto	l143
  1637  0088  3A01               	xorlw	1	; case 5
  1638  0089  1903               	skipnz
  1639  008A  2839               	goto	l144
  1640  008B  3A03               	xorlw	3	; case 6
  1641  008C  1903               	skipnz
  1642  008D  283E               	goto	l145
  1643  008E  3A01               	xorlw	1	; case 7
  1644  008F  1903               	skipnz
  1645  0090  2843               	goto	l146
  1646  0091  3A0F               	xorlw	15	; case 8
  1647  0092  1903               	skipnz
  1648  0093  2848               	goto	l147
  1649  0094  3A01               	xorlw	1	; case 9
  1650  0095  1903               	skipnz
  1651  0096  284D               	goto	l148
  1652  0097  3A03               	xorlw	3	; case 10
  1653  0098  1903               	skipnz
  1654  0099  2852               	goto	l149
  1655  009A  3A01               	xorlw	1	; case 11
  1656  009B  1903               	skipnz
  1657  009C  2857               	goto	l150
  1658  009D  3A07               	xorlw	7	; case 12
  1659  009E  1903               	skipnz
  1660  009F  285C               	goto	l151
  1661  00A0  3A01               	xorlw	1	; case 13
  1662  00A1  1903               	skipnz
  1663  00A2  2861               	goto	l152
  1664  00A3  3A03               	xorlw	3	; case 14
  1665  00A4  1903               	skipnz
  1666  00A5  2866               	goto	l153
  1667  00A6  3A01               	xorlw	1	; case 15
  1668  00A7  1903               	skipnz
  1669  00A8  286B               	goto	l154
  1670  00A9  28AA               	goto	l139
  1671  00AA                     l139:
  1672                           
  1673                           ;ADC_LIB.c: 204:     _delay((unsigned long)((4)*(4000000/4000000.0)));
  1674  00AA  28AB               	nop2	;2 cycle nop
  1675  00AB  28AC               	nop2	;2 cycle nop
  1676                           
  1677                           ;ADC_LIB.c: 205:     ADCON0bits.GO = 1;
  1678  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1679  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1680  00AE  149F               	bsf	31,1	;volatile
  1681  00AF                     l155:
  1682  00AF  0008               	return
  1683  00B0                     __end_of_Select_ch:
  1684                           
  1685                           	psect	text4
  1686  01AE                     __ptext4:	
  1687 ;; *************** function _ISR *****************
  1688 ;; Defined at:
  1689 ;;		line 41 in file "lab_2.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          4       0       0       0       0
  1706 ;;      Totals:         4       0       0       0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    2
  1710 ;; This function calls:
  1711 ;;		_NibbleLS
  1712 ;;		_NibbleMS
  1713 ;; This function is called by:
  1714 ;;		Interrupt level 1
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _ISR
  1720  01AE                     _ISR:
  1721  01AE                     i1l1172:
  1722                           
  1723                           ;lab_2.c: 42:             if ((antireb & 0b00000011) == 1) {
  1724  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1725  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1726  01B0  1F0C               	btfss	12,6	;volatile
  1727  01B1  29B3               	goto	u15_21
  1728  01B2  29B4               	goto	u15_20
  1729  01B3                     u15_21:
  1730  01B3  29BA               	goto	i1l1180
  1731  01B4                     u15_20:
  1732  01B4                     i1l1174:
  1733                           
  1734                           ;lab_2.c: 43:                 count--;
  1735  01B4  130C               	bcf	12,6	;volatile
  1736  01B5                     i1l1176:
  1737                           
  1738                           ;lab_2.c: 44:                 PORTD--;
  1739  01B5  081E               	movf	30,w	;volatile
  1740  01B6  00F8               	movwf	??_ISR
  1741  01B7  0878               	movf	??_ISR,w
  1742  01B8  00FD               	movwf	_display_adc	;volatile
  1743  01B9                     i1l1178:
  1744                           
  1745                           ;lab_2.c: 45:             }
  1746  01B9  149F               	bsf	31,1	;volatile
  1747  01BA                     i1l1180:
  1748                           
  1749                           ;lab_2.c: 47:         INTCONbits.RBIF = 0;
  1750  01BA  1D0B               	btfss	11,2	;volatile
  1751  01BB  29BD               	goto	u16_21
  1752  01BC  29BE               	goto	u16_20
  1753  01BD                     u16_21:
  1754  01BD  29E1               	goto	i1l1202
  1755  01BE                     u16_20:
  1756  01BE                     i1l1182:
  1757                           
  1758                           ;lab_2.c: 48:     }
  1759  01BE  0187               	clrf	7	;volatile
  1760                           
  1761                           ;lab_2.c: 49: }
  1762  01BF  0189               	clrf	9	;volatile
  1763  01C0                     i1l1184:
  1764                           
  1765                           ;lab_2.c: 51: 
  1766  01C0  0827               	movf	_toogle,w
  1767  01C1  1D03               	btfss	3,2
  1768  01C2  29C4               	goto	u17_21
  1769  01C3  29C5               	goto	u17_20
  1770  01C4                     u17_21:
  1771  01C4  29D3               	goto	i1l1192
  1772  01C5                     u17_20:
  1773  01C5                     i1l1186:
  1774                           
  1775                           ;lab_2.c: 52: void main(void) {
  1776  01C5  087D               	movf	_display_adc,w	;volatile
  1777  01C6  120A  118A  22D4  120A  118A  	fcall	_NibbleMS
  1778  01CB                     i1l1188:
  1779                           
  1780                           ;lab_2.c: 53: 
  1781  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1782  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1783  01CD  1409               	bsf	9,0	;volatile
  1784  01CE                     i1l1190:
  1785                           
  1786                           ;lab_2.c: 54:     INTCONbits.GIE = 1;
  1787  01CE  3001               	movlw	1
  1788  01CF  00F8               	movwf	??_ISR
  1789  01D0  0878               	movf	??_ISR,w
  1790  01D1  07A7               	addwf	_toogle,f
  1791                           
  1792                           ;lab_2.c: 55:     INTCONbits.PEIE = 1;
  1793  01D2  29DE               	goto	i1l1198
  1794  01D3                     i1l1192:
  1795                           
  1796                           ;lab_2.c: 56:     INTCONbits.T0IE = 1;
  1797  01D3  087D               	movf	_display_adc,w	;volatile
  1798  01D4  120A  118A  22F1  120A  118A  	fcall	_NibbleLS
  1799  01D9                     i1l1194:
  1800                           
  1801                           ;lab_2.c: 57:     INTCONbits.T0IF = 0;
  1802  01D9  3001               	movlw	1
  1803  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1804  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1805  01DC  02A7               	subwf	_toogle,f
  1806  01DD                     i1l1196:
  1807                           
  1808                           ;lab_2.c: 58:     INTCONbits.RBIE = 1;
  1809  01DD  1489               	bsf	9,1	;volatile
  1810  01DE                     i1l1198:
  1811                           
  1812                           ;lab_2.c: 60:     IOCBbits.IOCB0 = 1;
  1813  01DE  30B1               	movlw	177
  1814  01DF  0081               	movwf	1	;volatile
  1815  01E0                     i1l1200:
  1816                           
  1817                           ;lab_2.c: 61:     IOCBbits.IOCB1 = 1;
  1818  01E0  110B               	bcf	11,2	;volatile
  1819  01E1                     i1l1202:
  1820                           
  1821                           ;lab_2.c: 63:     OPTION_REGbits.PSA = 0;
  1822  01E1  1C0B               	btfss	11,0	;volatile
  1823  01E2  29E4               	goto	u18_21
  1824  01E3  29E5               	goto	u18_20
  1825  01E4                     u18_21:
  1826  01E4  2A14               	goto	i1l73
  1827  01E5                     u18_20:
  1828  01E5                     i1l1204:
  1829                           
  1830                           ;lab_2.c: 64:     OPTION_REGbits.PS0 = 1;
  1831  01E5  0826               	movf	_antireb_ant,w
  1832  01E6  00F8               	movwf	??_ISR
  1833  01E7  0878               	movf	??_ISR,w
  1834  01E8  00FC               	movwf	_antireb
  1835                           
  1836                           ;lab_2.c: 65:     OPTION_REGbits.PS1 = 0;
  1837  01E9  0806               	movf	6,w	;volatile
  1838  01EA  00F8               	movwf	??_ISR
  1839  01EB  0878               	movf	??_ISR,w
  1840  01EC  00A6               	movwf	_antireb_ant
  1841  01ED                     i1l1206:
  1842                           
  1843                           ;lab_2.c: 66:     OPTION_REGbits.PS2 = 1;
  1844  01ED  3003               	movlw	3
  1845  01EE  0526               	andwf	_antireb_ant,w
  1846  01EF  00F8               	movwf	??_ISR
  1847  01F0  3003               	movlw	3
  1848  01F1  0678               	xorwf	??_ISR,w
  1849  01F2  1D03               	btfss	3,2
  1850  01F3  29F5               	goto	u19_21
  1851  01F4  29F6               	goto	u19_20
  1852  01F5                     u19_21:
  1853  01F5  2A13               	goto	i1l1214
  1854  01F6                     u19_20:
  1855  01F6                     i1l1208:
  1856                           
  1857                           ;lab_2.c: 67:     TMR0 = 177;
  1858  01F6  3003               	movlw	3
  1859  01F7  057C               	andwf	_antireb,w
  1860  01F8  00F8               	movwf	??_ISR
  1861  01F9  3002               	movlw	2
  1862  01FA  0678               	xorwf	??_ISR,w
  1863  01FB  1D03               	btfss	3,2
  1864  01FC  29FE               	goto	u20_21
  1865  01FD  29FF               	goto	u20_20
  1866  01FE                     u20_21:
  1867  01FE  2A07               	goto	i1l71
  1868  01FF                     u20_20:
  1869  01FF                     i1l1210:
  1870                           
  1871                           ;lab_2.c: 68: 
  1872  01FF  3001               	movlw	1
  1873  0200  00F8               	movwf	??_ISR
  1874  0201  0878               	movf	??_ISR,w
  1875  0202  07A8               	addwf	_count,f
  1876                           
  1877                           ;lab_2.c: 69:     ANSEL = 0;
  1878  0203  3001               	movlw	1
  1879  0204  00F8               	movwf	??_ISR
  1880  0205  0878               	movf	??_ISR,w
  1881  0206  0788               	addwf	8,f	;volatile
  1882  0207                     i1l71:	
  1883                           ;lab_2.c: 70:     ANSELH = 0;
  1884                           
  1885                           
  1886                           ;lab_2.c: 71:     start_adc(2, 1, 0, 0);
  1887  0207  3003               	movlw	3
  1888  0208  057C               	andwf	_antireb,w
  1889  0209  00F8               	movwf	??_ISR
  1890  020A  0378               	decf	??_ISR,w
  1891  020B  1D03               	btfss	3,2
  1892  020C  2A0E               	goto	u21_21
  1893  020D  2A0F               	goto	u21_20
  1894  020E                     u21_21:
  1895  020E  2A13               	goto	i1l1214
  1896  020F                     u21_20:
  1897  020F                     i1l1212:
  1898                           
  1899                           ;lab_2.c: 72:     start_ch(8);
  1900  020F  3001               	movlw	1
  1901  0210  02A8               	subwf	_count,f
  1902                           
  1903                           ;lab_2.c: 73:     Select_ch(8);
  1904  0211  3001               	movlw	1
  1905  0212  0288               	subwf	8,f	;volatile
  1906  0213                     i1l1214:
  1907                           
  1908                           ;lab_2.c: 76:     TRISC = 0;
  1909  0213  100B               	bcf	11,0	;volatile
  1910  0214                     i1l73:
  1911  0214  087B               	movf	??_ISR+3,w
  1912  0215  008A               	movwf	10
  1913  0216  087A               	movf	??_ISR+2,w
  1914  0217  0084               	movwf	4
  1915  0218  0E79               	swapf	??_ISR+1,w
  1916  0219  0083               	movwf	3
  1917  021A  0EFE               	swapf	btemp,f
  1918  021B  0E7E               	swapf	btemp,w
  1919  021C  0009               	retfie
  1920  021D                     __end_of_ISR:
  1921                           
  1922                           	psect	intentry
  1923  0004                     __pintentry:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1926                           
  1927  0004                     interrupt_function:
  1928  007E                     saved_w	set	btemp
  1929  0004  00FE               	movwf	btemp
  1930  0005  0E03               	swapf	3,w
  1931  0006  00F9               	movwf	??_ISR+1
  1932  0007  0804               	movf	4,w
  1933  0008  00FA               	movwf	??_ISR+2
  1934  0009  080A               	movf	10,w
  1935  000A  00FB               	movwf	??_ISR+3
  1936  000B  120A  118A  29AE   	ljmp	_ISR
  1937                           
  1938                           	psect	text5
  1939  02D4                     __ptext5:	
  1940 ;; *************** function _NibbleMS *****************
  1941 ;; Defined at:
  1942 ;;		line 63 in file "display_7s.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  adcMs           1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  adcMs           1    5[COMMON] unsigned char 
  1947 ;;  temp            1    7[COMMON] unsigned char 
  1948 ;;  nlh             1    6[COMMON] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         3       0       0       0       0
  1960 ;;      Temps:          2       0       0       0       0
  1961 ;;      Totals:         5       0       0       0       0
  1962 ;;Total ram usage:        5 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    1
  1965 ;; This function calls:
  1966 ;;		_tabla7segmentos
  1967 ;; This function is called by:
  1968 ;;		_ISR
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _NibbleMS
  1974  02D4                     _NibbleMS:
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _NibbleMS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1978                           ;NibbleMS@adcMs stored from wreg
  1979  02D4  00F5               	movwf	NibbleMS@adcMs
  1980  02D5                     i1l1106:
  1981                           
  1982                           ;display_7s.c: 64:     uint8_t temp = adcMs;
  1983  02D5  0875               	movf	NibbleMS@adcMs,w
  1984  02D6  00F3               	movwf	??_NibbleMS
  1985  02D7  0873               	movf	??_NibbleMS,w
  1986  02D8  00F7               	movwf	NibbleMS@temp
  1987  02D9                     i1l1108:
  1988                           
  1989                           ;display_7s.c: 65:     temp = (temp >> 4);
  1990  02D9  0877               	movf	NibbleMS@temp,w
  1991  02DA  00F3               	movwf	??_NibbleMS
  1992  02DB  3004               	movlw	4
  1993  02DC                     u12_25:
  1994  02DC  1003               	clrc
  1995  02DD  0CF3               	rrf	??_NibbleMS,f
  1996  02DE  3EFF               	addlw	-1
  1997  02DF  1D03               	skipz
  1998  02E0  2ADC               	goto	u12_25
  1999  02E1  0873               	movf	??_NibbleMS,w
  2000  02E2  00F4               	movwf	??_NibbleMS+1
  2001  02E3  0874               	movf	??_NibbleMS+1,w
  2002  02E4  00F7               	movwf	NibbleMS@temp
  2003  02E5                     i1l1110:
  2004                           
  2005                           ;display_7s.c: 66:     uint8_t nlh = (temp & 0b00001111);
  2006  02E5  0877               	movf	NibbleMS@temp,w
  2007  02E6  390F               	andlw	15
  2008  02E7  00F3               	movwf	??_NibbleMS
  2009  02E8  0873               	movf	??_NibbleMS,w
  2010  02E9  00F6               	movwf	NibbleMS@nlh
  2011  02EA                     i1l1112:
  2012                           
  2013                           ;display_7s.c: 67:     tabla7segmentos(nlh);
  2014  02EA  0876               	movf	NibbleMS@nlh,w
  2015  02EB  120A  118A  20B0  120A  118A  	fcall	_tabla7segmentos
  2016  02F0                     i1l181:
  2017  02F0  0008               	return
  2018  02F1                     __end_of_NibbleMS:
  2019                           
  2020                           	psect	text6
  2021  02F1                     __ptext6:	
  2022 ;; *************** function _NibbleLS *****************
  2023 ;; Defined at:
  2024 ;;		line 70 in file "display_7s.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  adcLs           1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  adcLs           1    4[COMMON] unsigned char 
  2029 ;;  nsl             1    5[COMMON] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       0       0       0
  2040 ;;      Locals:         2       0       0       0       0
  2041 ;;      Temps:          1       0       0       0       0
  2042 ;;      Totals:         3       0       0       0       0
  2043 ;;Total ram usage:        3 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    1
  2046 ;; This function calls:
  2047 ;;		_tabla7segmentos
  2048 ;; This function is called by:
  2049 ;;		_ISR
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _NibbleLS
  2055  02F1                     _NibbleLS:
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _NibbleLS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2059                           ;NibbleLS@adcLs stored from wreg
  2060  02F1  00F4               	movwf	NibbleLS@adcLs
  2061  02F2                     i1l1116:
  2062                           
  2063                           ;display_7s.c: 71:     uint8_t nsl = (adcLs & 0b00001111);
  2064  02F2  0874               	movf	NibbleLS@adcLs,w
  2065  02F3  390F               	andlw	15
  2066  02F4  00F3               	movwf	??_NibbleLS
  2067  02F5  0873               	movf	??_NibbleLS,w
  2068  02F6  00F5               	movwf	NibbleLS@nsl
  2069  02F7                     i1l1118:
  2070                           
  2071                           ;display_7s.c: 72:     tabla7segmentos(nsl);
  2072  02F7  0875               	movf	NibbleLS@nsl,w
  2073  02F8  120A  118A  20B0  120A  118A  	fcall	_tabla7segmentos
  2074  02FD                     i1l184:
  2075  02FD  0008               	return
  2076  02FE                     __end_of_NibbleLS:
  2077                           
  2078                           	psect	text7
  2079  00B0                     __ptext7:	
  2080 ;; *************** function _tabla7segmentos *****************
  2081 ;; Defined at:
  2082 ;;		line 10 in file "display_7s.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  valor           1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  valor           1    2[COMMON] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0
  2098 ;;      Temps:          2       0       0       0       0
  2099 ;;      Totals:         3       0       0       0       0
  2100 ;;Total ram usage:        3 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_NibbleMS
  2106 ;;		_NibbleLS
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _tabla7segmentos
  2112  00B0                     _tabla7segmentos:
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _tabla7segmentos: [wreg-fsr0h+status,2+status,0]
  2116                           ;tabla7segmentos@valor stored from wreg
  2117  00B0  00F2               	movwf	tabla7segmentos@valor
  2118  00B1                     i1l1064:
  2119                           
  2120                           ;display_7s.c: 11:     switch (valor) {
  2121  00B1  2902               	goto	i1l1100
  2122  00B2                     i1l1066:
  2123                           
  2124                           ;display_7s.c: 13:             PORTC = 0b01110111;
  2125  00B2  3077               	movlw	119
  2126  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2127  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2128  00B5  0087               	movwf	7	;volatile
  2129                           
  2130                           ;display_7s.c: 14:             break;
  2131  00B6  293C               	goto	i1l178
  2132  00B7                     i1l1068:
  2133                           
  2134                           ;display_7s.c: 16:             PORTC = 0b01000001;
  2135  00B7  3041               	movlw	65
  2136  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2137  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2138  00BA  0087               	movwf	7	;volatile
  2139                           
  2140                           ;display_7s.c: 17:             break;
  2141  00BB  293C               	goto	i1l178
  2142  00BC                     i1l1070:
  2143                           
  2144                           ;display_7s.c: 19:             PORTC = 0b00111011;
  2145  00BC  303B               	movlw	59
  2146  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2147  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2148  00BF  0087               	movwf	7	;volatile
  2149                           
  2150                           ;display_7s.c: 20:             break;
  2151  00C0  293C               	goto	i1l178
  2152  00C1                     i1l1072:
  2153                           
  2154                           ;display_7s.c: 22:             PORTC = 0b01101011;
  2155  00C1  306B               	movlw	107
  2156  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  2157  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  2158  00C4  0087               	movwf	7	;volatile
  2159                           
  2160                           ;display_7s.c: 23:             break;
  2161  00C5  293C               	goto	i1l178
  2162  00C6                     i1l1074:
  2163                           
  2164                           ;display_7s.c: 25:             PORTC = 0b01001101;
  2165  00C6  304D               	movlw	77
  2166  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2167  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2168  00C9  0087               	movwf	7	;volatile
  2169                           
  2170                           ;display_7s.c: 26:             break;
  2171  00CA  293C               	goto	i1l178
  2172  00CB                     i1l1076:
  2173                           
  2174                           ;display_7s.c: 28:             PORTC = 0b01101110;
  2175  00CB  306E               	movlw	110
  2176  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2177  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2178  00CE  0087               	movwf	7	;volatile
  2179                           
  2180                           ;display_7s.c: 29:             break;
  2181  00CF  293C               	goto	i1l178
  2182  00D0                     i1l1078:
  2183                           
  2184                           ;display_7s.c: 31:             PORTC = 0b01111110;
  2185  00D0  307E               	movlw	126
  2186  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2187  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2188  00D3  0087               	movwf	7	;volatile
  2189                           
  2190                           ;display_7s.c: 32:             break;
  2191  00D4  293C               	goto	i1l178
  2192  00D5                     i1l1080:
  2193                           
  2194                           ;display_7s.c: 34:             PORTC = 0b01000011;
  2195  00D5  3043               	movlw	67
  2196  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2197  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2198  00D8  0087               	movwf	7	;volatile
  2199                           
  2200                           ;display_7s.c: 35:             break;
  2201  00D9  293C               	goto	i1l178
  2202  00DA                     i1l1082:
  2203                           
  2204                           ;display_7s.c: 37:             PORTC = 0b01111111;
  2205  00DA  307F               	movlw	127
  2206  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2207  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2208  00DD  0087               	movwf	7	;volatile
  2209                           
  2210                           ;display_7s.c: 38:             break;
  2211  00DE  293C               	goto	i1l178
  2212  00DF                     i1l1084:
  2213                           
  2214                           ;display_7s.c: 40:             PORTC = 0b01101111;
  2215  00DF  306F               	movlw	111
  2216  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2217  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2218  00E2  0087               	movwf	7	;volatile
  2219                           
  2220                           ;display_7s.c: 41:             break;
  2221  00E3  293C               	goto	i1l178
  2222  00E4                     i1l1086:
  2223                           
  2224                           ;display_7s.c: 43:             PORTC = 0b01011111;
  2225  00E4  305F               	movlw	95
  2226  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2227  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2228  00E7  0087               	movwf	7	;volatile
  2229                           
  2230                           ;display_7s.c: 44:             break;
  2231  00E8  293C               	goto	i1l178
  2232  00E9                     i1l1088:
  2233                           
  2234                           ;display_7s.c: 46:             PORTC = 0b01111100;
  2235  00E9  307C               	movlw	124
  2236  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2237  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  2238  00EC  0087               	movwf	7	;volatile
  2239                           
  2240                           ;display_7s.c: 47:             break;
  2241  00ED  293C               	goto	i1l178
  2242  00EE                     i1l1090:
  2243                           
  2244                           ;display_7s.c: 49:             PORTC = 0b00110110;
  2245  00EE  3036               	movlw	54
  2246  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2247  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2248  00F1  0087               	movwf	7	;volatile
  2249                           
  2250                           ;display_7s.c: 50:             break;
  2251  00F2  293C               	goto	i1l178
  2252  00F3                     i1l1092:
  2253                           
  2254                           ;display_7s.c: 52:             PORTC = 0b01111001;
  2255  00F3  3079               	movlw	121
  2256  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2257  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2258  00F6  0087               	movwf	7	;volatile
  2259                           
  2260                           ;display_7s.c: 53:             break;
  2261  00F7  293C               	goto	i1l178
  2262  00F8                     i1l1094:
  2263                           
  2264                           ;display_7s.c: 55:             PORTC = 0b00111110;
  2265  00F8  303E               	movlw	62
  2266  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2267  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2268  00FB  0087               	movwf	7	;volatile
  2269                           
  2270                           ;display_7s.c: 56:             break;
  2271  00FC  293C               	goto	i1l178
  2272  00FD                     i1l1096:
  2273                           
  2274                           ;display_7s.c: 58:             PORTC = 0b00011110;
  2275  00FD  301E               	movlw	30
  2276  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2277  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0100  0087               	movwf	7	;volatile
  2279                           
  2280                           ;display_7s.c: 59:             break;
  2281  0101  293C               	goto	i1l178
  2282  0102                     i1l1100:
  2283  0102  0872               	movf	tabla7segmentos@valor,w
  2284  0103  00F0               	movwf	??_tabla7segmentos
  2285  0104  01F1               	clrf	??_tabla7segmentos+1
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 1, Range of values is 0 to 0
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            4     3 (average)
  2293                           ; direct_byte           11     8 (fixed)
  2294                           ; jumptable            260     6 (fixed)
  2295                           ;	Chosen strategy is simple_byte
  2296  0105  0871               	movf	??_tabla7segmentos+1,w
  2297  0106  3A00               	xorlw	0	; case 0
  2298  0107  1903               	skipnz
  2299  0108  290A               	goto	i1l1384
  2300  0109  293C               	goto	i1l178
  2301  010A                     i1l1384:
  2302                           
  2303                           ; Switch size 1, requested type "simple"
  2304                           ; Number of cases is 16, Range of values is 0 to 15
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte           49    25 (average)
  2308                           ; direct_byte           56     8 (fixed)
  2309                           ; jumptable            260     6 (fixed)
  2310                           ;	Chosen strategy is simple_byte
  2311  010A  0870               	movf	??_tabla7segmentos,w
  2312  010B  3A00               	xorlw	0	; case 0
  2313  010C  1903               	skipnz
  2314  010D  28B2               	goto	i1l1066
  2315  010E  3A01               	xorlw	1	; case 1
  2316  010F  1903               	skipnz
  2317  0110  28B7               	goto	i1l1068
  2318  0111  3A03               	xorlw	3	; case 2
  2319  0112  1903               	skipnz
  2320  0113  28BC               	goto	i1l1070
  2321  0114  3A01               	xorlw	1	; case 3
  2322  0115  1903               	skipnz
  2323  0116  28C1               	goto	i1l1072
  2324  0117  3A07               	xorlw	7	; case 4
  2325  0118  1903               	skipnz
  2326  0119  28C6               	goto	i1l1074
  2327  011A  3A01               	xorlw	1	; case 5
  2328  011B  1903               	skipnz
  2329  011C  28CB               	goto	i1l1076
  2330  011D  3A03               	xorlw	3	; case 6
  2331  011E  1903               	skipnz
  2332  011F  28D0               	goto	i1l1078
  2333  0120  3A01               	xorlw	1	; case 7
  2334  0121  1903               	skipnz
  2335  0122  28D5               	goto	i1l1080
  2336  0123  3A0F               	xorlw	15	; case 8
  2337  0124  1903               	skipnz
  2338  0125  28DA               	goto	i1l1082
  2339  0126  3A01               	xorlw	1	; case 9
  2340  0127  1903               	skipnz
  2341  0128  28DF               	goto	i1l1084
  2342  0129  3A03               	xorlw	3	; case 10
  2343  012A  1903               	skipnz
  2344  012B  28E4               	goto	i1l1086
  2345  012C  3A01               	xorlw	1	; case 11
  2346  012D  1903               	skipnz
  2347  012E  28E9               	goto	i1l1088
  2348  012F  3A07               	xorlw	7	; case 12
  2349  0130  1903               	skipnz
  2350  0131  28EE               	goto	i1l1090
  2351  0132  3A01               	xorlw	1	; case 13
  2352  0133  1903               	skipnz
  2353  0134  28F3               	goto	i1l1092
  2354  0135  3A03               	xorlw	3	; case 14
  2355  0136  1903               	skipnz
  2356  0137  28F8               	goto	i1l1094
  2357  0138  3A01               	xorlw	1	; case 15
  2358  0139  1903               	skipnz
  2359  013A  28FD               	goto	i1l1096
  2360  013B  293C               	goto	i1l178
  2361  013C                     i1l178:
  2362  013C  0008               	return
  2363  013D                     __end_of_tabla7segmentos:
  2364  007E                     btemp	set	126	;btemp
  2365  007E                     wtemp0	set	126
  2366                           
  2367                           	psect	config
  2368                           
  2369                           ;Config register CONFIG1 @ 0x2007
  2370                           ;	Oscillator Selection bits
  2371                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2372                           ;	Watchdog Timer Enable bit
  2373                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2374                           ;	Power-up Timer Enable bit
  2375                           ;	PWRTE = OFF, PWRT disabled
  2376                           ;	RE3/MCLR pin function select bit
  2377                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2378                           ;	Code Protection bit
  2379                           ;	CP = OFF, Program memory code protection is disabled
  2380                           ;	Data Code Protection bit
  2381                           ;	CPD = OFF, Data memory code protection is disabled
  2382                           ;	Brown Out Reset Selection bits
  2383                           ;	BOREN = OFF, BOR disabled
  2384                           ;	Internal External Switchover bit
  2385                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2386                           ;	Fail-Safe Clock Monitor Enabled bit
  2387                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2388                           ;	Low Voltage Programming Enable bit
  2389                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2390                           ;	In-Circuit Debugger Mode bit
  2391                           ;	DEBUG = 0x1, unprogrammed default
  2392  2007                     	org	8199
  2393  2007  20D4               	dw	8404
  2394                           
  2395                           ;Config register CONFIG2 @ 0x2008
  2396                           ;	Brown-out Reset Selection bit
  2397                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2398                           ;	Flash Program Memory Self Write Enable bits
  2399                           ;	WRT = OFF, Write protection off
  2400  2008                     	org	8200
  2401  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      6       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_NibbleMS
    _NibbleMS->_tabla7segmentos
    _NibbleLS->_tabla7segmentos

Critical Paths under _main in BANK0

    _main->_start_adc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                          _Select_ch
                          _start_adc
                           _start_ch
 ---------------------------------------------------------------------------------
 (1) _start_ch                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _start_adc                                            6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0     180
                                              8 COMMON     4     4      0
                           _NibbleLS
                           _NibbleMS
 ---------------------------------------------------------------------------------
 (3) _NibbleMS                                             5     5      0     113
                                              3 COMMON     5     5      0
                    _tabla7segmentos
 ---------------------------------------------------------------------------------
 (3) _NibbleLS                                             3     3      0      67
                                              3 COMMON     3     3      0
                    _tabla7segmentos
 ---------------------------------------------------------------------------------
 (4) _tabla7segmentos                                      3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _start_adc
   _start_ch

 _ISR (ROOT)
   _NibbleLS
     _tabla7segmentos
   _NibbleMS
     _tabla7segmentos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 22:37:30 2021

                      l79 02CF                       l101 0222                       l110 025C  
                     l103 0225                       l112 0261                       l104 0228  
                     l113 0266                       l105 022B                       l121 0145  
                     l114 026B                       l130 0169                       l122 0149  
                     l115 0288                       l107 0258                       l131 016D  
                     l123 014D                       l140 0025                       l132 0171  
                     l124 0151                       l141 002A                       l133 0175  
                     l125 0155                       l150 0057                       l142 002F  
                     l126 0159                       l134 01AD                       l151 005C  
                     l143 0034                       l127 015D                       l119 0141  
                     l152 0061                       l144 0039                       l128 0161  
                     l153 0066                       l145 003E                       l129 0165  
                     l154 006B                       l146 0043                       l138 0020  
                     l155 00AF                       l147 0048                       l139 00AA  
                     l148 004D                       l149 0052                       u130 0249  
                     u131 0248                       u140 0254                       u220 02CD  
                     u141 0253                       u221 02CC                       _ISR 01AE  
                     fsr0 0004                      ?_ISR 0070                      l1130 0249  
                    l1122 0220                      l1132 024F                      l1220 029C  
                    l1134 0254                      l1126 022E                      l1230 02B8  
                    l1222 029F                      l1160 001F                      l1128 0244  
                    l1152 0179                      l1240 02BF                      l1232 02BB  
                    l1224 02A0                      l1216 0289                      l1138 0270  
                    l1250 02C6                      l1242 02C0                      l1234 02BC  
                    l1226 02AC                      l1218 0298                      l1164 0070  
                    l1148 0140                      l1252 02C7                      l1244 02C1  
                    l1236 02BD                      l1228 02B2                      l1254 02CD  
                    l1246 02C4                      l1238 02BE                      l1248 02C5  
                    l1380 027A                      l1382 0078                      l1376 0181  
                    l1378 0236                      i1l71 0207                      i1l73 0214  
                    _TMR0 0001      tabla7segmentos@valor 0072                      _main 0289  
                    btemp 007E                      start 000E                     ??_ISR 0078  
             NibbleLS@nsl 0075               NibbleMS@nlh 0076                     ?_main 0070  
                   _ANSEL 0188                     i1l181 02F0                     i1l184 02FD  
                   i1l178 013C         ??_tabla7segmentos 0070                     u20_20 01FF  
                   u20_21 01FE                     u12_25 02DC                     u21_20 020F  
                   u21_21 020E                     u15_20 01B4                     u15_21 01B3  
                   u16_20 01BE                     u16_21 01BD                     u17_20 01C5  
                   u17_21 01C4                     u18_20 01E5                     u18_21 01E4  
                   u19_20 01F6                     u19_21 01F5                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _count 0028  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0011              __end_of_main 02D4          __end_of_NibbleLS 02FE  
        __end_of_NibbleMS 02F1                    ??_main 0026              NibbleMS@temp 0077  
                  _ADRESH 001E                    _ANSELH 0189                    i1l1100 0102  
                  i1l1110 02E5                    i1l1112 02EA                    i1l1200 01E0  
                  i1l1106 02D5                    i1l1210 01FF                    i1l1202 01E1  
                  i1l1116 02F2                    i1l1108 02D9                    i1l1212 020F  
                  i1l1204 01E5                    i1l1070 00BC                    i1l1118 02F7  
                  i1l1214 0213                    i1l1206 01ED                    i1l1080 00D5  
                  i1l1072 00C1                    i1l1064 00B1                    i1l1208 01F6  
                  i1l1090 00EE                    i1l1082 00DA                    i1l1074 00C6  
                  i1l1066 00B2                    i1l1092 00F3                    i1l1084 00DF  
                  i1l1076 00CB                    i1l1068 00B7                    i1l1180 01BA  
                  i1l1172 01AE                    i1l1094 00F8                    i1l1086 00E4  
                  i1l1078 00D0                    i1l1190 01CE                    i1l1182 01BE  
                  i1l1174 01B4                    i1l1096 00FD                    i1l1088 00E9  
                  i1l1192 01D3                    i1l1184 01C0                    i1l1176 01B5  
                  i1l1194 01D9                    i1l1186 01C5                    i1l1178 01B9  
                  i1l1196 01DD                    i1l1188 01CB                    i1l1198 01DE  
                  i1l1384 010A        __size_of_Select_ch 0094              start_adc@isr 0020  
                  _toogle 0027                    saved_w 007E          __end_of_start_ch 01AE  
 __end_of__initialization 0018            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
       __end_of_Select_ch 00B0                __pbssBANK0 0026                 ?_NibbleLS 0070  
               ?_NibbleMS 0070             NibbleLS@adcLs 0074             NibbleMS@adcMs 0075  
              __pmaintext 0289           _tabla7segmentos 00B0                __pintentry 0004  
      __size_of_start_adc 006C                ??_NibbleLS 0073                ??_NibbleMS 0073  
               ?_start_ch 0070                 _ANSELbits 0188                   __ptext1 013D  
                 __ptext2 021D                   __ptext3 001C                   __ptext4 01AE  
                 __ptext5 02D4                   __ptext6 02F1                   __ptext7 00B0  
                 _antireb 007C              __size_of_ISR 006F          Select_ch@channel 0022  
           start_adc@Vref 0021             start_adc@frec 0025      end_of_initialization 0018  
 __end_of_tabla7segmentos 013D         __end_of_start_adc 0289                ??_start_ch 0020  
               _PORTEbits 0009                 _TRISBbits 0086       start_initialization 0011  
             __end_of_ISR 021D          ?_tabla7segmentos 0070                 _Select_ch 001C  
       __size_of_NibbleLS 000D         __size_of_NibbleMS 001D               __pbssCOMMON 007C  
               ___latbits 0002             __pcstackBANK0 0020                ?_Select_ch 0070  
       __size_of_start_ch 0071         interrupt_function 0004                  _IOCBbits 0096  
                _PIE1bits 008C               _antireb_ant 0026           start_ch@channel 0022  
                _PIR1bits 000C           start_adc@justRL 0022               _display_adc 007D  
              _ADCON0bits 001F                _ADCON1bits 009F                 _start_adc 021D  
                _NibbleLS 02F1                  _NibbleMS 02D4               ??_Select_ch 0020  
              ?_start_adc 0020                _ANSELHbits 0189             __size_of_main 004B  
                _start_ch 013D                _INTCONbits 000B                  intlevel1 0000  
__size_of_tabla7segmentos 008D               ??_start_adc 0023  
