

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 17:29:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.31
    22                           ; Generated 13/10/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0008                     _PORTD	set	8
   369  0005                     _PORTA	set	5
   370  0001                     _TMR0	set	1
   371  0009                     _PORTEbits	set	9
   372  0009                     _PORTE	set	9
   373  0007                     _PORTC	set	7
   374  000B                     _INTCONbits	set	11
   375  001F                     _ADCON0bits	set	31
   376  001E                     _ADRESH	set	30
   377  000C                     _PIR1bits	set	12
   378  009F                     _ADCON1bits	set	159
   379  008C                     _PIE1bits	set	140
   380  0086                     _TRISBbits	set	134
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0085                     _TRISA	set	133
   385  0081                     _OPTION_REGbits	set	129
   386  0096                     _IOCBbits	set	150
   387  0189                     _ANSELHbits	set	393
   388  0188                     _ANSELbits	set	392
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  0011                     start_initialization:	
   394                           ; #config settings
   395                           
   396  0011                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  0011  01FC               	clrf	__pbssCOMMON& (0+127)
   400  0012  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   401                           
   402                           ; Clear objects allocated to BANK0
   403  0013  1283               	bcf	3,5	;RP0=0, select bank0
   404  0014  1303               	bcf	3,6	;RP1=0, select bank0
   405  0015  01A0               	clrf	__pbssBANK0& (0+127)
   406  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   407  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   408  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   409  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   410  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   411  001B                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  001B                     __end_of__initialization:
   415  001B  0183               	clrf	3
   416  001C  120A  118A  2A19   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419  007C                     __pbssCOMMON:
   420  007C                     _toogle:
   421  007C                     	ds	1
   422  007D                     _display_adc:
   423  007D                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0020                     __pbssBANK0:
   427  0020                     _valor_act:
   428  0020                     	ds	1
   429  0021                     _valor_ant:
   430  0021                     	ds	1
   431  0022                     _auxiliar:
   432  0022                     	ds	1
   433  0023                     _count:
   434  0023                     	ds	1
   435  0024                     _nibble_LS:
   436  0024                     	ds	1
   437  0025                     _nibble_MS:
   438  0025                     	ds	1
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:
   442  0070                     ?_izquierdo:
   443  0070                     ?_derecho:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_start_ch:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_Select_ch:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_ISR:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_tabla7segmentos:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_tabla7segmentos:	
   462                           ; 1 bytes @ 0x0
   463                           
   464                           
   465                           ; 1 bytes @ 0x0
   466  0070                     	ds	2
   467  0072                     tabla7segmentos@valor:
   468                           
   469                           ; 1 bytes @ 0x2
   470  0072                     	ds	1
   471  0073                     ??_izquierdo:
   472  0073                     ??_derecho:	
   473                           ; 1 bytes @ 0x3
   474                           
   475                           
   476                           ; 1 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     izquierdo@adcLs:
   479                           
   480                           ; 1 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     derecho@adcHs:
   483  0075                     izquierdo@nsl:	
   484                           ; 1 bytes @ 0x5
   485                           
   486                           
   487                           ; 1 bytes @ 0x5
   488  0075                     	ds	1
   489  0076                     derecho@nlh:
   490                           
   491                           ; 1 bytes @ 0x6
   492  0076                     	ds	1
   493  0077                     derecho@temp:
   494                           
   495                           ; 1 bytes @ 0x7
   496  0077                     	ds	1
   497  0078                     ??_ISR:
   498                           
   499                           ; 1 bytes @ 0x8
   500  0078                     	ds	4
   501                           
   502                           	psect	cstackBANK0
   503  0026                     __pcstackBANK0:
   504  0026                     ?_start_adc:
   505  0026                     ??_start_ch:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0026                     ??_Select_ch:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0026                     start_adc@isr:	
   512                           ; 1 bytes @ 0x0
   513                           
   514                           
   515                           ; 1 bytes @ 0x0
   516  0026                     	ds	1
   517  0027                     start_adc@Vref:
   518                           
   519                           ; 1 bytes @ 0x1
   520  0027                     	ds	1
   521  0028                     start_adc@justRL:
   522  0028                     start_ch@channel:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0028                     Select_ch@channel:	
   526                           ; 1 bytes @ 0x2
   527                           
   528                           
   529                           ; 1 bytes @ 0x2
   530  0028                     	ds	1
   531  0029                     ??_start_adc:
   532                           
   533                           ; 1 bytes @ 0x3
   534  0029                     	ds	2
   535  002B                     start_adc@frec:
   536                           
   537                           ; 1 bytes @ 0x5
   538  002B                     	ds	1
   539  002C                     ??_main:
   540                           
   541                           	psect	maintext
   542  0219                     __pmaintext:	
   543                           ; 1 bytes @ 0x6
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 73 in file "lab_2.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : B00/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels required when called:    4
   569 ;; This function calls:
   570 ;;		_Select_ch
   571 ;;		_start_adc
   572 ;;		_start_ch
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  0219                     _main:
   581  0219                     l1193:	
   582                           ;incstack = 0
   583                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;lab_2.c: 75:     PORTA = 0;
   587  0219  178B               	bsf	11,7	;volatile
   588                           
   589                           ;lab_2.c: 76:     PORTC = 0;
   590  021A  170B               	bsf	11,6	;volatile
   591                           
   592                           ;lab_2.c: 77:     PORTD = 0;
   593  021B  168B               	bsf	11,5	;volatile
   594                           
   595                           ;lab_2.c: 78:     PORTE = 0;
   596  021C  110B               	bcf	11,2	;volatile
   597                           
   598                           ;lab_2.c: 79:     while (1) {
   599  021D  158B               	bsf	11,3	;volatile
   600                           
   601                           ;lab_2.c: 80: 
   602  021E  100B               	bcf	11,0	;volatile
   603                           
   604                           ;lab_2.c: 81:     }
   605  021F  1683               	bsf	3,5	;RP0=1, select bank1
   606  0220  1303               	bcf	3,6	;RP1=0, select bank1
   607  0221  1416               	bsf	22,0	;volatile
   608                           
   609                           ;lab_2.c: 82: }
   610  0222  1496               	bsf	22,1	;volatile
   611  0223  1281               	bcf	1,5	;volatile
   612  0224  1181               	bcf	1,3	;volatile
   613  0225  1401               	bsf	1,0	;volatile
   614  0226  1081               	bcf	1,1	;volatile
   615  0227  1501               	bsf	1,2	;volatile
   616  0228                     l1195:
   617  0228  30B1               	movlw	177
   618  0229  1283               	bcf	3,5	;RP0=0, select bank0
   619  022A  1303               	bcf	3,6	;RP1=0, select bank0
   620  022B  0081               	movwf	1	;volatile
   621  022C                     l1197:
   622  022C  1683               	bsf	3,5	;RP0=1, select bank3
   623  022D  1703               	bsf	3,6	;RP1=1, select bank3
   624  022E  0188               	clrf	8	;volatile
   625  022F                     l1199:
   626  022F  0189               	clrf	9	;volatile
   627  0230                     l1201:
   628  0230  1283               	bcf	3,5	;RP0=0, select bank0
   629  0231  1303               	bcf	3,6	;RP1=0, select bank0
   630  0232  01A6               	clrf	start_adc@isr
   631  0233  0AA6               	incf	start_adc@isr,f
   632  0234  01A7               	clrf	start_adc@Vref
   633  0235  01A8               	clrf	start_adc@justRL
   634  0236  3002               	movlw	2
   635  0237  120A  118A  21AD  120A  118A  	fcall	_start_adc
   636  023C                     l1203:
   637  023C  3008               	movlw	8
   638  023D  120A  118A  213C  120A  118A  	fcall	_start_ch
   639  0242                     l1205:
   640  0242  3008               	movlw	8
   641  0243  120A  118A  201F  120A  118A  	fcall	_Select_ch
   642  0248                     l1207:
   643  0248  1683               	bsf	3,5	;RP0=1, select bank1
   644  0249  1303               	bcf	3,6	;RP1=0, select bank1
   645  024A  0185               	clrf	5	;volatile
   646  024B                     l1209:
   647  024B  0187               	clrf	7	;volatile
   648  024C                     l1211:
   649  024C  0188               	clrf	8	;volatile
   650  024D                     l1213:
   651  024D  0189               	clrf	9	;volatile
   652  024E                     l1215:
   653  024E  1406               	bsf	6,0	;volatile
   654  024F                     l1217:
   655  024F  1486               	bsf	6,1	;volatile
   656  0250                     l1219:
   657  0250  1506               	bsf	6,2	;volatile
   658  0251                     l1221:
   659  0251  1283               	bcf	3,5	;RP0=0, select bank0
   660  0252  1303               	bcf	3,6	;RP1=0, select bank0
   661  0253  0185               	clrf	5	;volatile
   662  0254                     l1223:
   663  0254  0187               	clrf	7	;volatile
   664  0255                     l1225:
   665  0255  0188               	clrf	8	;volatile
   666  0256                     l1227:
   667  0256  0189               	clrf	9	;volatile
   668  0257                     l79:
   669  0257                     l80:
   670  0257  2A57               	goto	l79
   671  0258  120A  118A  280E   	ljmp	start
   672  025B                     __end_of_main:
   673                           
   674                           	psect	text1
   675  013C                     __ptext1:	
   676 ;; *************** function _start_ch *****************
   677 ;; Defined at:
   678 ;;		line 52 in file "ADC_LIB.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  channel         1    wreg     unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  channel         1    2[BANK0 ] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       1       0       0       0
   694 ;;      Temps:          0       2       0       0       0
   695 ;;      Totals:         0       3       0       0       0
   696 ;;Total ram usage:        3 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    3
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _start_ch
   708  013C                     _start_ch:
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _start_ch: [wreg-fsr0h+status,2+status,0]
   712                           ;start_ch@channel stored from wreg
   713  013C  1283               	bcf	3,5	;RP0=0, select bank0
   714  013D  1303               	bcf	3,6	;RP1=0, select bank0
   715  013E  00A8               	movwf	start_ch@channel
   716  013F                     l1133:
   717                           
   718                           ;ADC_LIB.c: 53:     switch (channel) {
   719  013F  2978               	goto	l1137
   720  0140                     l116:	
   721                           ;ADC_LIB.c: 54:         case 0:
   722                           
   723                           
   724                           ;ADC_LIB.c: 55:             ANSELbits.ANS0 = 1;
   725  0140  1683               	bsf	3,5	;RP0=1, select bank3
   726  0141  1703               	bsf	3,6	;RP1=1, select bank3
   727  0142  1408               	bsf	8,0	;volatile
   728                           
   729                           ;ADC_LIB.c: 56:             break;
   730  0143  29AC               	goto	l131
   731  0144                     l118:	
   732                           ;ADC_LIB.c: 57:         case 1:
   733                           
   734                           
   735                           ;ADC_LIB.c: 58:             ANSELbits.ANS1 = 1;
   736  0144  1683               	bsf	3,5	;RP0=1, select bank3
   737  0145  1703               	bsf	3,6	;RP1=1, select bank3
   738  0146  1488               	bsf	8,1	;volatile
   739                           
   740                           ;ADC_LIB.c: 59:             break;
   741  0147  29AC               	goto	l131
   742  0148                     l119:	
   743                           ;ADC_LIB.c: 60:         case 2:
   744                           
   745                           
   746                           ;ADC_LIB.c: 61:             ANSELbits.ANS2 = 1;
   747  0148  1683               	bsf	3,5	;RP0=1, select bank3
   748  0149  1703               	bsf	3,6	;RP1=1, select bank3
   749  014A  1508               	bsf	8,2	;volatile
   750                           
   751                           ;ADC_LIB.c: 62:             break;
   752  014B  29AC               	goto	l131
   753  014C                     l120:	
   754                           ;ADC_LIB.c: 63:         case 3:
   755                           
   756                           
   757                           ;ADC_LIB.c: 64:             ANSELbits.ANS3 = 1;
   758  014C  1683               	bsf	3,5	;RP0=1, select bank3
   759  014D  1703               	bsf	3,6	;RP1=1, select bank3
   760  014E  1588               	bsf	8,3	;volatile
   761                           
   762                           ;ADC_LIB.c: 65:             break;
   763  014F  29AC               	goto	l131
   764  0150                     l121:	
   765                           ;ADC_LIB.c: 66:         case 4:
   766                           
   767                           
   768                           ;ADC_LIB.c: 67:             ANSELbits.ANS4 = 1;
   769  0150  1683               	bsf	3,5	;RP0=1, select bank3
   770  0151  1703               	bsf	3,6	;RP1=1, select bank3
   771  0152  1608               	bsf	8,4	;volatile
   772                           
   773                           ;ADC_LIB.c: 68:             break;
   774  0153  29AC               	goto	l131
   775  0154                     l122:	
   776                           ;ADC_LIB.c: 69:         case 5:
   777                           
   778                           
   779                           ;ADC_LIB.c: 70:             ANSELbits.ANS5 = 1;
   780  0154  1683               	bsf	3,5	;RP0=1, select bank3
   781  0155  1703               	bsf	3,6	;RP1=1, select bank3
   782  0156  1688               	bsf	8,5	;volatile
   783                           
   784                           ;ADC_LIB.c: 71:             break;
   785  0157  29AC               	goto	l131
   786  0158                     l123:	
   787                           ;ADC_LIB.c: 72:         case 6:
   788                           
   789                           
   790                           ;ADC_LIB.c: 73:             ANSELbits.ANS6 = 1;
   791  0158  1683               	bsf	3,5	;RP0=1, select bank3
   792  0159  1703               	bsf	3,6	;RP1=1, select bank3
   793  015A  1708               	bsf	8,6	;volatile
   794                           
   795                           ;ADC_LIB.c: 74:             break;
   796  015B  29AC               	goto	l131
   797  015C                     l124:	
   798                           ;ADC_LIB.c: 75:         case 7:
   799                           
   800                           
   801                           ;ADC_LIB.c: 76:             ANSELbits.ANS7 = 1;
   802  015C  1683               	bsf	3,5	;RP0=1, select bank3
   803  015D  1703               	bsf	3,6	;RP1=1, select bank3
   804  015E  1788               	bsf	8,7	;volatile
   805                           
   806                           ;ADC_LIB.c: 77:             break;
   807  015F  29AC               	goto	l131
   808  0160                     l125:	
   809                           ;ADC_LIB.c: 78:         case 8:
   810                           
   811                           
   812                           ;ADC_LIB.c: 79:             ANSELHbits.ANS8 = 1;
   813  0160  1683               	bsf	3,5	;RP0=1, select bank3
   814  0161  1703               	bsf	3,6	;RP1=1, select bank3
   815  0162  1409               	bsf	9,0	;volatile
   816                           
   817                           ;ADC_LIB.c: 80:             break;
   818  0163  29AC               	goto	l131
   819  0164                     l126:	
   820                           ;ADC_LIB.c: 81:         case 9:
   821                           
   822                           
   823                           ;ADC_LIB.c: 82:             ANSELHbits.ANS9 = 1;
   824  0164  1683               	bsf	3,5	;RP0=1, select bank3
   825  0165  1703               	bsf	3,6	;RP1=1, select bank3
   826  0166  1489               	bsf	9,1	;volatile
   827                           
   828                           ;ADC_LIB.c: 83:             break;
   829  0167  29AC               	goto	l131
   830  0168                     l127:	
   831                           ;ADC_LIB.c: 84:         case 10:
   832                           
   833                           
   834                           ;ADC_LIB.c: 85:             ANSELHbits.ANS10 = 1;
   835  0168  1683               	bsf	3,5	;RP0=1, select bank3
   836  0169  1703               	bsf	3,6	;RP1=1, select bank3
   837  016A  1509               	bsf	9,2	;volatile
   838                           
   839                           ;ADC_LIB.c: 86:             break;
   840  016B  29AC               	goto	l131
   841  016C                     l128:	
   842                           ;ADC_LIB.c: 87:         case 11:
   843                           
   844                           
   845                           ;ADC_LIB.c: 88:             ANSELHbits.ANS11 = 1;
   846  016C  1683               	bsf	3,5	;RP0=1, select bank3
   847  016D  1703               	bsf	3,6	;RP1=1, select bank3
   848  016E  1589               	bsf	9,3	;volatile
   849                           
   850                           ;ADC_LIB.c: 89:             break;
   851  016F  29AC               	goto	l131
   852  0170                     l129:	
   853                           ;ADC_LIB.c: 90:         case 12:
   854                           
   855                           
   856                           ;ADC_LIB.c: 91:             ANSELHbits.ANS12 = 1;
   857  0170  1683               	bsf	3,5	;RP0=1, select bank3
   858  0171  1703               	bsf	3,6	;RP1=1, select bank3
   859  0172  1609               	bsf	9,4	;volatile
   860                           
   861                           ;ADC_LIB.c: 92:             break;
   862  0173  29AC               	goto	l131
   863  0174                     l130:	
   864                           ;ADC_LIB.c: 93:         case 13:
   865                           
   866                           
   867                           ;ADC_LIB.c: 94:             ANSELHbits.ANS13 = 1;
   868  0174  1683               	bsf	3,5	;RP0=1, select bank3
   869  0175  1703               	bsf	3,6	;RP1=1, select bank3
   870  0176  1689               	bsf	9,5	;volatile
   871                           
   872                           ;ADC_LIB.c: 95:             break;
   873  0177  29AC               	goto	l131
   874  0178                     l1137:
   875  0178  0828               	movf	start_ch@channel,w
   876  0179  00A6               	movwf	??_start_ch
   877  017A  01A7               	clrf	??_start_ch+1
   878                           
   879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   880                           ; Switch size 1, requested type "simple"
   881                           ; Number of cases is 1, Range of values is 0 to 0
   882                           ; switch strategies available:
   883                           ; Name         Instructions Cycles
   884                           ; simple_byte            4     3 (average)
   885                           ; direct_byte           11     8 (fixed)
   886                           ; jumptable            260     6 (fixed)
   887                           ;	Chosen strategy is simple_byte
   888  017B  0827               	movf	??_start_ch+1,w
   889  017C  3A00               	xorlw	0	; case 0
   890  017D  1903               	skipnz
   891  017E  2980               	goto	l1349
   892  017F  29AC               	goto	l131
   893  0180                     l1349:
   894                           
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 14, Range of values is 0 to 13
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte           43    22 (average)
   900                           ; direct_byte           50     8 (fixed)
   901                           ; jumptable            260     6 (fixed)
   902                           ;	Chosen strategy is simple_byte
   903  0180  0826               	movf	??_start_ch,w
   904  0181  3A00               	xorlw	0	; case 0
   905  0182  1903               	skipnz
   906  0183  2940               	goto	l116
   907  0184  3A01               	xorlw	1	; case 1
   908  0185  1903               	skipnz
   909  0186  2944               	goto	l118
   910  0187  3A03               	xorlw	3	; case 2
   911  0188  1903               	skipnz
   912  0189  2948               	goto	l119
   913  018A  3A01               	xorlw	1	; case 3
   914  018B  1903               	skipnz
   915  018C  294C               	goto	l120
   916  018D  3A07               	xorlw	7	; case 4
   917  018E  1903               	skipnz
   918  018F  2950               	goto	l121
   919  0190  3A01               	xorlw	1	; case 5
   920  0191  1903               	skipnz
   921  0192  2954               	goto	l122
   922  0193  3A03               	xorlw	3	; case 6
   923  0194  1903               	skipnz
   924  0195  2958               	goto	l123
   925  0196  3A01               	xorlw	1	; case 7
   926  0197  1903               	skipnz
   927  0198  295C               	goto	l124
   928  0199  3A0F               	xorlw	15	; case 8
   929  019A  1903               	skipnz
   930  019B  2960               	goto	l125
   931  019C  3A01               	xorlw	1	; case 9
   932  019D  1903               	skipnz
   933  019E  2964               	goto	l126
   934  019F  3A03               	xorlw	3	; case 10
   935  01A0  1903               	skipnz
   936  01A1  2968               	goto	l127
   937  01A2  3A01               	xorlw	1	; case 11
   938  01A3  1903               	skipnz
   939  01A4  296C               	goto	l128
   940  01A5  3A07               	xorlw	7	; case 12
   941  01A6  1903               	skipnz
   942  01A7  2970               	goto	l129
   943  01A8  3A01               	xorlw	1	; case 13
   944  01A9  1903               	skipnz
   945  01AA  2974               	goto	l130
   946  01AB  29AC               	goto	l131
   947  01AC                     l131:
   948  01AC  0008               	return
   949  01AD                     __end_of_start_ch:
   950                           
   951                           	psect	text2
   952  01AD                     __ptext2:	
   953 ;; *************** function _start_adc *****************
   954 ;; Defined at:
   955 ;;		line 3 in file "ADC_LIB.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  frec            1    wreg     unsigned char 
   958 ;;  isr             1    0[BANK0 ] unsigned char 
   959 ;;  Vref            1    1[BANK0 ] unsigned char 
   960 ;;  justRL          1    2[BANK0 ] unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  frec            1    5[BANK0 ] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       3       0       0       0
   973 ;;      Locals:         0       1       0       0       0
   974 ;;      Temps:          0       2       0       0       0
   975 ;;      Totals:         0       6       0       0       0
   976 ;;Total ram usage:        6 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    3
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _start_adc
   988  01AD                     _start_adc:
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _start_adc: [wreg-fsr0h+status,2+status,0]
   992                           ;start_adc@frec stored from wreg
   993  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   994  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   995  01AF  00AB               	movwf	start_adc@frec
   996  01B0                     l1107:
   997                           
   998                           ;ADC_LIB.c: 4:     ADCON0bits.ADON = 1;
   999  01B0  141F               	bsf	31,0	;volatile
  1000                           
  1001                           ;ADC_LIB.c: 5:     switch (frec) {
  1002  01B1  29BE               	goto	l1111
  1003  01B2                     l98:	
  1004                           ;ADC_LIB.c: 6:         case 1:
  1005                           
  1006                           
  1007                           ;ADC_LIB.c: 7:             ADCON0bits.ADCS0 = 0;
  1008  01B2  131F               	bcf	31,6	;volatile
  1009                           
  1010                           ;ADC_LIB.c: 8:             ADCON0bits.ADCS1 = 0;
  1011  01B3  139F               	bcf	31,7	;volatile
  1012                           
  1013                           ;ADC_LIB.c: 9:             break;
  1014  01B4  29D4               	goto	l1113
  1015  01B5                     l100:	
  1016                           ;ADC_LIB.c: 10:         case 2:
  1017                           
  1018                           
  1019                           ;ADC_LIB.c: 11:             ADCON0bits.ADCS0 = 1;
  1020  01B5  171F               	bsf	31,6	;volatile
  1021                           
  1022                           ;ADC_LIB.c: 12:             ADCON0bits.ADCS1 = 0;
  1023  01B6  139F               	bcf	31,7	;volatile
  1024                           
  1025                           ;ADC_LIB.c: 13:             break;
  1026  01B7  29D4               	goto	l1113
  1027  01B8                     l101:	
  1028                           ;ADC_LIB.c: 14:         case 3:
  1029                           
  1030                           
  1031                           ;ADC_LIB.c: 15:             ADCON0bits.ADCS0 = 0;
  1032  01B8  131F               	bcf	31,6	;volatile
  1033                           
  1034                           ;ADC_LIB.c: 16:             ADCON0bits.ADCS1 = 1;
  1035  01B9  179F               	bsf	31,7	;volatile
  1036                           
  1037                           ;ADC_LIB.c: 17:             break;
  1038  01BA  29D4               	goto	l1113
  1039  01BB                     l102:	
  1040                           ;ADC_LIB.c: 18:         case 4:
  1041                           
  1042                           
  1043                           ;ADC_LIB.c: 19:             ADCON0bits.ADCS0 = 1;
  1044  01BB  171F               	bsf	31,6	;volatile
  1045                           
  1046                           ;ADC_LIB.c: 20:             ADCON0bits.ADCS1 = 1;
  1047  01BC  179F               	bsf	31,7	;volatile
  1048                           
  1049                           ;ADC_LIB.c: 21:             break;
  1050  01BD  29D4               	goto	l1113
  1051  01BE                     l1111:
  1052  01BE  082B               	movf	start_adc@frec,w
  1053  01BF  00A9               	movwf	??_start_adc
  1054  01C0  01AA               	clrf	??_start_adc+1
  1055                           
  1056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1057                           ; Switch size 1, requested type "simple"
  1058                           ; Number of cases is 1, Range of values is 0 to 0
  1059                           ; switch strategies available:
  1060                           ; Name         Instructions Cycles
  1061                           ; simple_byte            4     3 (average)
  1062                           ; direct_byte           11     8 (fixed)
  1063                           ; jumptable            260     6 (fixed)
  1064                           ;	Chosen strategy is simple_byte
  1065  01C1  082A               	movf	??_start_adc+1,w
  1066  01C2  3A00               	xorlw	0	; case 0
  1067  01C3  1903               	skipnz
  1068  01C4  29C6               	goto	l1351
  1069  01C5  29D4               	goto	l1113
  1070  01C6                     l1351:
  1071                           
  1072                           ; Switch size 1, requested type "simple"
  1073                           ; Number of cases is 4, Range of values is 1 to 4
  1074                           ; switch strategies available:
  1075                           ; Name         Instructions Cycles
  1076                           ; simple_byte           13     7 (average)
  1077                           ; direct_byte           23    11 (fixed)
  1078                           ; jumptable            263     9 (fixed)
  1079                           ;	Chosen strategy is simple_byte
  1080  01C6  0829               	movf	??_start_adc,w
  1081  01C7  3A01               	xorlw	1	; case 1
  1082  01C8  1903               	skipnz
  1083  01C9  29B2               	goto	l98
  1084  01CA  3A03               	xorlw	3	; case 2
  1085  01CB  1903               	skipnz
  1086  01CC  29B5               	goto	l100
  1087  01CD  3A01               	xorlw	1	; case 3
  1088  01CE  1903               	skipnz
  1089  01CF  29B8               	goto	l101
  1090  01D0  3A07               	xorlw	7	; case 4
  1091  01D1  1903               	skipnz
  1092  01D2  29BB               	goto	l102
  1093  01D3  29D4               	goto	l1113
  1094  01D4                     l1113:
  1095                           
  1096                           ;ADC_LIB.c: 23:     if (isr == 1) {
  1097  01D4  0326               	decf	start_adc@isr,w
  1098  01D5  1D03               	btfss	3,2
  1099  01D6  29D8               	goto	u81
  1100  01D7  29D9               	goto	u80
  1101  01D8                     u81:
  1102  01D8  29DF               	goto	l1117
  1103  01D9                     u80:
  1104  01D9                     l1115:
  1105                           
  1106                           ;ADC_LIB.c: 24:         PIE1bits.ADIE = 1;
  1107  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1108  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1109  01DB  170C               	bsf	12,6	;volatile
  1110                           
  1111                           ;ADC_LIB.c: 25:         PIR1bits.ADIF = 0;
  1112  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1113  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1114  01DE  130C               	bcf	12,6	;volatile
  1115  01DF                     l1117:
  1116                           
  1117                           ;ADC_LIB.c: 27:     if (justRL == 0) {
  1118  01DF  0828               	movf	start_adc@justRL,w
  1119  01E0  1D03               	btfss	3,2
  1120  01E1  29E3               	goto	u91
  1121  01E2  29E4               	goto	u90
  1122  01E3                     u91:
  1123  01E3  29E8               	goto	l104
  1124  01E4                     u90:
  1125  01E4                     l1119:
  1126                           
  1127                           ;ADC_LIB.c: 28:         ADCON1bits.ADFM = 0;
  1128  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1129  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1130  01E6  139F               	bcf	31,7	;volatile
  1131                           
  1132                           ;ADC_LIB.c: 29:     } else {
  1133  01E7  2A00               	goto	l1123
  1134  01E8                     l104:
  1135                           
  1136                           ;ADC_LIB.c: 30:         ADCON1bits.ADFM = 1;
  1137  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1138  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1139  01EA  179F               	bsf	31,7	;volatile
  1140  01EB  2A00               	goto	l1123
  1141  01EC                     l107:	
  1142                           ;ADC_LIB.c: 33:         case 0:
  1143                           
  1144                           
  1145                           ;ADC_LIB.c: 34:             ADCON1bits.VCFG0 = 0;
  1146  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1147  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1148  01EE  121F               	bcf	31,4	;volatile
  1149                           
  1150                           ;ADC_LIB.c: 35:             ADCON1bits.VCFG1 = 0;
  1151  01EF  129F               	bcf	31,5	;volatile
  1152                           
  1153                           ;ADC_LIB.c: 36:             break;
  1154  01F0  2A18               	goto	l112
  1155  01F1                     l109:	
  1156                           ;ADC_LIB.c: 37:         case 1:
  1157                           
  1158                           
  1159                           ;ADC_LIB.c: 38:             ADCON1bits.VCFG0 = 1;
  1160  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1161  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1162  01F3  161F               	bsf	31,4	;volatile
  1163                           
  1164                           ;ADC_LIB.c: 39:             ADCON1bits.VCFG1 = 0;
  1165  01F4  129F               	bcf	31,5	;volatile
  1166                           
  1167                           ;ADC_LIB.c: 40:             break;
  1168  01F5  2A18               	goto	l112
  1169  01F6                     l110:	
  1170                           ;ADC_LIB.c: 41:         case 2:
  1171                           
  1172                           
  1173                           ;ADC_LIB.c: 42:             ADCON1bits.VCFG0 = 0;
  1174  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1175  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1176  01F8  121F               	bcf	31,4	;volatile
  1177                           
  1178                           ;ADC_LIB.c: 43:             ADCON1bits.VCFG1 = 1;
  1179  01F9  169F               	bsf	31,5	;volatile
  1180                           
  1181                           ;ADC_LIB.c: 44:             break;
  1182  01FA  2A18               	goto	l112
  1183  01FB                     l111:	
  1184                           ;ADC_LIB.c: 45:         case 3:
  1185                           
  1186                           
  1187                           ;ADC_LIB.c: 46:             ADCON1bits.VCFG0 = 1;
  1188  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1189  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1190  01FD  161F               	bsf	31,4	;volatile
  1191                           
  1192                           ;ADC_LIB.c: 47:             ADCON1bits.VCFG1 = 1;
  1193  01FE  169F               	bsf	31,5	;volatile
  1194                           
  1195                           ;ADC_LIB.c: 48:             break;
  1196  01FF  2A18               	goto	l112
  1197  0200                     l1123:
  1198  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0202  0827               	movf	start_adc@Vref,w
  1201  0203  00A9               	movwf	??_start_adc
  1202  0204  01AA               	clrf	??_start_adc+1
  1203                           
  1204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 0 to 0
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ; direct_byte           11     8 (fixed)
  1211                           ; jumptable            260     6 (fixed)
  1212                           ;	Chosen strategy is simple_byte
  1213  0205  082A               	movf	??_start_adc+1,w
  1214  0206  3A00               	xorlw	0	; case 0
  1215  0207  1903               	skipnz
  1216  0208  2A0A               	goto	l1353
  1217  0209  2A18               	goto	l112
  1218  020A                     l1353:
  1219                           
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 4, Range of values is 0 to 3
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte           13     7 (average)
  1225                           ; direct_byte           20     8 (fixed)
  1226                           ; jumptable            260     6 (fixed)
  1227                           ;	Chosen strategy is simple_byte
  1228  020A  0829               	movf	??_start_adc,w
  1229  020B  3A00               	xorlw	0	; case 0
  1230  020C  1903               	skipnz
  1231  020D  29EC               	goto	l107
  1232  020E  3A01               	xorlw	1	; case 1
  1233  020F  1903               	skipnz
  1234  0210  29F1               	goto	l109
  1235  0211  3A03               	xorlw	3	; case 2
  1236  0212  1903               	skipnz
  1237  0213  29F6               	goto	l110
  1238  0214  3A01               	xorlw	1	; case 3
  1239  0215  1903               	skipnz
  1240  0216  29FB               	goto	l111
  1241  0217  2A18               	goto	l112
  1242  0218                     l112:
  1243  0218  0008               	return
  1244  0219                     __end_of_start_adc:
  1245                           
  1246                           	psect	text3
  1247  001F                     __ptext3:	
  1248 ;; *************** function _Select_ch *****************
  1249 ;; Defined at:
  1250 ;;		line 99 in file "ADC_LIB.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  channel         1    wreg     unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  channel         1    2[BANK0 ] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       1       0       0       0
  1266 ;;      Temps:          0       2       0       0       0
  1267 ;;      Totals:         0       3       0       0       0
  1268 ;;Total ram usage:        3 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    3
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _Select_ch
  1280  001F                     _Select_ch:
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1284                           ;Select_ch@channel stored from wreg
  1285  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0021  00A8               	movwf	Select_ch@channel
  1288  0022                     l1145:
  1289                           
  1290                           ;ADC_LIB.c: 100:     switch (channel) {
  1291  0022  2873               	goto	l1149
  1292  0023                     l135:	
  1293                           ;ADC_LIB.c: 101:         case 0:
  1294                           
  1295                           
  1296                           ;ADC_LIB.c: 102:             ADCON0bits.CHS0 = 0;
  1297  0023  111F               	bcf	31,2	;volatile
  1298                           
  1299                           ;ADC_LIB.c: 103:             ADCON0bits.CHS1 = 0;
  1300  0024  119F               	bcf	31,3	;volatile
  1301                           
  1302                           ;ADC_LIB.c: 104:             ADCON0bits.CHS2 = 0;
  1303  0025  121F               	bcf	31,4	;volatile
  1304                           
  1305                           ;ADC_LIB.c: 105:             ADCON0bits.CHS3 = 0;
  1306  0026  129F               	bcf	31,5	;volatile
  1307                           
  1308                           ;ADC_LIB.c: 106:             break;
  1309  0027  28AD               	goto	l136
  1310  0028                     l137:	
  1311                           ;ADC_LIB.c: 107:         case 1:
  1312                           
  1313                           
  1314                           ;ADC_LIB.c: 108:             ADCON0bits.CHS0 = 1;
  1315  0028  151F               	bsf	31,2	;volatile
  1316                           
  1317                           ;ADC_LIB.c: 109:             ADCON0bits.CHS1 = 0;
  1318  0029  119F               	bcf	31,3	;volatile
  1319                           
  1320                           ;ADC_LIB.c: 110:             ADCON0bits.CHS2 = 0;
  1321  002A  121F               	bcf	31,4	;volatile
  1322                           
  1323                           ;ADC_LIB.c: 111:             ADCON0bits.CHS3 = 0;
  1324  002B  129F               	bcf	31,5	;volatile
  1325                           
  1326                           ;ADC_LIB.c: 112:             break;
  1327  002C  28AD               	goto	l136
  1328  002D                     l138:	
  1329                           ;ADC_LIB.c: 113:         case 2:
  1330                           
  1331                           
  1332                           ;ADC_LIB.c: 114:             ADCON0bits.CHS0 = 0;
  1333  002D  111F               	bcf	31,2	;volatile
  1334                           
  1335                           ;ADC_LIB.c: 115:             ADCON0bits.CHS1 = 1;
  1336  002E  159F               	bsf	31,3	;volatile
  1337                           
  1338                           ;ADC_LIB.c: 116:             ADCON0bits.CHS2 = 0;
  1339  002F  121F               	bcf	31,4	;volatile
  1340                           
  1341                           ;ADC_LIB.c: 117:             ADCON0bits.CHS3 = 0;
  1342  0030  129F               	bcf	31,5	;volatile
  1343                           
  1344                           ;ADC_LIB.c: 118:             break;
  1345  0031  28AD               	goto	l136
  1346  0032                     l139:	
  1347                           ;ADC_LIB.c: 119:         case 3:
  1348                           
  1349                           
  1350                           ;ADC_LIB.c: 120:             ADCON0bits.CHS0 = 1;
  1351  0032  151F               	bsf	31,2	;volatile
  1352                           
  1353                           ;ADC_LIB.c: 121:             ADCON0bits.CHS1 = 1;
  1354  0033  159F               	bsf	31,3	;volatile
  1355                           
  1356                           ;ADC_LIB.c: 122:             ADCON0bits.CHS2 = 0;
  1357  0034  121F               	bcf	31,4	;volatile
  1358                           
  1359                           ;ADC_LIB.c: 123:             ADCON0bits.CHS3 = 0;
  1360  0035  129F               	bcf	31,5	;volatile
  1361                           
  1362                           ;ADC_LIB.c: 124:             break;
  1363  0036  28AD               	goto	l136
  1364  0037                     l140:	
  1365                           ;ADC_LIB.c: 125:         case 4:
  1366                           
  1367                           
  1368                           ;ADC_LIB.c: 126:             ADCON0bits.CHS0 = 0;
  1369  0037  111F               	bcf	31,2	;volatile
  1370                           
  1371                           ;ADC_LIB.c: 127:             ADCON0bits.CHS1 = 0;
  1372  0038  119F               	bcf	31,3	;volatile
  1373                           
  1374                           ;ADC_LIB.c: 128:             ADCON0bits.CHS2 = 1;
  1375  0039  161F               	bsf	31,4	;volatile
  1376                           
  1377                           ;ADC_LIB.c: 129:             ADCON0bits.CHS3 = 0;
  1378  003A  129F               	bcf	31,5	;volatile
  1379                           
  1380                           ;ADC_LIB.c: 130:             break;
  1381  003B  28AD               	goto	l136
  1382  003C                     l141:	
  1383                           ;ADC_LIB.c: 131:         case 5:
  1384                           
  1385                           
  1386                           ;ADC_LIB.c: 132:             ADCON0bits.CHS0 = 1;
  1387  003C  151F               	bsf	31,2	;volatile
  1388                           
  1389                           ;ADC_LIB.c: 133:             ADCON0bits.CHS1 = 0;
  1390  003D  119F               	bcf	31,3	;volatile
  1391                           
  1392                           ;ADC_LIB.c: 134:             ADCON0bits.CHS2 = 1;
  1393  003E  161F               	bsf	31,4	;volatile
  1394                           
  1395                           ;ADC_LIB.c: 135:             ADCON0bits.CHS3 = 0;
  1396  003F  129F               	bcf	31,5	;volatile
  1397                           
  1398                           ;ADC_LIB.c: 136:             break;
  1399  0040  28AD               	goto	l136
  1400  0041                     l142:	
  1401                           ;ADC_LIB.c: 137:         case 6:
  1402                           
  1403                           
  1404                           ;ADC_LIB.c: 138:             ADCON0bits.CHS0 = 0;
  1405  0041  111F               	bcf	31,2	;volatile
  1406                           
  1407                           ;ADC_LIB.c: 139:             ADCON0bits.CHS1 = 1;
  1408  0042  159F               	bsf	31,3	;volatile
  1409                           
  1410                           ;ADC_LIB.c: 140:             ADCON0bits.CHS2 = 1;
  1411  0043  161F               	bsf	31,4	;volatile
  1412                           
  1413                           ;ADC_LIB.c: 141:             ADCON0bits.CHS3 = 0;
  1414  0044  129F               	bcf	31,5	;volatile
  1415                           
  1416                           ;ADC_LIB.c: 142:             break;
  1417  0045  28AD               	goto	l136
  1418  0046                     l143:	
  1419                           ;ADC_LIB.c: 143:         case 7:
  1420                           
  1421                           
  1422                           ;ADC_LIB.c: 144:             ADCON0bits.CHS0 = 1;
  1423  0046  151F               	bsf	31,2	;volatile
  1424                           
  1425                           ;ADC_LIB.c: 145:             ADCON0bits.CHS1 = 1;
  1426  0047  159F               	bsf	31,3	;volatile
  1427                           
  1428                           ;ADC_LIB.c: 146:             ADCON0bits.CHS2 = 1;
  1429  0048  161F               	bsf	31,4	;volatile
  1430                           
  1431                           ;ADC_LIB.c: 147:             ADCON0bits.CHS3 = 0;
  1432  0049  129F               	bcf	31,5	;volatile
  1433                           
  1434                           ;ADC_LIB.c: 148:             break;
  1435  004A  28AD               	goto	l136
  1436  004B                     l144:	
  1437                           ;ADC_LIB.c: 149:         case 8:
  1438                           
  1439                           
  1440                           ;ADC_LIB.c: 150:             ADCON0bits.CHS0 = 0;
  1441  004B  111F               	bcf	31,2	;volatile
  1442                           
  1443                           ;ADC_LIB.c: 151:             ADCON0bits.CHS1 = 0;
  1444  004C  119F               	bcf	31,3	;volatile
  1445                           
  1446                           ;ADC_LIB.c: 152:             ADCON0bits.CHS2 = 0;
  1447  004D  121F               	bcf	31,4	;volatile
  1448                           
  1449                           ;ADC_LIB.c: 153:             ADCON0bits.CHS3 = 1;
  1450  004E  169F               	bsf	31,5	;volatile
  1451                           
  1452                           ;ADC_LIB.c: 154:             break;
  1453  004F  28AD               	goto	l136
  1454  0050                     l145:	
  1455                           ;ADC_LIB.c: 155:         case 9:
  1456                           
  1457                           
  1458                           ;ADC_LIB.c: 156:             ADCON0bits.CHS0 = 1;
  1459  0050  151F               	bsf	31,2	;volatile
  1460                           
  1461                           ;ADC_LIB.c: 157:             ADCON0bits.CHS1 = 0;
  1462  0051  119F               	bcf	31,3	;volatile
  1463                           
  1464                           ;ADC_LIB.c: 158:             ADCON0bits.CHS2 = 0;
  1465  0052  121F               	bcf	31,4	;volatile
  1466                           
  1467                           ;ADC_LIB.c: 159:             ADCON0bits.CHS3 = 1;
  1468  0053  169F               	bsf	31,5	;volatile
  1469                           
  1470                           ;ADC_LIB.c: 160:             break;
  1471  0054  28AD               	goto	l136
  1472  0055                     l146:	
  1473                           ;ADC_LIB.c: 161:         case 10:
  1474                           
  1475                           
  1476                           ;ADC_LIB.c: 162:             ADCON0bits.CHS0 = 0;
  1477  0055  111F               	bcf	31,2	;volatile
  1478                           
  1479                           ;ADC_LIB.c: 163:             ADCON0bits.CHS1 = 1;
  1480  0056  159F               	bsf	31,3	;volatile
  1481                           
  1482                           ;ADC_LIB.c: 164:             ADCON0bits.CHS2 = 0;
  1483  0057  121F               	bcf	31,4	;volatile
  1484                           
  1485                           ;ADC_LIB.c: 165:             ADCON0bits.CHS3 = 1;
  1486  0058  169F               	bsf	31,5	;volatile
  1487                           
  1488                           ;ADC_LIB.c: 166:             break;
  1489  0059  28AD               	goto	l136
  1490  005A                     l147:	
  1491                           ;ADC_LIB.c: 167:         case 11:
  1492                           
  1493                           
  1494                           ;ADC_LIB.c: 168:             ADCON0bits.CHS0 = 1;
  1495  005A  151F               	bsf	31,2	;volatile
  1496                           
  1497                           ;ADC_LIB.c: 169:             ADCON0bits.CHS1 = 1;
  1498  005B  159F               	bsf	31,3	;volatile
  1499                           
  1500                           ;ADC_LIB.c: 170:             ADCON0bits.CHS2 = 0;
  1501  005C  121F               	bcf	31,4	;volatile
  1502                           
  1503                           ;ADC_LIB.c: 171:             ADCON0bits.CHS3 = 1;
  1504  005D  169F               	bsf	31,5	;volatile
  1505                           
  1506                           ;ADC_LIB.c: 172:             break;
  1507  005E  28AD               	goto	l136
  1508  005F                     l148:	
  1509                           ;ADC_LIB.c: 173:         case 12:
  1510                           
  1511                           
  1512                           ;ADC_LIB.c: 174:             ADCON0bits.CHS0 = 0;
  1513  005F  111F               	bcf	31,2	;volatile
  1514                           
  1515                           ;ADC_LIB.c: 175:             ADCON0bits.CHS1 = 0;
  1516  0060  119F               	bcf	31,3	;volatile
  1517                           
  1518                           ;ADC_LIB.c: 176:             ADCON0bits.CHS2 = 1;
  1519  0061  161F               	bsf	31,4	;volatile
  1520                           
  1521                           ;ADC_LIB.c: 177:             ADCON0bits.CHS3 = 1;
  1522  0062  169F               	bsf	31,5	;volatile
  1523                           
  1524                           ;ADC_LIB.c: 178:             break;
  1525  0063  28AD               	goto	l136
  1526  0064                     l149:	
  1527                           ;ADC_LIB.c: 179:         case 13:
  1528                           
  1529                           
  1530                           ;ADC_LIB.c: 180:             ADCON0bits.CHS0 = 1;
  1531  0064  151F               	bsf	31,2	;volatile
  1532                           
  1533                           ;ADC_LIB.c: 181:             ADCON0bits.CHS1 = 0;
  1534  0065  119F               	bcf	31,3	;volatile
  1535                           
  1536                           ;ADC_LIB.c: 182:             ADCON0bits.CHS2 = 1;
  1537  0066  161F               	bsf	31,4	;volatile
  1538                           
  1539                           ;ADC_LIB.c: 183:             ADCON0bits.CHS3 = 1;
  1540  0067  169F               	bsf	31,5	;volatile
  1541                           
  1542                           ;ADC_LIB.c: 184:             break;
  1543  0068  28AD               	goto	l136
  1544  0069                     l150:	
  1545                           ;ADC_LIB.c: 185:         case 14:
  1546                           
  1547                           
  1548                           ;ADC_LIB.c: 186:             ADCON0bits.CHS0 = 0;
  1549  0069  111F               	bcf	31,2	;volatile
  1550                           
  1551                           ;ADC_LIB.c: 187:             ADCON0bits.CHS1 = 1;
  1552  006A  159F               	bsf	31,3	;volatile
  1553                           
  1554                           ;ADC_LIB.c: 188:             ADCON0bits.CHS2 = 1;
  1555  006B  161F               	bsf	31,4	;volatile
  1556                           
  1557                           ;ADC_LIB.c: 189:             ADCON0bits.CHS3 = 1;
  1558  006C  169F               	bsf	31,5	;volatile
  1559                           
  1560                           ;ADC_LIB.c: 190:             break;
  1561  006D  28AD               	goto	l136
  1562  006E                     l151:	
  1563                           ;ADC_LIB.c: 191:         case 15:
  1564                           
  1565                           
  1566                           ;ADC_LIB.c: 192:             ADCON0bits.CHS0 = 1;
  1567  006E  151F               	bsf	31,2	;volatile
  1568                           
  1569                           ;ADC_LIB.c: 193:             ADCON0bits.CHS1 = 1;
  1570  006F  159F               	bsf	31,3	;volatile
  1571                           
  1572                           ;ADC_LIB.c: 194:             ADCON0bits.CHS2 = 1;
  1573  0070  161F               	bsf	31,4	;volatile
  1574                           
  1575                           ;ADC_LIB.c: 195:             ADCON0bits.CHS3 = 1;
  1576  0071  169F               	bsf	31,5	;volatile
  1577                           
  1578                           ;ADC_LIB.c: 196:             break;
  1579  0072  28AD               	goto	l136
  1580  0073                     l1149:
  1581  0073  0828               	movf	Select_ch@channel,w
  1582  0074  00A6               	movwf	??_Select_ch
  1583  0075  01A7               	clrf	??_Select_ch+1
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ; direct_byte           11     8 (fixed)
  1592                           ; jumptable            260     6 (fixed)
  1593                           ;	Chosen strategy is simple_byte
  1594  0076  0827               	movf	??_Select_ch+1,w
  1595  0077  3A00               	xorlw	0	; case 0
  1596  0078  1903               	skipnz
  1597  0079  287B               	goto	l1355
  1598  007A  28AD               	goto	l136
  1599  007B                     l1355:
  1600                           
  1601                           ; Switch size 1, requested type "simple"
  1602                           ; Number of cases is 16, Range of values is 0 to 15
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; simple_byte           49    25 (average)
  1606                           ; direct_byte           56     8 (fixed)
  1607                           ; jumptable            260     6 (fixed)
  1608                           ;	Chosen strategy is simple_byte
  1609  007B  0826               	movf	??_Select_ch,w
  1610  007C  3A00               	xorlw	0	; case 0
  1611  007D  1903               	skipnz
  1612  007E  2823               	goto	l135
  1613  007F  3A01               	xorlw	1	; case 1
  1614  0080  1903               	skipnz
  1615  0081  2828               	goto	l137
  1616  0082  3A03               	xorlw	3	; case 2
  1617  0083  1903               	skipnz
  1618  0084  282D               	goto	l138
  1619  0085  3A01               	xorlw	1	; case 3
  1620  0086  1903               	skipnz
  1621  0087  2832               	goto	l139
  1622  0088  3A07               	xorlw	7	; case 4
  1623  0089  1903               	skipnz
  1624  008A  2837               	goto	l140
  1625  008B  3A01               	xorlw	1	; case 5
  1626  008C  1903               	skipnz
  1627  008D  283C               	goto	l141
  1628  008E  3A03               	xorlw	3	; case 6
  1629  008F  1903               	skipnz
  1630  0090  2841               	goto	l142
  1631  0091  3A01               	xorlw	1	; case 7
  1632  0092  1903               	skipnz
  1633  0093  2846               	goto	l143
  1634  0094  3A0F               	xorlw	15	; case 8
  1635  0095  1903               	skipnz
  1636  0096  284B               	goto	l144
  1637  0097  3A01               	xorlw	1	; case 9
  1638  0098  1903               	skipnz
  1639  0099  2850               	goto	l145
  1640  009A  3A03               	xorlw	3	; case 10
  1641  009B  1903               	skipnz
  1642  009C  2855               	goto	l146
  1643  009D  3A01               	xorlw	1	; case 11
  1644  009E  1903               	skipnz
  1645  009F  285A               	goto	l147
  1646  00A0  3A07               	xorlw	7	; case 12
  1647  00A1  1903               	skipnz
  1648  00A2  285F               	goto	l148
  1649  00A3  3A01               	xorlw	1	; case 13
  1650  00A4  1903               	skipnz
  1651  00A5  2864               	goto	l149
  1652  00A6  3A03               	xorlw	3	; case 14
  1653  00A7  1903               	skipnz
  1654  00A8  2869               	goto	l150
  1655  00A9  3A01               	xorlw	1	; case 15
  1656  00AA  1903               	skipnz
  1657  00AB  286E               	goto	l151
  1658  00AC  28AD               	goto	l136
  1659  00AD                     l136:
  1660                           
  1661                           ;ADC_LIB.c: 198:     ADCON0bits.GO = 1;
  1662  00AD  149F               	bsf	31,1	;volatile
  1663  00AE                     l152:
  1664  00AE  0008               	return
  1665  00AF                     __end_of_Select_ch:
  1666                           
  1667                           	psect	text4
  1668  025B                     __ptext4:	
  1669 ;; *************** function _ISR *****************
  1670 ;; Defined at:
  1671 ;;		line 44 in file "lab_2.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0
  1687 ;;      Temps:          4       0       0       0       0
  1688 ;;      Totals:         4       0       0       0       0
  1689 ;;Total ram usage:        4 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    2
  1692 ;; This function calls:
  1693 ;;		_derecho
  1694 ;;		_izquierdo
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 1
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _ISR
  1702  025B                     _ISR:
  1703  025B                     i1l1157:
  1704                           
  1705                           ;lab_2.c: 45: 
  1706  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1707  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1708  025D  1F0C               	btfss	12,6	;volatile
  1709  025E  2A60               	goto	u10_21
  1710  025F  2A61               	goto	u10_20
  1711  0260                     u10_21:
  1712  0260  2A67               	goto	i1l1165
  1713  0261                     u10_20:
  1714  0261                     i1l1159:
  1715                           
  1716                           ;lab_2.c: 46:     INTCONbits.GIE = 1;
  1717  0261  130C               	bcf	12,6	;volatile
  1718  0262                     i1l1161:
  1719                           
  1720                           ;lab_2.c: 47:     INTCONbits.PEIE = 1;
  1721  0262  081E               	movf	30,w	;volatile
  1722  0263  00F8               	movwf	??_ISR
  1723  0264  0878               	movf	??_ISR,w
  1724  0265  00FD               	movwf	_display_adc	;volatile
  1725  0266                     i1l1163:
  1726                           
  1727                           ;lab_2.c: 48:     INTCONbits.T0IE = 1;
  1728  0266  149F               	bsf	31,1	;volatile
  1729  0267                     i1l1165:
  1730                           
  1731                           ;lab_2.c: 50:     INTCONbits.RBIE = 1;
  1732  0267  1D0B               	btfss	11,2	;volatile
  1733  0268  2A6A               	goto	u11_21
  1734  0269  2A6B               	goto	u11_20
  1735  026A                     u11_21:
  1736  026A  2A92               	goto	i1l1191
  1737  026B                     u11_20:
  1738  026B                     i1l1167:
  1739                           
  1740                           ;lab_2.c: 51:     INTCONbits.RBIF = 0;
  1741  026B  087D               	movf	_display_adc,w	;volatile
  1742  026C  00F8               	movwf	??_ISR
  1743  026D  0878               	movf	??_ISR,w
  1744  026E  00A2               	movwf	_auxiliar
  1745  026F                     i1l1169:
  1746                           
  1747                           ;lab_2.c: 52:     IOCBbits.IOCB0 = 1;
  1748  026F  0187               	clrf	7	;volatile
  1749  0270                     i1l1171:
  1750                           
  1751                           ;lab_2.c: 53:     IOCBbits.IOCB1 = 1;
  1752  0270  0189               	clrf	9	;volatile
  1753  0271                     i1l1173:
  1754                           
  1755                           ;lab_2.c: 55:     OPTION_REGbits.PSA = 0;
  1756  0271  087C               	movf	_toogle,w
  1757  0272  1D03               	btfss	3,2
  1758  0273  2A75               	goto	u12_21
  1759  0274  2A76               	goto	u12_20
  1760  0275                     u12_21:
  1761  0275  2A84               	goto	i1l1181
  1762  0276                     u12_20:
  1763  0276                     i1l1175:
  1764                           
  1765                           ;lab_2.c: 56:     OPTION_REGbits.PS0 = 1;
  1766  0276  087D               	movf	_display_adc,w	;volatile
  1767  0277  120A  118A  22B9  120A  118A  	fcall	_izquierdo
  1768  027C                     i1l1177:
  1769                           
  1770                           ;lab_2.c: 57:     OPTION_REGbits.PS1 = 0;
  1771  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1772  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1773  027E  1409               	bsf	9,0	;volatile
  1774  027F                     i1l1179:
  1775                           
  1776                           ;lab_2.c: 58:     OPTION_REGbits.PS2 = 1;
  1777  027F  3001               	movlw	1
  1778  0280  00F8               	movwf	??_ISR
  1779  0281  0878               	movf	??_ISR,w
  1780  0282  07FC               	addwf	_toogle,f
  1781                           
  1782                           ;lab_2.c: 59:     TMR0 = 177;
  1783  0283  2A8F               	goto	i1l1187
  1784  0284                     i1l1181:
  1785                           
  1786                           ;lab_2.c: 60: 
  1787  0284  087D               	movf	_display_adc,w	;volatile
  1788  0285  120A  118A  229C  120A  118A  	fcall	_derecho
  1789  028A                     i1l1183:
  1790                           
  1791                           ;lab_2.c: 61:     ANSEL = 0;
  1792  028A  3001               	movlw	1
  1793  028B  02FC               	subwf	_toogle,f
  1794  028C                     i1l1185:
  1795                           
  1796                           ;lab_2.c: 62:     ANSELH = 0;
  1797  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1798  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1799  028E  1489               	bsf	9,1	;volatile
  1800  028F                     i1l1187:
  1801                           
  1802                           ;lab_2.c: 64:     start_ch(8);
  1803  028F  30B1               	movlw	177
  1804  0290  0081               	movwf	1	;volatile
  1805  0291                     i1l1189:
  1806                           
  1807                           ;lab_2.c: 65:     Select_ch(8);
  1808  0291  110B               	bcf	11,2	;volatile
  1809  0292                     i1l1191:
  1810                           
  1811                           ;lab_2.c: 67:     TRISA = 0;
  1812  0292  080B               	movf	11,w	;volatile
  1813  0293                     i1l74:
  1814  0293  087B               	movf	??_ISR+3,w
  1815  0294  008A               	movwf	10
  1816  0295  087A               	movf	??_ISR+2,w
  1817  0296  0084               	movwf	4
  1818  0297  0E79               	swapf	??_ISR+1,w
  1819  0298  0083               	movwf	3
  1820  0299  0EFE               	swapf	btemp,f
  1821  029A  0E7E               	swapf	btemp,w
  1822  029B  0009               	retfie
  1823  029C                     __end_of_ISR:
  1824                           
  1825                           	psect	intentry
  1826  0004                     __pintentry:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1829                           
  1830  0004                     interrupt_function:
  1831  007E                     saved_w	set	btemp
  1832  0004  00FE               	movwf	btemp
  1833  0005  0E03               	swapf	3,w
  1834  0006  00F9               	movwf	??_ISR+1
  1835  0007  0804               	movf	4,w
  1836  0008  00FA               	movwf	??_ISR+2
  1837  0009  080A               	movf	10,w
  1838  000A  00FB               	movwf	??_ISR+3
  1839  000B  120A  118A  2A5B   	ljmp	_ISR
  1840                           
  1841                           	psect	text5
  1842  02B9                     __ptext5:	
  1843 ;; *************** function _izquierdo *****************
  1844 ;; Defined at:
  1845 ;;		line 73 in file "display_7s.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  adcLs           1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  adcLs           1    4[COMMON] unsigned char 
  1850 ;;  nsl             1    5[COMMON] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         0       0       0       0       0
  1861 ;;      Locals:         2       0       0       0       0
  1862 ;;      Temps:          1       0       0       0       0
  1863 ;;      Totals:         3       0       0       0       0
  1864 ;;Total ram usage:        3 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    1
  1867 ;; This function calls:
  1868 ;;		_tabla7segmentos
  1869 ;; This function is called by:
  1870 ;;		_ISR
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _izquierdo
  1876  02B9                     _izquierdo:
  1877                           
  1878                           ;incstack = 0
  1879                           ; Regs used in _izquierdo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1880                           ;izquierdo@adcLs stored from wreg
  1881  02B9  00F4               	movwf	izquierdo@adcLs
  1882  02BA                     i1l1091:
  1883                           
  1884                           ;display_7s.c: 74:     uint8_t nsl = (adcLs & 0b00001111);
  1885  02BA  0874               	movf	izquierdo@adcLs,w
  1886  02BB  390F               	andlw	15
  1887  02BC  00F3               	movwf	??_izquierdo
  1888  02BD  0873               	movf	??_izquierdo,w
  1889  02BE  00F5               	movwf	izquierdo@nsl
  1890  02BF                     i1l1093:
  1891                           
  1892                           ;display_7s.c: 75:     tabla7segmentos(nsl);
  1893  02BF  0875               	movf	izquierdo@nsl,w
  1894  02C0  120A  118A  20AF  120A  118A  	fcall	_tabla7segmentos
  1895  02C5                     i1l181:
  1896  02C5  0008               	return
  1897  02C6                     __end_of_izquierdo:
  1898                           
  1899                           	psect	text6
  1900  029C                     __ptext6:	
  1901 ;; *************** function _derecho *****************
  1902 ;; Defined at:
  1903 ;;		line 66 in file "display_7s.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  adcHs           1    wreg     unsigned char 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  adcHs           1    5[COMMON] unsigned char 
  1908 ;;  temp            1    7[COMMON] unsigned char 
  1909 ;;  nlh             1    6[COMMON] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         3       0       0       0       0
  1921 ;;      Temps:          2       0       0       0       0
  1922 ;;      Totals:         5       0       0       0       0
  1923 ;;Total ram usage:        5 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    1
  1926 ;; This function calls:
  1927 ;;		_tabla7segmentos
  1928 ;; This function is called by:
  1929 ;;		_ISR
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _derecho
  1935  029C                     _derecho:
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _derecho: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939                           ;derecho@adcHs stored from wreg
  1940  029C  00F5               	movwf	derecho@adcHs
  1941  029D                     i1l1097:
  1942                           
  1943                           ;display_7s.c: 67:     uint8_t temp = adcHs;
  1944  029D  0875               	movf	derecho@adcHs,w
  1945  029E  00F3               	movwf	??_derecho
  1946  029F  0873               	movf	??_derecho,w
  1947  02A0  00F7               	movwf	derecho@temp
  1948  02A1                     i1l1099:
  1949                           
  1950                           ;display_7s.c: 68:     temp = (temp >> 4);
  1951  02A1  0877               	movf	derecho@temp,w
  1952  02A2  00F3               	movwf	??_derecho
  1953  02A3  3004               	movlw	4
  1954  02A4                     u7_25:
  1955  02A4  1003               	clrc
  1956  02A5  0CF3               	rrf	??_derecho,f
  1957  02A6  3EFF               	addlw	-1
  1958  02A7  1D03               	skipz
  1959  02A8  2AA4               	goto	u7_25
  1960  02A9  0873               	movf	??_derecho,w
  1961  02AA  00F4               	movwf	??_derecho+1
  1962  02AB  0874               	movf	??_derecho+1,w
  1963  02AC  00F7               	movwf	derecho@temp
  1964  02AD                     i1l1101:
  1965                           
  1966                           ;display_7s.c: 69:     uint8_t nlh = (temp & 0b00001111);
  1967  02AD  0877               	movf	derecho@temp,w
  1968  02AE  390F               	andlw	15
  1969  02AF  00F3               	movwf	??_derecho
  1970  02B0  0873               	movf	??_derecho,w
  1971  02B1  00F6               	movwf	derecho@nlh
  1972  02B2                     i1l1103:
  1973                           
  1974                           ;display_7s.c: 70:     tabla7segmentos(nlh);
  1975  02B2  0876               	movf	derecho@nlh,w
  1976  02B3  120A  118A  20AF  120A  118A  	fcall	_tabla7segmentos
  1977  02B8                     i1l178:
  1978  02B8  0008               	return
  1979  02B9                     __end_of_derecho:
  1980                           
  1981                           	psect	text7
  1982  00AF                     __ptext7:	
  1983 ;; *************** function _tabla7segmentos *****************
  1984 ;; Defined at:
  1985 ;;		line 13 in file "display_7s.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  valor           1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  valor           1    2[COMMON] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         1       0       0       0       0
  2001 ;;      Temps:          2       0       0       0       0
  2002 ;;      Totals:         3       0       0       0       0
  2003 ;;Total ram usage:        3 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_derecho
  2009 ;;		_izquierdo
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function _tabla7segmentos
  2015  00AF                     _tabla7segmentos:
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _tabla7segmentos: [wreg-fsr0h+status,2+status,0]
  2019                           ;tabla7segmentos@valor stored from wreg
  2020  00AF  00F2               	movwf	tabla7segmentos@valor
  2021  00B0                     i1l1049:
  2022                           
  2023                           ;display_7s.c: 14:     switch (valor) {
  2024  00B0  2901               	goto	i1l1085
  2025  00B1                     i1l1051:
  2026                           
  2027                           ;display_7s.c: 16:             PORTC = 0b01110111;
  2028  00B1  3077               	movlw	119
  2029  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2030  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2031  00B4  0087               	movwf	7	;volatile
  2032                           
  2033                           ;display_7s.c: 17:             break;
  2034  00B5  293B               	goto	i1l175
  2035  00B6                     i1l1053:
  2036                           
  2037                           ;display_7s.c: 19:             PORTC = 0b01000001;
  2038  00B6  3041               	movlw	65
  2039  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2040  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2041  00B9  0087               	movwf	7	;volatile
  2042                           
  2043                           ;display_7s.c: 20:             break;
  2044  00BA  293B               	goto	i1l175
  2045  00BB                     i1l1055:
  2046                           
  2047                           ;display_7s.c: 22:             PORTC = 0b00111011;
  2048  00BB  303B               	movlw	59
  2049  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2050  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2051  00BE  0087               	movwf	7	;volatile
  2052                           
  2053                           ;display_7s.c: 23:             break;
  2054  00BF  293B               	goto	i1l175
  2055  00C0                     i1l1057:
  2056                           
  2057                           ;display_7s.c: 25:             PORTC = 0b01101011;
  2058  00C0  306B               	movlw	107
  2059  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2060  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2061  00C3  0087               	movwf	7	;volatile
  2062                           
  2063                           ;display_7s.c: 26:             break;
  2064  00C4  293B               	goto	i1l175
  2065  00C5                     i1l1059:
  2066                           
  2067                           ;display_7s.c: 28:             PORTC = 0b01001101;
  2068  00C5  304D               	movlw	77
  2069  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2070  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2071  00C8  0087               	movwf	7	;volatile
  2072                           
  2073                           ;display_7s.c: 29:             break;
  2074  00C9  293B               	goto	i1l175
  2075  00CA                     i1l1061:
  2076                           
  2077                           ;display_7s.c: 31:             PORTC = 0b01101110;
  2078  00CA  306E               	movlw	110
  2079  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2080  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2081  00CD  0087               	movwf	7	;volatile
  2082                           
  2083                           ;display_7s.c: 32:             break;
  2084  00CE  293B               	goto	i1l175
  2085  00CF                     i1l1063:
  2086                           
  2087                           ;display_7s.c: 34:             PORTC = 0b01111110;
  2088  00CF  307E               	movlw	126
  2089  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2090  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2091  00D2  0087               	movwf	7	;volatile
  2092                           
  2093                           ;display_7s.c: 35:             break;
  2094  00D3  293B               	goto	i1l175
  2095  00D4                     i1l1065:
  2096                           
  2097                           ;display_7s.c: 37:             PORTC = 0b01000011;
  2098  00D4  3043               	movlw	67
  2099  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2100  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2101  00D7  0087               	movwf	7	;volatile
  2102                           
  2103                           ;display_7s.c: 38:             break;
  2104  00D8  293B               	goto	i1l175
  2105  00D9                     i1l1067:
  2106                           
  2107                           ;display_7s.c: 40:             PORTC = 0b01111111;
  2108  00D9  307F               	movlw	127
  2109  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2110  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2111  00DC  0087               	movwf	7	;volatile
  2112                           
  2113                           ;display_7s.c: 41:             break;
  2114  00DD  293B               	goto	i1l175
  2115  00DE                     i1l1069:
  2116                           
  2117                           ;display_7s.c: 43:             PORTC = 0b01101111;
  2118  00DE  306F               	movlw	111
  2119  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2120  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2121  00E1  0087               	movwf	7	;volatile
  2122                           
  2123                           ;display_7s.c: 44:             break;
  2124  00E2  293B               	goto	i1l175
  2125  00E3                     i1l1071:
  2126                           
  2127                           ;display_7s.c: 46:             PORTC = 0b01011111;
  2128  00E3  305F               	movlw	95
  2129  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2130  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2131  00E6  0087               	movwf	7	;volatile
  2132                           
  2133                           ;display_7s.c: 47:             break;
  2134  00E7  293B               	goto	i1l175
  2135  00E8                     i1l1073:
  2136                           
  2137                           ;display_7s.c: 49:             PORTC = 0b01111100;
  2138  00E8  307C               	movlw	124
  2139  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2140  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2141  00EB  0087               	movwf	7	;volatile
  2142                           
  2143                           ;display_7s.c: 50:             break;
  2144  00EC  293B               	goto	i1l175
  2145  00ED                     i1l1075:
  2146                           
  2147                           ;display_7s.c: 52:             PORTC = 0b00110110;
  2148  00ED  3036               	movlw	54
  2149  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2150  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2151  00F0  0087               	movwf	7	;volatile
  2152                           
  2153                           ;display_7s.c: 53:             break;
  2154  00F1  293B               	goto	i1l175
  2155  00F2                     i1l1077:
  2156                           
  2157                           ;display_7s.c: 55:             PORTC = 0b01111001;
  2158  00F2  3079               	movlw	121
  2159  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2160  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2161  00F5  0087               	movwf	7	;volatile
  2162                           
  2163                           ;display_7s.c: 56:             break;
  2164  00F6  293B               	goto	i1l175
  2165  00F7                     i1l1079:
  2166                           
  2167                           ;display_7s.c: 58:             PORTC = 0b00111110;
  2168  00F7  303E               	movlw	62
  2169  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2170  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2171  00FA  0087               	movwf	7	;volatile
  2172                           
  2173                           ;display_7s.c: 59:             break;
  2174  00FB  293B               	goto	i1l175
  2175  00FC                     i1l1081:
  2176                           
  2177                           ;display_7s.c: 61:             PORTC = 0b00011110;
  2178  00FC  301E               	movlw	30
  2179  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2180  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2181  00FF  0087               	movwf	7	;volatile
  2182                           
  2183                           ;display_7s.c: 62:             break;
  2184  0100  293B               	goto	i1l175
  2185  0101                     i1l1085:
  2186  0101  0872               	movf	tabla7segmentos@valor,w
  2187  0102  00F0               	movwf	??_tabla7segmentos
  2188  0103  01F1               	clrf	??_tabla7segmentos+1
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ; direct_byte           11     8 (fixed)
  2197                           ; jumptable            260     6 (fixed)
  2198                           ;	Chosen strategy is simple_byte
  2199  0104  0871               	movf	??_tabla7segmentos+1,w
  2200  0105  3A00               	xorlw	0	; case 0
  2201  0106  1903               	skipnz
  2202  0107  2909               	goto	i1l1357
  2203  0108  293B               	goto	i1l175
  2204  0109                     i1l1357:
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 16, Range of values is 0 to 15
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           49    25 (average)
  2211                           ; direct_byte           56     8 (fixed)
  2212                           ; jumptable            260     6 (fixed)
  2213                           ;	Chosen strategy is simple_byte
  2214  0109  0870               	movf	??_tabla7segmentos,w
  2215  010A  3A00               	xorlw	0	; case 0
  2216  010B  1903               	skipnz
  2217  010C  28B1               	goto	i1l1051
  2218  010D  3A01               	xorlw	1	; case 1
  2219  010E  1903               	skipnz
  2220  010F  28B6               	goto	i1l1053
  2221  0110  3A03               	xorlw	3	; case 2
  2222  0111  1903               	skipnz
  2223  0112  28BB               	goto	i1l1055
  2224  0113  3A01               	xorlw	1	; case 3
  2225  0114  1903               	skipnz
  2226  0115  28C0               	goto	i1l1057
  2227  0116  3A07               	xorlw	7	; case 4
  2228  0117  1903               	skipnz
  2229  0118  28C5               	goto	i1l1059
  2230  0119  3A01               	xorlw	1	; case 5
  2231  011A  1903               	skipnz
  2232  011B  28CA               	goto	i1l1061
  2233  011C  3A03               	xorlw	3	; case 6
  2234  011D  1903               	skipnz
  2235  011E  28CF               	goto	i1l1063
  2236  011F  3A01               	xorlw	1	; case 7
  2237  0120  1903               	skipnz
  2238  0121  28D4               	goto	i1l1065
  2239  0122  3A0F               	xorlw	15	; case 8
  2240  0123  1903               	skipnz
  2241  0124  28D9               	goto	i1l1067
  2242  0125  3A01               	xorlw	1	; case 9
  2243  0126  1903               	skipnz
  2244  0127  28DE               	goto	i1l1069
  2245  0128  3A03               	xorlw	3	; case 10
  2246  0129  1903               	skipnz
  2247  012A  28E3               	goto	i1l1071
  2248  012B  3A01               	xorlw	1	; case 11
  2249  012C  1903               	skipnz
  2250  012D  28E8               	goto	i1l1073
  2251  012E  3A07               	xorlw	7	; case 12
  2252  012F  1903               	skipnz
  2253  0130  28ED               	goto	i1l1075
  2254  0131  3A01               	xorlw	1	; case 13
  2255  0132  1903               	skipnz
  2256  0133  28F2               	goto	i1l1077
  2257  0134  3A03               	xorlw	3	; case 14
  2258  0135  1903               	skipnz
  2259  0136  28F7               	goto	i1l1079
  2260  0137  3A01               	xorlw	1	; case 15
  2261  0138  1903               	skipnz
  2262  0139  28FC               	goto	i1l1081
  2263  013A  293B               	goto	i1l175
  2264  013B                     i1l175:
  2265  013B  0008               	return
  2266  013C                     __end_of_tabla7segmentos:
  2267  007E                     btemp	set	126	;btemp
  2268  007E                     wtemp0	set	126
  2269                           
  2270                           	psect	config
  2271                           
  2272                           ;Config register CONFIG1 @ 0x2007
  2273                           ;	Oscillator Selection bits
  2274                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2275                           ;	Watchdog Timer Enable bit
  2276                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2277                           ;	Power-up Timer Enable bit
  2278                           ;	PWRTE = OFF, PWRT disabled
  2279                           ;	RE3/MCLR pin function select bit
  2280                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2281                           ;	Code Protection bit
  2282                           ;	CP = OFF, Program memory code protection is disabled
  2283                           ;	Data Code Protection bit
  2284                           ;	CPD = OFF, Data memory code protection is disabled
  2285                           ;	Brown Out Reset Selection bits
  2286                           ;	BOREN = OFF, BOR disabled
  2287                           ;	Internal External Switchover bit
  2288                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2289                           ;	Fail-Safe Clock Monitor Enabled bit
  2290                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2291                           ;	Low Voltage Programming Enable bit
  2292                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2293                           ;	In-Circuit Debugger Mode bit
  2294                           ;	DEBUG = 0x1, unprogrammed default
  2295  2007                     	org	8199
  2296  2007  20D4               	dw	8404
  2297                           
  2298                           ;Config register CONFIG2 @ 0x2008
  2299                           ;	Brown-out Reset Selection bit
  2300                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2301                           ;	Flash Program Memory Self Write Enable bits
  2302                           ;	WRT = OFF, Write protection off
  2303  2008                     	org	8200
  2304  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      6      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_derecho
    _izquierdo->_tabla7segmentos
    _derecho->_tabla7segmentos

Critical Paths under _main in BANK0

    _main->_start_adc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                          _Select_ch
                          _start_adc
                           _start_ch
 ---------------------------------------------------------------------------------
 (1) _start_ch                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _start_adc                                            6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0     180
                                              8 COMMON     4     4      0
                            _derecho
                          _izquierdo
 ---------------------------------------------------------------------------------
 (3) _izquierdo                                            3     3      0      67
                                              3 COMMON     3     3      0
                    _tabla7segmentos
 ---------------------------------------------------------------------------------
 (3) _derecho                                              5     5      0     113
                                              3 COMMON     5     5      0
                    _tabla7segmentos
 ---------------------------------------------------------------------------------
 (4) _tabla7segmentos                                      3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _start_adc
   _start_ch

 _ISR (ROOT)
   _derecho
     _tabla7segmentos
   _izquierdo
     _tabla7segmentos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 17:29:43 2021

                      l80 0257                        l79 0257                        l98 01B2  
                      u80 01D9                        u81 01D8                        u90 01E4  
                      u91 01E3                       l100 01B5                       l101 01B8  
                     l110 01F6                       l102 01BB                       l111 01FB  
                     l112 0218                       l104 01E8                       l120 014C  
                     l121 0150                       l130 0174                       l122 0154  
                     l107 01EC                       l123 0158                       l131 01AC  
                     l140 0037                       l124 015C                       l116 0140  
                     l141 003C                       l109 01F1                       l125 0160  
                     l150 0069                       l142 0041                       l126 0164  
                     l118 0144                       l151 006E                       l143 0046  
                     l135 0023                       l127 0168                       l119 0148  
                     l152 00AE                       l144 004B                       l136 00AD  
                     l128 016C                       l145 0050                       l137 0028  
                     l129 0170                       l146 0055                       l138 002D  
                     l147 005A                       l139 0032                       l148 005F  
                     l149 0064                       _ISR 025B              izquierdo@nsl 0075  
                     fsr0 0004                      ?_ISR 0070                      l1111 01BE  
                    l1113 01D4                      l1201 0230                      l1123 0200  
                    l1115 01D9                      l1107 01B0                      l1211 024C  
                    l1203 023C                      l1117 01DF                      l1133 013F  
                    l1221 0251                      l1213 024D                      l1205 0242  
                    l1119 01E4                      l1223 0254                      l1215 024E  
                    l1207 0248                      l1145 0022                      l1137 0178  
                    l1225 0255                      l1217 024F                      l1209 024B  
                    l1227 0256                      l1219 0250                      l1149 0073  
                    l1351 01C6                      l1353 020A                      l1193 0219  
                    l1355 007B                      l1195 0228                      l1349 0180  
                    l1197 022C                      l1199 022F                      i1l74 0293  
                    _TMR0 0001                      u7_25 02A4      tabla7segmentos@valor 0072  
                    _main 0219                      btemp 007E                      start 000E  
                   ??_ISR 0078                     ?_main 0070                     _ANSEL 0188  
                   i1l181 02C5                     i1l175 013B                     i1l178 02B8  
                   u10_20 0261                     u10_21 0260                     u11_20 026B  
                   u11_21 026A         ??_tabla7segmentos 0070                     u12_20 0276  
                   u12_21 0275                     _PORTA 0005                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
         __end_of_derecho 02B9            izquierdo@adcLs 0074                     _count 0023  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0011              __end_of_main 025B                    ??_main 002C  
                  _ADRESH 001E                    _ANSELH 0189                    i1l1101 02AD  
                  i1l1103 02B2                    i1l1051 00B1                    i1l1061 00CA  
                  i1l1053 00B6                    i1l1071 00E3                    i1l1063 00CF  
                  i1l1055 00BB                    i1l1081 00FC                    i1l1073 00E8  
                  i1l1065 00D4                    i1l1057 00C0                    i1l1049 00B0  
                  i1l1161 0262                    i1l1075 00ED                    i1l1067 00D9  
                  i1l1059 00C5                    i1l1091 02BA                    i1l1171 0270  
                  i1l1163 0266                    i1l1077 00F2                    i1l1069 00DE  
                  i1l1085 0101                    i1l1093 02BF                    i1l1181 0284  
                  i1l1173 0271                    i1l1165 0267                    i1l1157 025B  
                  i1l1079 00F7                    i1l1183 028A                    i1l1175 0276  
                  i1l1167 026B                    i1l1191 0292                    i1l1159 0261  
                  i1l1097 029D                    i1l1185 028C                    i1l1177 027C  
                  i1l1169 026F                    i1l1099 02A1                    i1l1187 028F  
                  i1l1179 027F                    i1l1357 0109                    i1l1189 0291  
      __size_of_Select_ch 0090                 ??_derecho 0073              start_adc@isr 0026  
                  _toogle 007C                    saved_w 007E          __end_of_start_ch 01AD  
 __end_of__initialization 001B            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
       __end_of_Select_ch 00AF                __pbssBANK0 0020                __pmaintext 0219  
         _tabla7segmentos 00AF                __pintentry 0004        __size_of_izquierdo 000D  
      __size_of_start_adc 006C                 ?_start_ch 0070                 _ANSELbits 0188  
                 _derecho 029C                   __ptext1 013C                   __ptext2 01AD  
                 __ptext3 001F                   __ptext4 025B                   __ptext5 02B9  
                 __ptext6 029C                   __ptext7 00AF              __size_of_ISR 0041  
        Select_ch@channel 0028             start_adc@Vref 0027             start_adc@frec 002B  
    end_of_initialization 001B   __end_of_tabla7segmentos 013C                derecho@nlh 0076  
       __end_of_izquierdo 02C6         __end_of_start_adc 0219                ??_start_ch 0026  
               _PORTEbits 0009                 _TRISBbits 0086       start_initialization 0011  
             __end_of_ISR 029C          ?_tabla7segmentos 0070                 _Select_ch 001F  
             __pbssCOMMON 007C                 ___latbits 0002             __pcstackBANK0 0026  
              ?_Select_ch 0070                  ?_derecho 0070         __size_of_start_ch 0071  
               _nibble_LS 0024                 _nibble_MS 0025         interrupt_function 0004  
                _IOCBbits 0096                  _PIE1bits 008C           start_ch@channel 0028  
                _PIR1bits 000C                 _valor_act 0020                 _valor_ant 0021  
         start_adc@justRL 0028                 _izquierdo 02B9               _display_adc 007D  
              _ADCON0bits 001F                _ADCON1bits 009F                 _start_adc 01AD  
             ??_Select_ch 0026                ?_izquierdo 0070              derecho@adcHs 0075  
              ?_start_adc 0026          __size_of_derecho 001D                _ANSELHbits 0189  
                _auxiliar 0022             __size_of_main 0042                  _start_ch 013C  
              _INTCONbits 000B               derecho@temp 0077                  intlevel1 0000  
__size_of_tabla7segmentos 008D               ??_izquierdo 0073               ??_start_adc 0029  
